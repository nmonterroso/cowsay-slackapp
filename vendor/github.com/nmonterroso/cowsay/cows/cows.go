// Code generated by go-bindata.
// sources:
// cows/beavis.zen.cow
// cows/bong.cow
// cows/bud-frogs.cow
// cows/bunny.cow
// cows/cheese.cow
// cows/cower.cow
// cows/daemon.cow
// cows/default.cow
// cows/dragon-and-cow.cow
// cows/dragon.cow
// cows/elephant-in-snake.cow
// cows/elephant.cow
// cows/eyes.cow
// cows/flaming-sheep.cow
// cows/ghostbusters.cow
// cows/head-in.cow
// cows/hellokitty.cow
// cows/kiss.cow
// cows/kitty.cow
// cows/koala.cow
// cows/kosh.cow
// cows/luke-koala.cow
// cows/mech-and-cow.cow
// cows/meow.cow
// cows/milk.cow
// cows/moofasa.cow
// cows/moose.cow
// cows/mutilated.cow
// cows/puking-cow.cow
// cows/ren.cow
// cows/satanic.cow
// cows/sheep.cow
// cows/skeleton.cow
// cows/small.cow
// cows/sodomized.cow
// cows/squirrel.cow
// cows/stegosaurus.cow
// cows/stimpy.cow
// cows/supermilker.cow
// cows/surgery.cow
// cows/telebears.cow
// cows/turkey.cow
// cows/turtle.cow
// cows/tux.cow
// cows/vader-koala.cow
// cows/vader.cow
// cows/www.cow
// DO NOT EDIT!

package cows

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _beavisZenCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x0f\x22\xac\x42\x93\xde\x75\x03\xa2\x78\xf6\x2e\x81\x51\x34\x98\x82\x9a\xc5\xd6\x5d\x84\x90\xdf\xee\x24\x75\xed\xa6\x56\xd9\x77\x99\x32\xdf\x6b\x66\x32\x13\x29\x85\x94\xb8\x72\x0f\xdb\xae\x6f\xb0\xeb\x06\x8f\x3b\xf7\x86\x8d\xef\x5e\x42\x1f\x36\xfe\x13\xef\xee\x35\x6c\xdd\x93\x66\x9f\x38\x19\xbc\xa3\xc7\xb0\x83\xc1\x7a\x7d\x73\x7b\x7d\x21\x00\x70\x32\x7c\x3c\xfb\xa1\xc7\x5e\x44\xaa\x28\x25\xd5\x64\xc7\xdc\xd2\xac\x70\xa0\xd1\x32\xaa\x45\x2d\x6b\xc5\x9f\x0c\xe7\x3f\x2c\xce\x11\xb0\xfa\x0f\xc6\xe3\x60\xa1\x7c\x97\x65\x48\x11\x46\xe9\xf2\xa9\x4b\x8c\x07\x30\xc4\x36\xec\x1b\x26\x5d\xff\xc8\xf9\x34\x9d\x68\xed\xc4\x4e\x89\x65\x2f\xcf\xf2\x08\x29\xcd\xea\x21\x92\x31\x26\xa5\xa4\xef\x2b\x42\xa3\x34\xcf\xbb\x6e\xd1\xda\x6f\x44\xbf\x9b\x9f\x8a\x2f\x12\xa2\x56\x51\x5e\x23\x38\xd4\xac\x5a\x03\xe5\x0d\xf1\x43\x10\x5f\x01\x00\x00\xff\xff\xce\x93\x22\xc1\x48\x02\x00\x00")

func beavisZenCowBytes() ([]byte, error) {
	return bindataRead(
		_beavisZenCow,
		"beavis.zen.cow",
	)
}

func beavisZenCow() (*asset, error) {
	bytes, err := beavisZenCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "beavis.zen.cow", size: 584, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bongCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcf\xcd\x8a\x83\x30\x14\x05\xe0\x7d\x9e\xe2\x40\x5c\x28\xce\x98\x07\x18\x07\x66\x18\x66\xdd\x65\x37\xe2\x45\x6d\xaa\xa5\xb6\x01\xa3\x88\x70\xf1\xd9\x1b\x7f\x4a\x51\x7a\x96\x5f\xce\x09\x5c\x29\x85\x94\xf8\x45\x61\x7a\xf4\x97\xb6\x42\x86\xdc\xdc\xcb\x0f\x9c\x1b\x73\x43\x9d\x35\xf6\xa7\xb0\x5d\x16\xe5\xba\xb9\xea\x5a\x0f\x91\x3e\x75\x6e\x21\xbc\xb6\xd2\x34\x8d\xbe\x11\xc7\xff\x87\xbf\x2f\x81\x67\xdc\x93\xe9\xca\xaa\xb5\x2f\x7a\x6b\x40\x4a\x94\x62\x16\x5a\xa2\x7c\x4f\x0f\xda\x06\x42\x25\x89\xf2\xd7\x96\xf2\x89\x82\xa9\xc5\x38\x7e\xba\x30\x83\x47\x9e\x81\xe7\xc2\x02\xc0\x38\x6e\x7e\x5f\x71\x67\xc4\x30\x3b\x92\xac\x36\x42\xa1\x0c\x49\xb8\xa3\xc4\x23\x00\x00\xff\xff\xdd\x0d\x70\xf9\x1e\x01\x00\x00")

func bongCowBytes() ([]byte, error) {
	return bindataRead(
		_bongCow,
		"bong.cow",
	)
}

func bongCow() (*asset, error) {
	bytes, err := bongCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bong.cow", size: 286, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _budFrogsCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x3d\xaa\xc3\x30\x10\x84\x7b\x9d\x62\x41\x0f\x24\x15\x6b\x1d\xe0\x59\x4d\x42\x6a\x37\x29\x17\x36\x90\x28\x76\x2a\x81\x7f\x70\x63\x72\xf6\xac\x1c\xb0\x0c\xf1\xa0\x42\x33\xf3\x0d\x08\x69\xad\xb4\x86\x6b\x17\xe1\x34\x3d\xe6\xf8\x1a\x62\x0f\xcf\x3e\xb5\x83\xc4\xea\x6f\xec\x22\xdf\xd3\x0c\x01\xea\xfa\xd2\x9c\xff\x15\x64\x49\x9c\xa6\xb6\x1b\x87\xaf\xfd\xf1\x59\xa9\x71\x58\xc1\xb1\x2a\xb4\x4d\x2a\xac\x67\x06\x60\xa2\x43\xd6\xe7\x4e\xca\x82\x67\x90\xc8\x02\x2c\xab\xb5\xee\x6d\xdd\x56\x4a\xe6\xbc\xac\x76\x2f\x21\x62\x5e\x64\xb4\xe2\x16\x99\x19\x5d\xc1\xfd\xc2\xbc\xa7\x8d\x1c\x44\x93\xaf\x21\xdc\xd0\x84\xb0\x35\x6b\x6c\x94\xfc\x83\xfa\x04\x00\x00\xff\xff\xe1\x43\x80\x72\x36\x01\x00\x00")

func budFrogsCowBytes() ([]byte, error) {
	return bindataRead(
		_budFrogsCow,
		"bud-frogs.cow",
	)
}

func budFrogsCow() (*asset, error) {
	bytes, err := budFrogsCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bud-frogs.cow", size: 310, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bunnyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\x54\x48\x2e\x2d\x49\x55\xc8\xc9\x2c\x29\xc9\x49\x55\x28\x4f\x4c\x4a\xca\x2c\x01\x8a\x73\xa9\x94\x64\xa4\xc6\x27\xe7\x97\x2b\xd8\x2a\xd8\xd8\xb8\xfa\x3b\x5b\x73\x29\x28\x00\xc5\xf2\x4b\xd3\x33\x4a\x8a\x81\x6c\x04\x07\xc8\x8e\x89\x01\x89\x80\x41\x4c\x8c\x82\x3e\x12\x57\x43\x41\x13\xca\xd6\xd3\x50\xc8\x57\xd0\xd4\xe3\x02\x9a\xc5\x05\x08\x00\x00\xff\xff\x1b\xc1\x58\x47\x7b\x00\x00\x00")

func bunnyCowBytes() ([]byte, error) {
	return bindataRead(
		_bunnyCow,
		"bunny.cow",
	)
}

func bunnyCow() (*asset, error) {
	bytes, err := bunnyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bunny.cow", size: 123, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cheeseCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\x3f\x8f\x83\x30\x0c\xc5\x77\x7f\x8a\x27\xe5\x74\x03\xd2\xc9\xb7\x1f\x37\x55\x9d\xbb\x74\x8c\xc4\x80\xd2\xa6\x6a\x11\x52\xa1\xea\xe2\x0f\x5f\xc7\x81\x42\xe9\x9f\x37\xf0\xc8\xfb\x61\x3b\x21\xce\x91\x73\xd8\xc6\x80\x3a\x86\xd0\x05\xec\xce\x6d\x83\xe6\x70\x3a\xe2\x7b\x88\xf4\x03\xfa\xea\x63\xa8\xea\xf6\x8a\x7f\x94\xe5\x7a\xb3\xfa\x23\x00\x1a\xb6\x97\x7d\xec\xbb\xb4\x58\xac\x80\x2a\x69\xf4\xa4\x9c\xb3\x3d\xbd\xaf\xf2\x4b\x92\x18\x11\x2c\x25\x9f\x81\xe5\xce\x39\xef\xb5\xab\xba\x45\x13\xc1\x6f\x1a\xc3\xe6\x23\xe1\x17\xbd\x12\xe0\x69\x48\x79\x07\xda\xd7\x7b\x92\x37\x45\x5a\x26\x43\x95\x1e\x26\x8b\xf3\xec\x39\x7b\xac\x62\x30\xb1\x3c\x13\xcd\x6c\xe3\x3f\x0b\x09\xcd\x27\x4e\x07\x34\x15\x45\x31\xd8\x18\xb1\xee\xc1\xfe\x86\x39\xe9\x3d\xd1\x2d\x00\x00\xff\xff\x4e\x66\x60\xe9\xe0\x01\x00\x00")

func cheeseCowBytes() ([]byte, error) {
	return bindataRead(
		_cheeseCow,
		"cheese.cow",
	)
}

func cheeseCow() (*asset, error) {
	bytes, err := cheeseCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cheese.cow", size: 480, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cowerCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\x54\x48\xce\x2f\x4f\x2d\xca\xcc\x4b\x07\x31\x80\x22\x5c\x2a\x25\x19\xa9\xf1\x40\xb6\x82\xad\x82\x8d\x8d\xab\xbf\xb3\x35\x97\x02\x08\x00\x85\xf3\x4b\xd3\x33\x4a\x8a\x21\x5c\x0c\xbe\x82\x82\x4e\x7c\xbc\x8e\x42\x0d\x88\x55\xa3\x00\x17\xd4\xc8\xcf\xd7\x8c\x89\x81\x88\xc6\xc7\xc7\x23\xc4\xe3\xe3\xe1\xe2\x40\x0c\x64\x23\xe4\x14\x60\xa2\x40\x2d\xe5\x20\x46\x4c\x0c\x36\x39\x20\x02\x31\xb4\xb8\x50\x25\x9d\x41\xfe\xd1\x03\x02\x2e\xa0\xe3\xb9\x00\x01\x00\x00\xff\xff\x4d\x5b\x2b\x58\xe6\x00\x00\x00")

func cowerCowBytes() ([]byte, error) {
	return bindataRead(
		_cowerCow,
		"cower.cow",
	)
}

func cowerCow() (*asset, error) {
	bytes, err := cowerCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cower.cow", size: 230, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daemonCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\xb1\x6e\xec\x20\x10\xec\xf9\x8a\x91\xfc\x24\x8c\x64\xa0\xf1\xab\x62\x5f\x13\xa5\xf6\x0f\xa0\x80\x14\x45\xb9\xee\x8a\x5c\x94\x22\xfe\xf8\xcc\xae\xcf\x3e\xb8\x0c\x2e\x60\x66\xd9\x9d\x41\xee\x3a\xd3\x75\x18\xc3\x88\xd3\x09\xff\xc3\xc8\x93\xf9\x77\x3d\xbf\xe7\xb7\xcb\x37\x66\x4c\xd3\xcb\xf2\xfc\x64\x00\x90\xbc\x7c\x7d\x9c\xaf\x9f\xd8\x31\x1c\x1b\xd1\xff\x14\xc4\x7e\xd7\x5d\xd1\x82\xc7\x8a\x94\xf8\xe5\x9c\xa5\x16\xab\x41\x85\xe8\x41\xba\xf8\x08\xd8\x5a\xe8\x63\x4a\x71\xbb\x28\x55\x29\xd5\x62\xe4\x02\x56\x94\xad\x79\x2d\x2d\x5c\xf4\xa1\x05\xed\xa8\xe2\x5f\xbd\xb7\x65\xd2\x43\x3d\xab\xcf\xc1\x41\x5c\x38\x69\xdd\x5c\x09\x34\x1d\x75\x4a\xc3\x4b\x33\x81\x25\x3d\xc9\x26\x28\xc9\x80\x11\x9a\x92\x9e\x94\x5f\x67\x62\x71\xce\xcd\xb3\x23\x49\x5b\x42\x6c\x9a\xbd\xf5\xb1\x3a\x66\xb0\x0f\x41\x24\xdf\xbe\x69\xf9\xed\x49\x5a\x53\x59\xd1\x33\x8b\xbc\x8e\x3e\x36\x71\x93\xd9\x1b\x83\xdf\x67\xae\xf7\x36\xe6\x08\xf3\x93\x0f\xb8\xbb\x1e\x0d\xff\x09\xf3\x1b\x00\x00\xff\xff\x52\xf9\x4e\xb9\x39\x02\x00\x00")

func daemonCowBytes() ([]byte, error) {
	return bindataRead(
		_daemonCow,
		"daemon.cow",
	)
}

func daemonCow() (*asset, error) {
	bytes, err := daemonCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "daemon.cow", size: 569, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x51\x72\xf5\x77\x56\xb2\xe6\x52\x80\x02\xa0\x5c\x7e\x69\x7a\x46\x49\x31\x90\x1d\x17\x1f\x1f\x07\x97\x40\x96\xd1\x50\x49\xad\x4c\x2d\xd6\x8c\x89\x89\x87\x00\x84\x22\x20\xd0\x88\x8f\x07\xca\x40\x39\x40\x96\x7e\x4c\x0c\x8a\x3c\xd0\xa0\xfc\xbc\xf4\xd2\x54\x85\x9a\x1a\x5d\x20\x28\x57\xa8\x41\x95\x06\x82\x9a\x1a\x28\xc5\x05\x74\x1c\x17\x20\x00\x00\xff\xff\x0e\xf7\xd0\xca\xaf\x00\x00\x00")

func defaultCowBytes() ([]byte, error) {
	return bindataRead(
		_defaultCow,
		"default.cow",
	)
}

func defaultCow() (*asset, error) {
	bytes, err := defaultCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default.cow", size: 175, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dragonAndCowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\xd4\xc1\x8e\xaa\x30\x14\x06\xe0\x3d\x4f\x71\x6e\x70\xa1\xc4\xb6\xec\xf5\x26\x9a\x9b\xbb\xf6\x05\x1a\x0f\x8a\x8d\x12\x1d\x99\x08\x64\x62\x44\x9f\x7d\x4e\x5b\x8a\x45\x91\x92\x14\xc2\xf4\xff\x7a\x5a\x3a\x86\x61\x10\x86\xb0\x84\xdd\x65\xb3\xcf\xcf\x50\x7c\x65\x65\x76\xde\xc3\x06\xd2\xfc\x67\x0a\xdf\x79\x51\x64\xdb\x93\x82\xf4\xa2\x76\x59\x09\x65\x0e\xc7\x6a\xab\x16\x69\x51\x6d\xf8\x56\x5d\x8e\xea\xa4\xae\x5c\xed\x2a\x42\x82\x51\x79\x50\x48\x31\xf8\x0b\xf3\xf9\xff\xd5\xbf\x59\x00\xfd\x8d\x06\xe6\xd5\xfe\x50\x16\x7d\x7f\x5c\xeb\x4e\xac\x3f\x65\x87\xc2\x02\xa4\xa4\x5e\xdf\x3e\xc6\x3b\xf9\x5a\x4a\x44\x14\xb5\x8b\x03\x25\x29\x0e\x7c\x08\xf0\x05\xb1\x02\x58\xe9\x14\xa2\xcd\xeb\xd9\xa1\xd6\x75\xe8\x52\xda\x16\x31\x6a\xd1\x80\xd9\xa4\x75\x4f\x25\x60\x4b\x91\x65\x24\x5f\x33\xcf\xf5\x20\x26\x17\xb4\x2e\xb9\x48\xec\x70\x81\x4e\xd3\x9c\xcd\x7b\x20\x0d\x30\xf5\x0e\x89\xb1\x88\xdd\x36\x59\xd0\x72\xc6\x6b\xac\x8e\x08\x03\x9e\xb6\x7c\xcf\x6c\xba\xe5\xac\xe7\xa8\x56\xac\x3f\xad\xd7\x51\xb1\xc0\x1a\xcd\x16\x8e\xdd\x4a\x5b\xcc\x31\xd8\xdc\xe9\xad\x78\xc7\x9e\x52\x2c\x12\x31\x45\xa0\x8b\x9c\x09\xcc\x80\xf1\x16\x43\xad\x70\xf6\x68\x42\x7a\xa2\x1e\xcb\x6f\x53\x76\x77\x8f\x68\x6f\x11\xe3\x35\x11\x56\x6d\x1a\x37\xe2\xa3\x43\xb5\x9b\x80\xe8\x16\x04\x89\x70\x7b\x22\xde\x66\xd2\x22\x42\x5b\xdc\x4b\x5d\xe6\xa4\xe3\x78\xa4\xae\xaa\x98\x78\xef\x23\x5d\xc6\xdd\x1f\x79\xeb\x59\xc5\x0b\x36\x36\x1d\x63\x1e\xc4\xf5\x09\xa7\x12\x9e\xa7\x40\x4a\x96\xbc\x41\xbc\xbb\x46\xfa\x56\x74\x4e\xa5\x3d\x2f\xf4\x3f\xb4\x4c\x8f\x7f\xcc\x5b\x61\x3c\xce\xe7\x4f\xad\x93\x43\x60\x5d\xc9\x7e\x74\x4b\xbd\xcc\x20\x18\x37\x9f\xd3\x5d\xb7\x35\xb0\xe6\x7a\x04\xf4\x3b\x15\xfc\x06\x00\x00\xff\xff\x2a\x85\x47\x5a\x04\x05\x00\x00")

func dragonAndCowCowBytes() ([]byte, error) {
	return bindataRead(
		_dragonAndCowCow,
		"dragon-and-cow.cow",
	)
}

func dragonAndCowCow() (*asset, error) {
	bytes, err := dragonAndCowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dragon-and-cow.cow", size: 1284, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dragonCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\x4f\x6b\xe3\x30\x10\xc5\xef\xfe\x14\x0f\xbc\x90\x18\x22\x29\xf7\x64\x97\xc0\xee\x9e\x7b\x29\xf4\x22\x3c\x09\xc1\xc4\xbd\x34\xa5\x49\xe9\x21\x8e\x3f\x7b\x67\x34\x92\xa2\xfc\x39\x55\xa6\x53\x23\xfd\xde\x7b\x33\x32\xa9\xeb\xaa\xae\xf1\xdc\x77\x78\xe9\x5f\x8f\xdd\xe1\x7d\xb3\xed\xf0\xef\x63\xb3\xdb\xbf\xf1\x41\xf5\xeb\xd8\x77\xb4\xdd\x7f\xe1\x37\x96\xcb\xff\x4f\x7f\x17\x15\xc2\xe2\xfd\xfd\xe7\xae\x3f\x1e\xf0\x60\x39\x78\xcf\xd5\x79\x1f\xe9\x6b\x7c\xf0\x9e\x88\xdc\x90\x60\x30\xee\x9c\xd4\x8b\x40\x8f\xe6\xc0\x5c\xf6\x89\x94\x83\x60\x83\xb8\x4b\x00\x50\x5d\x85\xc6\xca\x66\x94\x61\xa6\x03\x2b\x7f\x25\xed\x57\xd4\x92\x5f\x4d\x62\x3a\x25\x5c\x78\x35\xe7\x72\x65\xef\x58\xa0\x19\x81\x57\x3a\xe0\xb1\x99\xa2\xf9\x29\x1f\x37\x18\x72\x18\x8f\xa7\x78\xdc\x53\xc1\x45\xc1\x3c\x58\x40\x03\x85\x31\x9a\xd4\x4c\x16\x24\x05\x45\x89\x04\x88\x62\xe2\x66\x04\x7e\x9c\x6c\x2d\x60\x6c\x96\x90\xb0\xd6\x8c\xa9\x07\x7e\x1d\xc7\xd6\x58\x96\x4f\x43\x1c\x9a\x06\x33\x73\x4a\xe7\xa4\xff\xd6\xc6\x0e\x8c\xaa\x51\x92\x66\x13\xac\x59\x3f\xd5\x70\xd1\x73\x7e\x6c\x0c\x0e\xb7\x4b\x4c\x08\xb9\x05\x7e\x69\xc5\x56\x26\x08\x16\xea\xa0\xae\x5c\x4e\xa5\xf6\x7c\xe7\x96\x13\xf4\x6b\xa6\x31\xa2\x85\x35\xbc\x38\x30\x75\x23\x88\x99\xdc\x59\x14\x93\x08\xc9\xb9\xde\xeb\x9d\x94\x39\xce\x05\x3b\x6b\xff\x94\x70\xb1\x08\x97\x7b\xcd\x03\xb4\x66\x2d\x85\xaa\xdb\xb6\x9d\x33\x36\x7c\xa4\xf4\x9c\x5b\x98\xf8\x8c\x0f\xe6\x94\x9b\x33\x98\xf1\x7d\xdd\x5a\xfd\x60\x39\xb1\xe1\xdf\x6d\xf5\x1d\x00\x00\xff\xff\x3c\xf8\xd2\x02\xe8\x03\x00\x00")

func dragonCowBytes() ([]byte, error) {
	return bindataRead(
		_dragonCow,
		"dragon.cow",
	)
}

func dragonCow() (*asset, error) {
	bytes, err := dragonCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dragon.cow", size: 1000, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _elephantInSnakeCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xcd\xaa\xc2\x30\x10\x85\xf7\xf3\x14\x07\x72\xd7\xf3\x02\xb7\x22\x52\xbb\xe8\xca\x85\x0f\x20\xc1\x0e\x26\x58\x26\x85\x8c\xd4\xc7\x37\x82\x52\xfb\xf3\xad\x72\xce\x07\x27\x8c\x73\xe4\x1c\x8e\x09\xa3\x40\x45\x3a\x58\x82\x3c\x87\xde\x47\x85\x85\x98\xf7\x45\xd3\x9f\x05\xb9\x5c\xd3\x88\x1d\xaa\xaa\x39\xd5\xff\x04\xa0\x94\xe9\x71\x0b\x96\xdf\x61\x4a\x98\xc1\x85\xcf\x93\x16\xf5\x57\xf1\x4a\xf3\x6c\x61\xa9\x19\x5b\x9a\x7f\x27\x57\x1f\x4d\x7a\x13\xa2\xa6\x97\x21\x78\x35\x44\xcd\xb1\x13\x1c\xce\x75\xdb\x22\xab\xbf\x0b\x95\x83\xe9\x15\x00\x00\xff\xff\xb2\x24\x3d\x22\x27\x01\x00\x00")

func elephantInSnakeCowBytes() ([]byte, error) {
	return bindataRead(
		_elephantInSnakeCow,
		"elephant-in-snake.cow",
	)
}

func elephantInSnakeCow() (*asset, error) {
	bytes, err := elephantInSnakeCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "elephant-in-snake.cow", size: 295, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _elephantCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\xc1\x0a\x02\x21\x10\x86\xef\xf3\x14\x3f\xd8\x61\xf7\xe4\x03\xb4\x1d\x22\x3a\xef\x0b\x0c\x88\x95\xe4\xa1\x34\xc8\xa5\x8b\x0f\xdf\xa8\x2b\x51\x97\x66\xe0\xe7\xf3\xfb\x51\x50\x29\x52\x0a\xfb\x00\x77\x73\x0f\x6f\x43\x42\x5c\x12\x6c\xb8\xc0\x9e\x84\xa4\xa4\x4d\xf2\xce\x9c\xe3\x0b\x3b\x4c\xd3\x71\x3e\x6c\x09\xa2\xe2\x72\xf5\xe9\x89\x32\x9a\x19\x30\xc6\x54\x22\x7c\xb5\x5a\x83\x59\x0b\x94\x64\xae\xbd\xcc\x30\x94\x9c\x65\x65\xc6\xb1\xc9\xda\x43\xaf\x28\x57\x57\xdd\x5e\xc8\xb2\x95\xba\x2d\xe7\xdc\xe2\xaf\x43\xc4\xaf\xcb\x3d\x3f\xee\x9e\x7b\x92\xfc\x93\xde\x01\x00\x00\xff\xff\x84\x63\x75\x0a\x1c\x01\x00\x00")

func elephantCowBytes() ([]byte, error) {
	return bindataRead(
		_elephantCow,
		"elephant.cow",
	)
}

func elephantCow() (*asset, error) {
	bytes, err := elephantCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "elephant.cow", size: 284, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _eyesCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\x2d\xcb\xcc\xd1\xcd\xc9\xcf\xcf\xce\xcc\x4b\x57\x48\xad\x4c\x2d\x06\x0a\x72\xa9\x94\x64\xa4\xc6\x27\xe7\x97\x2b\xd8\x2a\xd8\xd8\xb8\xfa\x3b\x5b\x73\x29\x00\x01\x50\x34\xbf\x34\x3d\xa3\xa4\x18\xcc\x43\xe7\xe2\x07\x7a\x56\x56\x8a\x10\x60\xa5\x07\x54\xaf\x07\x65\xe2\x56\xae\x88\x04\x80\x1a\xea\x80\x00\xc2\xc1\xd4\x83\xa4\x38\x34\x3c\x3c\x3c\x46\x05\x04\x15\xa0\xae\xb2\x02\x71\xfc\xc2\x23\x80\xb6\x61\xd1\x12\x11\x0a\x53\x8f\x0c\x03\x60\x9a\x11\x42\xca\xca\x40\x23\xa0\x26\xe8\xd9\x40\xac\x82\xc9\x29\x21\x2b\x84\x2a\xc7\x34\x01\xc6\x0e\x8d\x00\xb9\x0a\x59\x3f\xb2\x1a\x05\x13\x04\x4f\x0b\x66\x48\x1c\x84\xef\x84\x64\x5c\x0c\x9a\xe9\x18\xe6\xa4\x80\xe8\x20\x25\x05\x78\xe4\x28\x69\xc5\xa8\x24\xa5\x20\xa9\x00\x02\x75\x2d\xec\xfa\xf3\xb5\x95\x91\x74\x42\xb4\x03\x01\x2a\x0f\x24\xc0\x05\x4c\x1c\x5c\x80\x00\x00\x00\xff\xff\x8d\x78\x2f\x25\x49\x02\x00\x00")

func eyesCowBytes() ([]byte, error) {
	return bindataRead(
		_eyesCow,
		"eyes.cow",
	)
}

func eyesCow() (*asset, error) {
	bytes, err := eyesCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "eyes.cow", size: 585, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flamingSheepCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd0\x4d\x6b\x83\x40\x10\x06\xe0\xbb\xbf\xe2\x05\x03\x26\x60\xa6\x77\x93\x42\xa0\x94\x1e\x0b\xa5\x39\x08\x82\xeb\xc7\x54\x87\xa6\x6e\xf1\x83\x22\x2c\xfd\xed\x5d\x95\x18\x6d\xfb\xee\x30\x2c\xe3\xc3\x80\xeb\xba\x8e\xeb\xe2\xb5\x64\xbc\x5d\x92\x0f\xa9\x0a\x34\x25\xf3\xa7\x8f\x4c\x57\x6d\x2d\x69\xd7\x72\x8e\xb4\xc7\x13\xeb\x3a\x4f\x2a\xbc\xe8\x26\xa9\x45\x63\x5b\x4c\x83\x53\xd6\x74\x09\xa5\x5c\xbf\xf3\x85\x7b\xe2\xbc\xdb\xd9\x85\xce\xa6\x2d\x39\xce\xf4\x17\xee\x71\x3c\x3e\x3e\x3f\x1c\x1c\xc0\xce\x74\x57\x94\x6d\x83\x45\x68\x6e\x63\xb7\xec\xb7\xa3\xa1\x26\xa1\x00\x7f\xbc\x0c\x6c\xed\xe8\x30\x98\x00\xe4\xd9\x36\x15\x4d\x6c\xe5\x84\x48\x05\x10\x65\x2f\x42\xbe\xd8\xc1\xcc\x56\x4e\xf9\xfb\x3d\x19\x81\x11\x23\x53\x05\x57\x36\xe6\xbc\xe1\x9e\x9b\x73\x14\x91\x17\x9d\x6e\x47\x91\x31\xde\xd2\x45\x51\x1c\xdf\x6d\x97\xe4\x7a\x76\x1e\x56\x1b\xc7\xfc\x91\xbb\xf9\x6f\x97\x51\x61\xf8\x6d\x13\x86\xde\xbf\x9f\x61\xcc\xad\xc3\xb1\xcf\xef\xfc\x04\x00\x00\xff\xff\xdb\x1d\xe2\x09\xe7\x01\x00\x00")

func flamingSheepCowBytes() ([]byte, error) {
	return bindataRead(
		_flamingSheepCow,
		"flaming-sheep.cow",
	)
}

func flamingSheepCow() (*asset, error) {
	bytes, err := flamingSheepCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flaming-sheep.cow", size: 487, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ghostbustersCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x93\xcf\x6a\xc3\x30\x0c\xc6\xef\x7a\x0a\x2d\x19\xac\x39\xb8\x7a\x80\xb5\xbd\x8c\xb1\x63\x4e\x2b\x3d\x04\x04\x1b\x65\xb9\x05\x96\x74\x7b\xfd\xca\xb2\xa3\xd8\x71\xfa\x41\x4b\x22\x7f\xbf\xea\x5f\x5d\xd7\x50\xd7\xf8\xd1\x0f\xe3\xf4\x75\x1b\xa7\xeb\xef\xf8\x24\x01\x78\x9e\xfa\x2b\x7f\x0f\xff\x78\xc4\xc3\xe1\xbd\x7d\x7b\x05\x34\xc9\xd9\x70\xfb\xe9\xa7\x31\x89\x6d\x07\x97\xe8\x12\x62\x76\xce\x31\x67\x36\x3b\x73\xf1\x81\xbc\xc5\x6b\x6d\xf3\xf4\x0e\x49\x9f\xbb\x0e\x9b\xcb\xa2\xae\xfb\xdb\xe7\xf6\xbd\x93\xf0\x4e\x1e\xda\xf0\x49\xdd\x5e\x2e\xb3\x53\x34\x7b\x7d\xea\x77\x33\x1f\x59\x06\xc8\xed\x0b\x10\xd5\x48\xdd\x66\x5f\x23\x81\x20\x8c\x4c\x6b\x39\x82\x55\x3b\x2a\xa0\xc8\x60\xec\x39\x2b\x48\x09\xe6\x19\x5b\x41\x17\x66\xda\x20\x30\xce\x4e\xf7\xe0\x4e\x80\xba\x8e\x50\xf5\x43\x42\xd3\x58\x1f\xa0\x11\xd9\x95\x27\x3d\x21\x3c\xc9\x36\xd6\x49\x42\xd5\xec\x33\xd1\x11\xc2\xef\x38\xef\x0b\xc4\x46\x59\xaa\x17\xa9\x28\x1e\x80\x95\x2b\x1c\xe9\x68\x36\x91\x7c\xc4\x90\xb4\x69\x9b\xd0\xb7\xc7\x0c\x25\xab\x9d\xa9\xf0\x76\x2a\x08\x2e\x11\x83\xe6\x91\xa4\x76\x8e\xfd\xe4\x00\x3a\xfb\x1f\xe6\x9a\xa7\xe2\x8a\x3b\x92\xb4\x53\x88\x36\x6e\x54\x55\x9d\x4b\xe3\xb9\xaa\x40\x6e\x34\xdc\x03\x00\x00\xff\xff\x75\xbe\x1e\x47\xfa\x03\x00\x00")

func ghostbustersCowBytes() ([]byte, error) {
	return bindataRead(
		_ghostbustersCow,
		"ghostbusters.cow",
	)
}

func ghostbustersCow() (*asset, error) {
	bytes, err := ghostbustersCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ghostbusters.cow", size: 1018, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headInCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\xaa\x83\x40\x0c\x86\xf7\x39\xc5\x0f\xe3\x42\x17\xef\x79\x80\xea\xaa\x94\x2e\x7b\x01\x31\x88\x0d\x2a\x05\x07\xaa\x22\x42\x0e\xdf\xe0\xcc\x50\xe8\xb7\x99\x24\x5f\x7e\xc2\x38\x47\xce\xe1\xee\xb1\xac\x53\xff\xc2\x21\x6f\x8c\xd2\x3d\x31\xcd\xe8\xd0\xfb\xfd\xdf\x34\x65\xeb\x28\x6c\x0d\x6a\x54\xd5\xed\x71\xbd\x10\x0c\x9b\xfa\x6d\x18\xd7\xe5\xec\x7e\xda\x96\xb9\x45\xa2\x3c\x47\x79\x26\x87\x2c\x45\xd3\x70\xa0\x04\x38\x11\x16\x98\xcd\xc6\x4c\x51\xe7\xc1\x2b\x23\x46\xe8\xbc\xe2\xe7\x61\x13\xab\x54\xff\x8c\x1d\x0a\xf3\x88\xb9\xb8\x09\xa5\x74\x5b\xf5\xfb\xc4\x3a\x09\xb2\xaf\xd0\x27\x00\x00\xff\xff\xbb\x32\x9d\xe1\x01\x01\x00\x00")

func headInCowBytes() ([]byte, error) {
	return bindataRead(
		_headInCow,
		"head-in.cow",
	)
}

func headInCow() (*asset, error) {
	bytes, err := headInCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "head-in.cow", size: 257, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hellokittyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\xf0\x48\xcd\xc9\xc9\x57\xf0\xce\x2c\x29\xa9\x04\x72\xb9\x54\x4a\x32\x52\xe3\x93\xf3\xcb\x15\x6c\x15\x6c\x6c\x5c\xfd\x9d\xad\xb9\x14\x14\x80\x62\xf9\xa5\xe9\x19\x25\xc5\x40\x36\x2a\x07\x08\xf4\x63\x62\xe2\x35\xf3\x6d\x20\xbc\x1a\x88\x58\x4c\x0c\x8c\xeb\xaf\xa0\xa7\xe0\x5f\xc3\x05\x13\x8e\x07\x01\x7d\x2e\xa0\xb9\x5c\x80\x00\x00\x00\xff\xff\xad\x2d\x8f\x45\x7e\x00\x00\x00")

func hellokittyCowBytes() ([]byte, error) {
	return bindataRead(
		_hellokittyCow,
		"hellokitty.cow",
	)
}

func hellokittyCow() (*asset, error) {
	bytes, err := hellokittyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hellokitty.cow", size: 126, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kissCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x91\x82\x14\x47\x8a\xe3\x3b\x2e\x07\x84\x38\xf3\x03\x96\x1c\xa8\x22\x7a\x00\x05\xb5\x05\x2e\x2b\x7f\x3b\x5e\xaf\xdb\x38\x2d\x9d\x43\x2c\xef\xdb\x9d\x8c\x9d\x34\x8d\x6a\x1a\x3c\xe2\x63\xfe\x99\xf6\x87\x16\xd3\xe7\xd7\xdb\xfe\x75\x3b\xa5\xaa\xba\x3b\xee\xa6\xb0\x9d\x7f\xf1\x80\xcd\xe6\xf9\xe5\xc9\x29\xb0\x52\x79\xfe\x7e\xdf\x1d\x0f\xb2\xbd\xda\x17\xf5\x4e\xd4\xaf\xca\x6e\xd1\x0a\xe4\x4a\x1b\x58\xae\xbd\x00\xda\x76\x49\xa4\xb5\xf7\x35\x09\x89\x64\x11\xe3\x8a\x58\x50\xf0\x37\x24\x6d\x83\x31\x51\x03\xde\x23\x76\x95\x94\x4c\xb3\x12\xc2\xe8\xbd\xd1\x8b\xce\xe3\x24\x8f\x91\x7b\xd0\x81\xf2\x9a\x47\xa9\xc4\x28\x1d\x18\x07\x04\xcb\x66\xf9\x60\x29\x57\x49\x99\x79\xcf\x0e\xb1\xbe\x1c\x7b\x3a\x04\x9d\x22\x9c\xad\x6b\x4c\xec\x9b\xe3\xd1\x7f\x10\x88\x46\xf0\x95\xaf\x04\x89\x43\xb0\x11\x26\xf4\xa9\x52\xdf\x29\x19\x96\x1c\x47\x86\x5b\xe7\x56\x91\x78\xb9\xe7\x0f\x55\xdc\x96\x77\xda\xaa\xa7\x14\xd5\x6a\xf0\x12\xa6\xff\x49\xfd\x05\x00\x00\xff\xff\x08\x80\xc9\x3b\x7d\x02\x00\x00")

func kissCowBytes() ([]byte, error) {
	return bindataRead(
		_kissCow,
		"kiss.cow",
	)
}

func kissCow() (*asset, error) {
	bytes, err := kissCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kiss.cow", size: 637, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kittyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x4f\x3d\x4f\xc4\x30\x0c\xdd\xf3\x2b\x1e\x17\x24\x37\xa7\xc4\x5d\xd8\xae\x0c\x08\x31\x30\x31\x33\x39\x12\x2a\x34\x6a\xd5\x48\x34\x88\xbf\x8f\xdd\x82\x18\x2e\x4b\xf2\x9e\xdf\x47\xec\xbd\xf3\x1e\x0f\x98\x4b\x6b\xe3\x8a\xfa\x8e\xad\x7e\xb6\x2d\xe2\x19\x6d\x2a\xeb\xac\x53\x77\xdb\xa6\x51\xde\xea\x37\xee\x31\x0c\x4f\x2f\x8f\x17\x07\x3b\x4a\xd7\xaf\x8f\xa9\x6d\x07\xbc\xc2\xe8\x4e\x39\x11\x40\xa9\x3f\x05\xb0\x88\x30\x27\x25\x08\xca\xb3\xfc\xa9\x80\x8c\xb3\xe0\x0c\x84\x1d\x24\x36\xeb\x31\x51\x9b\x49\x85\x91\xc3\xbf\xbe\x93\x57\xe1\xa0\x39\x2c\x38\x5c\x99\x25\xe3\xa2\x77\x86\xda\x39\xd1\xaf\x58\x1b\x35\x30\x91\x35\x4b\xaf\x44\x6f\x1f\x10\x30\x21\xde\xb9\xbd\xa7\x60\x41\x88\x89\xc8\xc0\x82\x12\xe2\xfe\xea\x70\x63\x39\x16\xe2\x74\x65\xf7\x13\x00\x00\xff\xff\xfd\x90\x05\xfb\x28\x01\x00\x00")

func kittyCowBytes() ([]byte, error) {
	return bindataRead(
		_kittyCow,
		"kitty.cow",
	)
}

func kittyCow() (*asset, error) {
	bytes, err := kittyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kitty.cow", size: 296, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koalaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\x2b\xca\xcf\x55\x28\xc9\x48\x55\x48\x4e\xcc\xcb\xcf\xcb\x4c\x4e\xcc\x51\xc8\xce\x4f\xcc\x49\x54\x48\xce\xcf\xc9\x49\x4d\x2e\xc9\xcc\xcf\x03\x2a\xe3\x52\x01\x2a\x89\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x50\x00\x8a\xe5\x97\xa6\x67\x94\x14\x03\xd9\xa8\x1c\x10\x88\x8f\x8f\x57\x50\x80\x70\xaa\xeb\xf4\xe2\xf5\xea\x6a\xa1\x32\x1a\x0a\x91\x0a\x9a\x10\xb6\x86\x66\x9d\x56\x9d\x86\xa6\x02\x4c\xa1\x46\xbc\xa6\x2e\x10\x83\xf8\x40\x3b\xb8\x00\x01\x00\x00\xff\xff\xe3\xfe\x84\x25\xa2\x00\x00\x00")

func koalaCowBytes() ([]byte, error) {
	return bindataRead(
		_koalaCow,
		"koala.cow",
	)
}

func koalaCow() (*asset, error) {
	bytes, err := koalaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "koala.cow", size: 162, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koshCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xb1\x0e\xc2\x30\x0c\x44\x77\x7f\xc5\xa1\x20\x31\xfa\x03\x68\xa7\x8a\x01\x31\xf0\x03\x91\x22\x84\x10\xdd\x32\x24\xa8\x03\xe6\xdf\x71\x42\x20\x2d\x44\x78\xb8\xdc\xdd\x6b\xdd\x2a\xc6\x90\x31\xd8\xc7\x4d\xc0\x09\x07\x1f\x46\x0c\x7e\x5a\x69\x47\xeb\x38\x5e\xdc\xd9\x4f\xe8\xd1\x75\xbb\xe3\xb0\x25\xe8\x68\xeb\x6f\xd7\x31\x86\x9c\xbe\xe3\x22\x3b\xe7\x5e\x65\x72\xc5\xeb\x49\x60\x35\xd6\xe6\xcc\x59\xa4\x38\x6b\x49\x72\x2d\x1f\x94\x6c\xe9\x2a\xe3\xb4\x8f\x31\x63\x59\xeb\x03\x52\xcf\x9f\x97\x05\xf7\x87\x0a\xa3\xc5\xd2\x62\x61\xb4\x98\x4a\xdf\xcf\x3f\xf7\x66\xfa\xdb\xae\x0e\x63\x09\x1b\xf3\x9f\xe9\x55\xd3\x33\x00\x00\xff\xff\xb0\xfb\x48\xf0\x96\x01\x00\x00")

func koshCowBytes() ([]byte, error) {
	return bindataRead(
		_koshCow,
		"kosh.cow",
	)
}

func koshCow() (*asset, error) {
	bytes, err := koshCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kosh.cow", size: 406, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _lukeKoalaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xc1\xca\xc2\x30\x10\x84\xef\x79\x8a\x81\xfc\x87\xe6\x07\x9b\x07\xb0\x9e\x44\x2f\x0a\x1e\x3c\x79\x5a\x42\x08\xb6\x34\x76\xa1\xb6\x14\x11\xf3\xec\x2e\x34\xc4\x85\x5d\xe6\xdb\x99\xc3\x68\xad\xb4\xc6\x71\xe4\x07\xa6\x36\xc0\xbb\x81\x87\xce\xbb\x88\x9e\x5d\x74\xf0\x1c\x63\xf0\x53\xc7\x83\xc4\xd4\x9f\x44\xc8\xf3\x82\x1d\x9a\xe6\x70\xd9\x6f\x15\x20\x3f\x9e\xef\xed\xf4\x14\xfd\x03\x94\xa9\x55\x16\x44\x24\xd7\xda\x95\xdf\xa9\xa6\x3a\x7d\xac\x45\xf6\x2b\xdc\x60\x4e\x16\x99\x2b\x93\xfe\x53\x65\x50\x98\xcc\x46\xb6\xf0\x79\xee\x03\x0a\x5d\x5f\x8b\x8b\x7d\x18\x57\x5a\xab\x8b\x27\x15\xd5\x37\x00\x00\xff\xff\x53\x62\x8f\xac\xe1\x00\x00\x00")

func lukeKoalaCowBytes() ([]byte, error) {
	return bindataRead(
		_lukeKoalaCow,
		"luke-koala.cow",
	)
}

func lukeKoalaCow() (*asset, error) {
	bytes, err := lukeKoalaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "luke-koala.cow", size: 225, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mechAndCowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xb1\x6e\xc3\x30\x0c\x44\xf7\x7c\x05\x91\x85\x31\xe0\x48\xbb\x0d\xfd\x41\x87\xae\x06\x08\x53\xab\x26\x8f\x5d\xf8\xf1\x25\x29\xd9\x2d\xd0\x5a\xf6\x01\x91\x86\x3c\x1d\x4f\x27\xc3\xb5\xc6\xb7\x29\x3c\x6e\xa0\x52\xd7\x4b\x54\x2d\x1b\xda\xf3\x65\xf6\xd1\x72\xf8\x9e\x3b\x8f\xf3\x34\xed\x09\x32\x9b\xf0\x1c\xce\x81\xab\xdc\xb6\xac\xe5\x56\xe6\x5c\xb3\x88\xae\x28\xd0\xad\xa3\x36\xa6\x9d\xe9\x04\x49\x09\x44\x62\xec\xf1\xb2\xef\x2c\x9f\x39\x00\x44\xec\xe2\xb9\xd9\x23\xe0\x02\x8b\xc2\x78\xe7\x6d\x00\x42\x4a\x04\x91\xc9\xe8\x95\x79\xed\xc2\xd1\x7e\x68\x75\x16\xe3\x5f\xdb\x36\x50\xab\xed\x3f\x1a\xeb\x11\xbb\x89\x57\xf9\x62\x1e\xa8\xfd\x39\x50\xa4\xbf\xb4\x4f\x30\xbe\x0e\x30\x89\x95\xfb\xfe\x3a\xfa\x30\xe9\xbc\x71\xf6\x1b\xa3\x3d\xdb\x87\x7e\x13\x98\x35\xc9\xcf\x99\xdf\x9b\xab\x78\xca\xd9\xce\x90\x3f\x75\x79\x3e\x3d\x3b\x3d\x5c\xdf\x01\x00\x00\xff\xff\x81\xca\xe1\xd7\xf4\x02\x00\x00")

func mechAndCowCowBytes() ([]byte, error) {
	return bindataRead(
		_mechAndCowCow,
		"mech-and-cow.cow",
	)
}

func mechAndCowCow() (*asset, error) {
	bytes, err := mechAndCowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mech-and-cow.cow", size: 756, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _meowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x91\x4f\x4b\x03\x31\x10\xc5\xef\xf9\x14\x8f\xae\x90\x16\x32\xc9\x07\xb0\xa2\x22\x9e\x3d\x0b\x81\x09\x48\x69\x7b\xd0\x05\x5d\xe9\x65\x3e\xbc\x6f\x66\xa5\x7f\xc2\xec\x9b\xe4\xf7\x26\x6f\xd9\x69\x4a\xd3\x84\x67\x7c\x1e\xe6\xcb\xf9\xeb\x88\xe5\x7c\x3c\x7c\x3f\x72\x2f\xdd\x2d\xa7\x83\x7e\xcc\x17\x3c\x60\xbf\x7f\x7d\x7b\xb9\x4f\x00\xf7\xe6\xdf\xe3\x69\xf9\xa1\xbe\x35\x28\xec\x14\xaa\x5a\x45\x72\xce\xc3\x6b\x6b\x52\x44\x45\xb4\x3a\xcb\x5f\xef\x63\x93\x31\x60\x46\xd9\x3b\x62\xf5\xde\xc0\xbf\x97\x22\xde\x8e\xa2\x2b\xdf\xf2\xc0\xca\xb8\xe3\x1d\x70\x9b\x5d\x69\x81\xa9\x62\x48\x09\xba\xf5\xa7\x0d\x41\x4e\x67\x1d\x6e\x71\xde\x2c\x60\x37\xb6\x98\x45\xbe\x2a\x3d\x5a\xc3\xc6\x4d\x26\xae\x18\x95\x57\x17\xc6\x6f\x64\xb4\x99\x36\xed\x9d\xcb\x95\x4f\xc2\x6a\xac\xba\x4b\x21\xf3\x18\x2d\xdc\x3c\xe3\x7c\xb2\xee\x64\x1c\xc4\x35\xec\x58\xff\xdf\x3a\x78\x1e\x48\x64\x30\x88\x61\x65\x22\x0f\x8c\x87\x76\x45\x99\x27\x32\x34\xc4\x08\x3e\xb4\xb8\x1b\x3b\x94\x0c\xb5\x7c\x23\xb7\xdb\x2d\x59\xaf\x35\xc3\xb5\xd6\x2a\xd9\x45\xc9\x89\x5f\x2b\xfd\x05\x00\x00\xff\xff\xfb\xd2\x59\x2d\xd9\x01\x00\x00")

func meowCowBytes() ([]byte, error) {
	return bindataRead(
		_meowCow,
		"meow.cow",
	)
}

func meowCow() (*asset, error) {
	bytes, err := meowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "meow.cow", size: 473, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _milkCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x91\xcd\x6a\xc3\x30\x10\x84\xef\xfb\x14\x03\xea\xb5\xec\x03\x54\xea\xc5\xf4\x58\xfc\x02\x02\x53\x1a\x25\x0e\xf9\x31\xc4\x0e\xb9\xe8\xe1\xa3\x5d\xd9\x91\xec\x2c\xfe\x59\xbe\x19\xcf\x08\x6c\x0c\x19\x83\xdf\xe3\xf9\x84\xfd\x6d\xb8\xe4\xed\xef\xba\x43\xd3\x87\x30\x86\x24\xd2\xc7\xd4\x87\xee\x7f\x78\xc0\xc1\xda\x9f\xb6\xf9\x22\x24\x34\xdc\x0f\xfd\x34\x42\xa6\xab\x06\x84\xb5\x1a\x8b\x16\x49\xed\x60\x94\x61\xef\xe9\x1d\x02\x33\xe6\x2a\x5a\x76\xce\x19\xb1\x78\xf3\xfa\xc2\xce\x79\x0f\x76\x6e\xcb\xd1\xe6\x3b\xa6\x64\xb9\xea\x1c\x3b\xaf\xaa\xa8\xc0\x9b\x02\x55\x48\x0e\xa6\xb6\x7c\x1c\x55\x18\x4c\xf2\x58\x7f\x20\x80\x38\xc6\x14\x57\x73\x25\xac\xcd\x9f\xf5\x88\x89\x8a\x2d\x2e\xaf\x85\x59\x69\x43\x6e\xfe\xa6\xf4\x0b\xe8\x19\x00\x00\xff\xff\x7d\x15\x56\x0c\xb7\x01\x00\x00")

func milkCowBytes() ([]byte, error) {
	return bindataRead(
		_milkCow,
		"milk.cow",
	)
}

func milkCow() (*asset, error) {
	bytes, err := milkCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "milk.cow", size: 439, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _moofasaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\xf0\xf5\xf7\x4f\x4b\x2c\x4e\xd4\x03\xb2\xb9\x54\x4a\x32\x52\xe3\x93\xf3\xcb\x15\x6c\x15\x6c\x6c\x5c\xfd\x9d\xad\xb9\x14\x20\x00\x28\x91\x5f\x9a\x9e\x51\x52\x0c\xe2\xc4\x03\x01\x4c\x02\x59\x46\x1f\xc4\x8f\x89\x81\x4b\x29\x28\xd4\x28\xc4\xc5\xc7\xc7\x29\xd4\xa0\x08\x69\xa8\xa4\x56\xa6\x16\x6b\x2a\xd4\xc4\xc7\xa3\x98\x04\x96\x8b\x8f\x07\x4a\x40\x78\x9a\x31\x31\xfa\x28\xa6\x01\xcd\x06\x69\xd0\xaf\xd1\x05\x82\x72\x14\x53\xa1\xfa\x6b\xa0\x14\x17\x17\x27\x5c\xd0\x37\x3f\x1f\xe4\x3f\x2e\xa0\x77\xb8\x00\x01\x00\x00\xff\xff\x38\x3e\x6c\x24\xf2\x00\x00\x00")

func moofasaCowBytes() ([]byte, error) {
	return bindataRead(
		_moofasaCow,
		"moofasa.cow",
	)
}

func moofasaCow() (*asset, error) {
	bytes, err := moofasaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "moofasa.cow", size: 242, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mooseCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x50\x00\x8a\xe5\x97\xa6\x67\x94\x14\x03\xd9\x08\x0e\x90\x1d\x13\x13\x0f\x44\x40\x86\x42\xbc\x7e\xbc\x3e\x48\x16\x45\x1a\xa2\x02\x2a\x01\x05\x1a\x2a\xa9\x95\xa9\xc5\x9a\x20\x71\x30\x40\x91\x8b\x8f\x07\x4a\x40\x39\x40\x96\x7e\x4c\x0c\xb2\x34\xd0\xec\xfc\xbc\xf4\xd2\x54\x85\x9a\x1a\x5d\x20\x28\x57\xa8\x41\x91\x05\x82\x9a\x1a\x28\xc5\x05\x74\x39\x17\x20\x00\x00\xff\xff\x9d\x3c\x02\xdc\xcb\x00\x00\x00")

func mooseCowBytes() ([]byte, error) {
	return bindataRead(
		_mooseCow,
		"moose.cow",
	)
}

func mooseCow() (*asset, error) {
	bytes, err := mooseCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "moose.cow", size: 203, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mutilatedCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8d\x51\x0a\x83\x30\x0c\x86\xdf\x73\x8a\x40\x7d\x98\xb0\xb9\x03\xcc\xc1\xc6\xd8\xb3\x17\x08\x14\xa7\x99\xca\x74\x19\xb6\x55\x04\x0f\xbf\x8c\x82\xb0\x0f\x4a\x93\xff\x4f\xfe\x18\x03\xc6\xe0\x15\x87\xe0\xbb\xbe\xf4\x5c\x63\x25\xf3\x1e\x9f\xa3\x0c\x58\xba\x8f\xf4\x9d\x97\x4b\xe5\x42\x99\x3d\x78\x7c\x71\xcf\x4b\xc6\x75\xd0\x1d\x48\x7c\xcb\x56\x87\xf1\x8c\x79\x7e\x2f\x6e\x27\xc0\x88\x1a\x12\x9a\xd6\x3b\xad\x89\x6c\x04\x70\xb2\x76\xfa\x77\x89\xb4\x2f\xf4\xa5\x80\xbb\x84\x17\x76\x69\x4c\x58\xd7\x83\x32\xe3\xaa\xba\xb5\x9b\xb8\x7d\x44\x47\x22\xf8\x65\xc9\xbb\x09\x0c\x7a\x1d\xbe\x01\x00\x00\xff\xff\xc9\xd7\x38\xf9\xc9\x00\x00\x00")

func mutilatedCowBytes() ([]byte, error) {
	return bindataRead(
		_mutilatedCow,
		"mutilated.cow",
	)
}

func mutilatedCow() (*asset, error) {
	bytes, err := mutilatedCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mutilated.cow", size: 201, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pukingCowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x80\x01\xa0\x54\x7e\x69\x7a\x46\x49\x31\x42\x08\xab\x98\x82\x42\x5c\x7c\x7c\x1c\x58\x20\x1e\x02\xf4\x35\x2a\x2a\x34\xb9\xf4\x63\x62\xf4\x35\xa0\x2a\xf4\x35\xe2\xe3\x35\x41\x4a\x6a\x14\xc2\x75\x81\xa0\xa6\x46\xa1\xa6\xae\x06\x2c\x50\x03\x56\x80\x10\x40\x00\x4c\x81\x78\x74\x01\x65\x54\x81\x78\x6d\x65\xed\x78\x2e\xa0\x37\xb8\x00\x01\x00\x00\xff\xff\xf3\xc5\xd5\x85\xd8\x00\x00\x00")

func pukingCowCowBytes() ([]byte, error) {
	return bindataRead(
		_pukingCowCow,
		"puking-cow.cow",
	)
}

func pukingCowCow() (*asset, error) {
	bytes, err := pukingCowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "puking-cow.cow", size: 216, mode: os.FileMode(420), modTime: time.Unix(1452376971, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _renCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x31\x0b\xc2\x50\x0c\x84\xf7\xfc\x8a\x83\xe7\x60\xa7\xfb\x01\xd6\x49\x9c\x05\xe7\x07\x19\xa4\xd8\xc9\x37\x58\x71\x09\xfe\x76\xef\xa5\x0a\x62\x08\x34\xdf\xe5\x7a\x4d\x4b\xb1\x52\x70\x9e\x6e\xd0\xd3\x36\xcb\x3c\xf9\xa5\x3d\xb1\xc7\x38\x1e\x4f\x87\x9d\x01\x90\xd8\x1e\xd7\x79\xb9\x77\xf8\x23\x57\x01\x7d\x64\x01\xbd\x56\xd7\x1c\x6a\xb6\x5a\xd5\x2b\x55\x95\xd3\x69\x20\x42\xfe\xae\x59\x77\x85\x74\xbc\xe2\x03\x21\x23\xbf\x9b\xf4\x29\x59\x12\xf3\x85\xfc\x4c\xc4\xef\xec\x3d\x7a\x05\x05\x49\x6f\x91\x40\x91\x3b\x73\xc3\x0c\x0b\x9d\x99\x07\x6f\xb5\x18\x7c\x30\xfd\x9c\xbd\x03\x00\x00\xff\xff\x38\xc8\x37\xa3\xfc\x00\x00\x00")

func renCowBytes() ([]byte, error) {
	return bindataRead(
		_renCow,
		"ren.cow",
	)
}

func renCow() (*asset, error) {
	bytes, err := renCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ren.cow", size: 252, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _satanicCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x08\x4e\x2c\x49\xcc\xcb\x4c\x56\x48\xce\x2f\xd7\x51\x28\xce\x2f\x2d\x4a\x4e\x55\x28\xcd\xcb\xce\xcb\x2f\xcf\xd3\x03\xca\x73\xa9\x94\x64\xa4\xc6\x03\x25\x15\x6c\x15\x6c\x6c\x5c\xfd\x9d\xad\xb9\x14\x40\x00\x28\x9c\x5f\x9a\x9e\x51\x52\x0c\xe1\x22\xf8\x0a\x0a\x1a\xf1\xf1\x9a\x0a\x0a\x50\x71\x20\xd0\x88\x89\xd1\x87\x08\xe8\xeb\x42\x00\x50\x00\x24\xc1\xa5\xa0\xaf\x50\xa3\x60\x66\x66\xa6\x50\x53\x03\xe6\x6b\x29\x00\x59\x20\x05\x10\x3e\xc4\x90\xba\x3a\x05\x38\x09\x14\x01\x3a\x81\x0b\x10\x00\x00\xff\xff\x57\x68\xfe\xe1\xba\x00\x00\x00")

func satanicCowBytes() ([]byte, error) {
	return bindataRead(
		_satanicCow,
		"satanic.cow",
	)
}

func satanicCow() (*asset, error) {
	bytes, err := satanicCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "satanic.cow", size: 186, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheepCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x08\xc9\x48\x55\xc8\xcb\xcf\xd3\x4d\xcb\x49\xcc\xcd\xcc\x4b\x57\x28\xce\x48\x4d\x2d\xd0\x03\xca\x70\xa9\x94\x64\xa4\xc6\x27\xe7\x97\x2b\xd8\x2a\xd8\xd8\xb8\xfa\x3b\x5b\x73\x29\x28\x00\xc5\xf2\x4b\xd3\x33\x4a\x8a\x81\x6c\x54\x0e\x08\xc4\xc7\x83\x29\x28\x37\x54\x25\xb5\x32\xb5\x38\x34\x26\x46\x4f\x3d\xc6\x01\x01\x13\xf4\xa0\xf2\x31\x31\xf1\xf1\xfa\x1a\xc8\x52\x30\xa8\x09\x33\x10\x04\x30\x54\xa0\xc8\x26\x44\x46\xd6\x01\x41\x64\xa4\x3a\xb2\xa8\x42\x4d\x0d\x84\xe4\x02\xba\x9b\x0b\x10\x00\x00\xff\xff\xe0\xb1\xdb\x0f\xe9\x00\x00\x00")

func sheepCowBytes() ([]byte, error) {
	return bindataRead(
		_sheepCow,
		"sheep.cow",
	)
}

func sheepCow() (*asset, error) {
	bytes, err := sheepCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheep.cow", size: 233, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _skeletonCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd1\xd1\x4a\xc3\x30\x14\x06\xe0\xfb\x3c\xc5\x8f\x19\x64\x9b\x63\x79\x00\x27\x08\xe2\xc5\xb9\xf2\x42\xef\x2c\x64\xeb\x3c\x5a\x59\xd9\x19\x6d\xc3\x08\x56\x9f\xdd\xcc\x69\x58\x4b\xfe\x73\xf3\x87\x7c\x24\x90\x68\xad\xb4\xc6\x73\xf5\xd1\xc2\x3c\x6d\xe5\x58\x73\x27\x7b\x83\xb2\x11\xff\x5e\x75\xe8\x04\x41\x3c\xca\x00\xd9\x33\xe4\x0d\x27\xfd\xb9\x39\x1c\xb8\x5e\xec\x7c\xc9\x8b\x46\x8e\xfc\x75\xb7\x6d\xfd\x66\x59\x72\xb3\xe3\x9a\xc3\x92\x5f\x7d\x64\x6a\xd2\x55\xec\xe2\x91\xb8\xc5\x6a\xf5\xf0\x78\x7f\xa3\x90\x12\xf7\x7e\x2f\x68\xcf\xcb\xa9\x73\xb3\x73\xbb\x30\x23\x64\x27\x1c\xb8\xed\x87\x64\x60\xa6\xee\xca\xcd\xe6\xd7\xff\x99\x0f\xe0\x5f\xac\x25\x5d\x8c\x42\x45\x91\xa3\xf4\x42\x3d\xf5\xa7\x10\x08\xeb\x2c\x59\x93\xb1\xd6\x1a\x13\x01\x65\x41\x9c\xd4\x72\xe0\x3b\x4e\x6a\x39\x00\xa4\x6f\x51\xf1\x11\xd5\x4f\x00\x00\x00\xff\xff\x47\x5b\x02\x1c\xb1\x01\x00\x00")

func skeletonCowBytes() ([]byte, error) {
	return bindataRead(
		_skeletonCow,
		"skeleton.cow",
	)
}

func skeletonCow() (*asset, error) {
	bytes, err := skeletonCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "skeleton.cow", size: 433, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _smallCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\x54\x28\xce\x4d\xcc\xc9\x51\x48\xce\x2f\xd7\x51\x48\x2c\x2a\xc9\x2c\x2e\x51\x28\xcd\xcb\xce\xcb\x2f\xcf\x03\x4a\x73\xa9\x94\x64\xa4\xc6\x03\xe5\x14\x6c\x15\x6c\x6c\x5c\xfd\x9d\xad\xb9\x14\x20\x00\x28\x91\x5f\x9a\x9e\x51\x52\x0c\x64\xeb\xc4\xc7\xeb\xc0\xc4\x91\x25\x34\xf4\xf4\x34\xe3\x81\x00\x2e\x07\x04\x1a\xf1\xf1\x9a\x20\x5a\x33\x26\x06\x59\x18\xa8\x2d\x3f\x2f\xbd\x34\xb5\xa6\x46\x57\xb7\xa6\x46\x41\x8b\x0b\x68\x17\x17\x20\x00\x00\xff\xff\x5e\xb7\x59\x30\xa2\x00\x00\x00")

func smallCowBytes() ([]byte, error) {
	return bindataRead(
		_smallCow,
		"small.cow",
	)
}

func smallCow() (*asset, error) {
	bytes, err := smallCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "small.cow", size: 162, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sodomizedCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\x51\x8a\xc3\x20\x14\x45\xff\x5d\xc5\x05\xf3\x61\x60\x66\xb2\x80\xc9\x04\x86\x61\xbe\xbb\x01\xc9\x43\x82\x4d\x42\x5b\x2d\x46\x09\x05\x17\x5f\x13\x6c\x69\x02\x3d\x3f\xe2\x7d\xe7\x5d\x94\x73\xc6\x39\x7e\xd1\xd9\x19\x57\xed\x8e\xd6\x5d\x46\xd3\x43\x19\x04\x63\x94\x0f\x4e\x9d\xa1\x3a\xff\x01\xe5\xfc\x38\xf9\x94\x9e\x8c\x9d\xcd\x57\xda\x62\x85\x1f\x34\x2d\x8b\x3f\xa8\xeb\xff\xc3\xdf\x37\xc3\x4a\xca\x6d\xe8\x07\x3f\x61\x07\x65\xe1\x9d\x21\xa8\x7c\x18\x1b\xa5\x25\x6a\x73\x5c\x41\xca\xa7\xf3\x2a\x89\x42\xdf\xf4\x54\x4a\x49\x0b\x15\x49\xb9\x31\xd7\x76\x4a\xe3\x7c\x29\x51\x6d\x86\xa9\xca\x9a\x3e\x68\xc4\xf8\x99\x98\x21\x04\xdb\x3f\x3f\xc6\x7c\x34\x0d\x58\xfa\x2f\xbb\x07\x00\x00\xff\xff\xa1\xb6\xc1\x21\x3d\x01\x00\x00")

func sodomizedCowBytes() ([]byte, error) {
	return bindataRead(
		_sodomizedCow,
		"sodomized.cow",
	)
}

func sodomizedCow() (*asset, error) {
	bytes, err := sodomizedCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sodomized.cow", size: 317, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squirrelCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x50\x00\x8a\xe5\x97\xa6\x67\x94\x14\x03\xd9\x0a\x18\x5c\x14\x10\xaf\x10\x0f\x13\xad\x51\x88\x89\x8f\xd7\xaf\x51\x50\xd0\xab\x03\x71\xeb\xf4\x60\x12\xfa\x2a\xa9\x95\xa9\xc5\x0a\x09\x7a\xfa\x10\xbe\x9e\x3a\x54\xa6\x3a\x3f\x3e\x5e\x07\x48\xc7\x80\x39\x70\xd3\xf5\x15\xf4\x80\x8a\x14\x34\x41\xec\x18\xb8\x68\x82\x6e\x82\x82\xba\xae\x3a\x44\x71\x2d\x4c\x58\x4f\x03\xe4\x08\x10\xa1\x19\x0f\x37\x57\x5d\x57\x57\x57\xaf\x2e\x1e\xe4\xb8\x1a\x2c\x6e\x26\x02\x70\x01\x43\x82\x0b\x10\x00\x00\xff\xff\x24\x0f\x2f\xcb\x1b\x01\x00\x00")

func squirrelCowBytes() ([]byte, error) {
	return bindataRead(
		_squirrelCow,
		"squirrel.cow",
	)
}

func squirrelCow() (*asset, error) {
	bytes, err := squirrelCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "squirrel.cow", size: 283, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stegosaurusCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xcd\x6e\x83\x30\x0c\xc7\xef\x79\x8a\xbf\xc6\xa4\xed\x50\x27\x0f\x30\xd6\x69\x9a\x76\xee\x0b\x44\x0b\x68\xaa\xca\x4e\x4c\x23\x55\x2f\x34\xcf\x3e\x3b\x10\x04\x14\x50\x0d\x4d\xe2\x38\x3f\x7f\xa5\x64\x99\xca\x32\xbc\xa3\xf1\xc7\x53\xdd\x94\xe7\x3f\x5c\x7e\x7c\x85\x12\xbe\xfe\x45\x55\xfa\x37\x36\xab\x47\x5f\x1d\xdd\x77\x7d\xc1\x2b\xf2\xfc\xf3\xf0\xf1\x22\x3b\xf5\xf9\x54\xf9\x06\x5b\xa2\xd3\xac\x70\x0f\x60\x50\x08\xa1\x9f\xf0\x00\x85\x2d\x44\x13\x11\x1f\xcd\x65\xbd\x4f\x53\xb7\xcb\xe0\x06\xd9\xca\x60\x6d\xfc\x11\x02\x3f\xc4\x61\xe5\x65\x9b\x1a\x8e\x39\x91\x51\x38\x4d\x61\xe2\x26\x90\x6c\xa9\x89\xd7\x38\x5a\x1b\x42\xb0\x96\x4b\x58\x90\x42\x1b\xb6\x9a\x84\x51\x92\xc8\x39\x67\xd6\xfa\x12\x8d\x3d\x25\x9e\x0f\xa9\x08\xf4\x99\x8f\xc4\x0c\x0c\xba\x2e\xb2\x3c\xc7\x72\x76\x5d\x0a\xee\x26\xb7\x76\x58\x5d\x85\x1b\xe7\x58\x50\xd7\xe8\xb9\xf7\xeb\x14\x34\xf3\x2c\x13\xad\xa7\x11\xcc\xa2\xca\x97\xbe\x0b\xa1\x55\xf3\xb2\xb9\xc9\xce\xf5\x67\x8d\x8b\xd7\xf5\x95\x54\x82\x4b\xb0\x26\x29\xe8\x86\x1e\x45\x32\x4b\x6a\xe8\x93\x93\x24\xd9\x97\xbc\x2b\x3e\x62\xf7\xda\x15\x35\xfe\x83\xc4\x43\xff\xec\x15\x7f\x1f\xea\x3f\x00\x00\xff\xff\x70\x2c\x5e\x65\x56\x03\x00\x00")

func stegosaurusCowBytes() ([]byte, error) {
	return bindataRead(
		_stegosaurusCow,
		"stegosaurus.cow",
	)
}

func stegosaurusCow() (*asset, error) {
	bytes, err := stegosaurusCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stegosaurus.cow", size: 854, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stimpyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\x3d\x0a\xc2\x40\x10\x85\xfb\x3d\xc5\xc8\x5a\xc4\xc6\x39\x80\xb1\x12\xeb\x14\xb6\x0b\x53\x88\x18\x0b\x89\x60\x44\x84\x39\xbc\xef\xed\x4f\xc0\xca\xd9\x6c\xb2\xf3\xcd\xdf\xdb\xc4\x18\x62\x94\xd3\x7c\xbb\x3f\x3e\x2b\x1c\xc3\x7a\x1e\x2f\x76\x9e\xde\xb2\x97\xbe\x3f\x0e\x87\x5d\x10\x01\x9b\x5e\xd7\x71\x7e\x0a\x6d\xcb\x97\xd5\x2f\xa2\xbf\x61\x4f\xc9\x5c\xcd\xd4\x5b\x98\xa6\x58\x29\x71\x4b\xde\x95\x23\xcf\x07\xc7\x63\x46\x5c\x28\xaa\xe1\x98\x72\x8b\x01\x7b\xcb\x77\xac\xce\x60\x1b\x1e\x17\x8c\xc6\xc8\xb5\x5c\x81\x12\x51\xad\x81\x8e\x5e\x35\xf7\x3a\xd3\xe5\x0f\xa3\xbe\x45\x78\x76\x8a\x56\x65\xb7\xc6\x25\x4f\xe4\x50\x6d\x08\x77\x80\x26\xdc\xa8\x75\xcd\x52\x8b\xde\x80\x3f\x19\xbe\x01\x00\x00\xff\xff\x5f\xf1\xcf\x1c\x6c\x01\x00\x00")

func stimpyCowBytes() ([]byte, error) {
	return bindataRead(
		_stimpyCow,
		"stimpy.cow",
	)
}

func stimpyCow() (*asset, error) {
	bytes, err := stimpyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stimpy.cow", size: 364, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _supermilkerCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x0f\xb2\x87\x2e\xe8\xfa\x03\x5c\x41\x51\x6f\x8a\x87\x45\xbc\x2c\x1b\x9a\xdd\xb1\x2d\x4d\x9b\x92\x34\x48\x61\x7e\xbc\x53\x13\xc5\x77\x9a\xf7\xcd\xe3\x25\xa3\xb5\xd2\x1a\x0f\x38\xfb\x2f\x58\xea\xc6\x06\x43\xe7\x7a\xba\x5c\x61\x0a\xde\xd6\xd6\x2d\xf8\x0c\x7e\xc0\x4b\x1d\x22\x0e\x43\x37\xb7\xa8\x9c\xcc\xf7\xe7\x98\xea\x9d\xa5\xd0\x93\xa3\x65\x47\x97\xb4\x95\x22\xb5\x99\x5b\x32\x6b\xd7\x1d\xf6\xfb\xe7\xb7\xc7\x5b\x05\x08\xf3\xa9\x69\xe7\x08\xe0\x64\xcc\x49\xd0\x7f\x56\x6d\x68\xa1\xb8\x3d\x1e\x4d\x16\x8a\x8a\x35\x2a\xdb\xca\x18\xc9\x94\x9d\x4c\x37\xd9\xf0\x21\x4d\x14\xc0\x25\x25\xc5\x7e\x6c\x12\x81\xf9\x5a\xf4\x01\x2e\x9c\x5f\xd7\xb3\xc2\x5f\x6e\x45\x3f\xbb\xf7\xa7\x5f\x71\x7e\x8f\x95\xfc\x5b\x7d\x07\x00\x00\xff\xff\x19\xb5\x0d\xcc\x18\x01\x00\x00")

func supermilkerCowBytes() ([]byte, error) {
	return bindataRead(
		_supermilkerCow,
		"supermilker.cow",
	)
}

func supermilkerCow() (*asset, error) {
	bytes, err := supermilkerCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "supermilker.cow", size: 280, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _surgeryCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x93\x51\x6b\xc2\x30\x10\xc7\xdf\xf3\x29\x0e\x2a\xd8\x8e\xd9\x7c\x80\x29\x4c\xc4\x87\xbd\x2c\x63\x0c\xf6\x60\xd8\x4d\x46\x99\x32\x68\x86\x8d\xc8\x20\x1f\x7e\x77\x69\xb0\x0d\x4d\xeb\x4f\x49\x49\xee\xf7\x3f\x73\x60\xb3\x4c\x64\x19\xac\xe1\xcb\x5c\xc0\xfc\x56\xa7\xbd\x3d\x9a\xfa\x1e\xf6\x27\x7b\x6c\x2c\x9c\xeb\x9f\xda\x5c\x6a\x52\xc4\xcc\x1e\x2a\x64\x6b\x05\xcb\xe5\x56\x6d\x1e\x04\x5c\xa1\x9a\x39\x7f\x1f\x6c\xd3\x1d\x81\xd6\x00\x12\x7a\xd2\x88\x25\x21\x92\x98\x1c\xb1\xe0\xa7\xe4\x1e\x81\x81\x33\xab\xfe\xaa\x86\x35\xe5\xbf\x69\x0b\xa9\x3f\x72\x27\x99\x68\x74\xe7\xfb\xf0\x52\x74\x82\x88\x27\xc8\xb5\x6e\x2f\x91\x12\xc8\xc8\x79\x69\x8d\x02\x26\x89\xae\x96\xc3\x35\xc7\xb1\xfe\xa0\xa9\x20\x22\xee\xb4\x46\x8f\xfc\x68\xe1\xbd\x2c\xc0\x2c\x0a\xc4\x91\x9c\x63\x67\xb7\x6a\x09\x69\x89\x01\x8a\xa5\x7f\x55\xd0\xcd\x1c\xc6\x74\x31\xc6\x8d\xcf\xe7\x5c\x28\xd2\x53\xca\xb0\xa1\xc3\x61\xf5\xb1\xec\xaa\x13\xa3\x07\xdb\xe3\xff\x2c\xa5\x5f\xfb\xc7\xa3\xb9\x1e\x25\x7d\x6e\x31\x48\xcd\xcb\x79\xf9\x79\x33\x15\xc5\x36\xea\x7d\xa1\x5e\xb6\xaf\xeb\xb7\x27\xf5\x3c\x95\xa2\x37\x48\xfc\x07\x00\x00\xff\xff\x55\xdb\xcf\xda\x7c\x03\x00\x00")

func surgeryCowBytes() ([]byte, error) {
	return bindataRead(
		_surgeryCow,
		"surgery.cow",
	)
}

func surgeryCow() (*asset, error) {
	bytes, err := surgeryCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "surgery.cow", size: 892, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _telebearsCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\xc1\x4a\xc4\x30\x14\x45\xf7\xf9\x8a\x0b\x99\x45\x0a\xd6\x7e\x80\x75\x60\x94\x59\x0b\xea\x32\xcc\x23\x0c\xb1\x2d\xd6\x44\xd2\x84\x52\xc8\xc7\xfb\x5a\xaa\xd8\xc2\xdc\x45\x02\xf7\x9d\x93\xf0\xa4\x14\x52\xe2\x84\xab\x1f\xf1\x6d\xc3\x87\x0f\x5f\x9d\x6b\x60\x1c\x92\x73\x26\xa6\x60\x7a\x98\x6b\xbc\x83\x09\xb1\x1b\x22\xb7\x9f\xce\x8f\xee\x9e\x2d\x71\x88\xad\xa5\x59\x7c\x44\x5d\x9f\x5f\x9e\x1f\x04\x96\x70\xef\x53\xd3\xc6\x01\xbb\xd0\x0a\xdc\x22\x14\x15\x7c\xd6\x65\x89\x77\xdb\xdb\xa7\xf3\xe9\xf5\xed\xd7\xd8\x28\x17\xa2\xcb\x5a\x57\xd0\xfa\x8f\xf9\x0f\xa9\x83\x9d\xec\x50\x68\x4d\x73\x2a\xd2\x7a\x43\x2e\xbf\x11\x8f\x81\xc9\x27\xa0\x40\xb5\x19\xf2\x53\xde\x35\xc9\x22\xe7\x92\x33\x42\x29\xb1\x5f\x27\xe7\xf5\x3a\x1e\x21\x78\x7f\xf1\x13\x00\x00\xff\xff\x46\x9c\x0c\x4e\x4d\x01\x00\x00")

func telebearsCowBytes() ([]byte, error) {
	return bindataRead(
		_telebearsCow,
		"telebears.cow",
	)
}

func telebearsCow() (*asset, error) {
	bytes, err := telebearsCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "telebears.cow", size: 333, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _turkeyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x94\xbd\x4e\xec\x30\x10\x85\xfb\x3c\xc5\x5c\xe5\x16\xfe\x89\xe5\xfe\x6e\x2e\x42\x42\xd4\x34\xd0\x59\x33\x05\x5a\x58\x89\x62\x25\xd8\x08\xa1\x15\xef\xce\x8c\xff\x36\x31\x41\x21\x18\xc7\xb1\xfd\xf9\x1c\x9f\x38\xdb\xf7\x5d\xdf\xc3\xfd\xf4\xfa\xb2\xff\xf8\xc3\xcd\xee\xef\xe9\xb0\xa7\xc7\xe3\x3b\xfc\x87\x71\xbc\xbd\xbb\xd9\x75\x00\xdc\x77\x9c\x9e\x0f\xa7\x37\xd8\xbc\x06\x6b\x10\x8d\x25\x22\x6b\x2d\x31\xfb\x2b\x78\x60\x08\x71\xd9\xa7\x05\xde\xa4\xc9\x9a\xd5\x7e\x34\x26\xc9\x6f\x2c\x61\x8b\x2a\xf1\x52\x96\x19\xb1\x3d\x34\x26\xe6\x72\x71\x77\xd2\x54\xc9\x39\xef\x17\x66\xce\x43\x48\xa3\x2b\xf0\xb9\x74\x67\x76\x48\x35\x59\xe7\xb8\x64\x4d\xd4\xf9\x1e\x42\xb7\x84\x55\xb8\x8e\x63\x9f\xf0\x94\xe1\xc1\x3a\x04\x22\xc3\x7f\x0c\x30\x41\x09\x5c\x93\x3f\xff\xdb\x39\x1f\x6d\x73\x62\xce\x4a\xdc\xc8\xdb\x35\x63\xdc\x37\x69\xca\xce\x72\x05\xe0\x67\xb4\x02\x9f\x3d\xab\xd2\x35\xf0\x1b\x8e\x3e\x25\x32\x13\xa1\x11\x4a\x25\x31\xcc\xc5\x1f\x80\x3c\xd4\xb5\x8d\x73\xa3\x34\xd9\xa9\x93\x8b\xe5\x49\x37\xea\x4d\x76\xaa\x26\x47\x0a\x35\xa2\xd6\xf1\x41\x87\x10\x37\xa2\x35\xdb\x88\x0a\x1e\xd6\xdc\x43\x1e\x52\xa4\x35\x09\x9c\x71\x5d\x68\xae\x28\x5b\xe4\x68\xba\x06\x1d\x52\x70\x32\xb1\x08\x17\x36\xd1\xc5\x34\xcd\x5d\xcb\x47\x50\x0f\xa7\x28\x63\x02\x2b\x5a\xe4\x39\x49\x32\x33\x51\xa8\x6f\xb0\x3c\x12\xb3\xa4\x67\xa2\x95\x5e\xc4\xa4\x68\xc1\xc9\x81\x20\xc4\x16\x69\xa9\x3c\x91\x7e\x40\x2f\x9a\x9c\x76\x73\x28\xf3\x64\xb9\x42\x98\xa6\xc9\x5f\xee\xd2\x5a\x2d\x2b\x0b\x48\x72\x72\x04\xae\xa8\xde\xb2\x87\x6f\xa5\xfd\x1e\xab\x03\xef\xc5\x1d\x5d\x1a\x65\x48\x6d\xd2\x91\x87\x58\xf8\xbf\xe3\xdf\xbc\xee\x2b\x00\x00\xff\xff\xbf\xf8\xbe\x0b\x16\x05\x00\x00")

func turkeyCowBytes() ([]byte, error) {
	return bindataRead(
		_turkeyCow,
		"turkey.cow",
	)
}

func turkeyCow() (*asset, error) {
	bytes, err := turkeyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "turkey.cow", size: 1302, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _turtleCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x94\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x41\x76\x68\x0e\x8e\x1e\x60\xed\x61\x8c\x9d\xfb\x02\x66\x3a\x8c\xb0\x0e\x36\x02\x4d\xc2\x18\x08\x3f\xfb\x64\x27\x6e\xac\xd4\x21\x15\xd4\xb5\xe5\x5f\x5f\x7f\xdb\xa2\x55\x65\xaa\x0a\x5e\xe0\xe7\xaf\x1f\xda\xeb\x57\x37\xf6\x30\x8c\xd7\xe1\xbb\x6d\x9a\x46\x76\xcc\xd3\x70\x69\xe9\xa3\xfb\x85\x13\x1c\x8f\x6f\xe7\xd7\x67\x03\x12\x92\xed\xc6\xcf\xcb\xd0\xc3\x6e\x10\x91\x9d\x42\x66\xb1\xf8\xc1\x6a\xb2\xde\xab\x84\xf7\x76\x06\x3c\x40\x90\xea\x52\x1a\x17\x46\xca\xbc\x3b\x47\x14\xc6\x4c\x04\x90\x2d\x33\x6d\x18\x9c\xcb\x01\xc8\x00\x67\x66\xf9\x28\x51\x90\x91\x0e\x4c\x02\x05\x60\x60\xd9\x63\x19\x58\x95\xdf\xbe\x61\x29\xcb\xe7\x0a\xb1\xd2\xe0\x06\x61\x97\x72\x98\xad\xd6\x80\x2b\xcf\xf7\x98\xdb\xb9\xb6\xcc\x60\x66\xa0\x78\x9b\x6b\x8b\xfa\x62\xb3\x12\xe7\xe4\x75\xd4\x7a\x87\xb4\x68\xd0\x94\xb2\xd1\x28\xab\x7c\xf1\xad\xc8\x52\xc2\x63\xec\x92\x15\x2e\x03\x32\xcf\x4d\x6e\x43\x9b\x82\xcd\x23\xa8\xac\x0d\x5d\x05\x7e\x2a\x90\x1f\x17\xda\x1a\x26\xdb\x51\xcf\x7c\x92\xc0\xa9\x81\xe3\x5c\x47\x72\xce\xe8\x43\xdc\x63\xe4\x21\x0f\xf1\x10\x0d\x16\x2f\x27\x9d\x39\xb9\x77\xae\x29\x40\x72\xd6\x76\x27\xa4\xbb\xab\xa9\x36\xf2\xff\x60\xfe\x03\x00\x00\xff\xff\x07\x77\x42\x2a\x51\x04\x00\x00")

func turtleCowBytes() ([]byte, error) {
	return bindataRead(
		_turtleCow,
		"turtle.cow",
	)
}

func turtleCow() (*asset, error) {
	bytes, err := turtleCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "turtle.cow", size: 1105, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tuxCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xce\x41\xcb\x82\x40\x10\x06\xe0\xfb\xfc\x8a\x81\xfd\xe0\xd3\x83\x33\xf7\x52\x08\xa2\x73\x97\x0e\x1d\x16\xa6\x12\x53\x41\x1a\x71\x95\x0a\xfc\xf1\x8d\x59\x1e\x5a\x96\x19\x9e\x97\xf7\x30\xce\x81\x73\x78\x18\x8e\xd3\x8a\xf2\x18\xdb\x8b\x76\xcf\xb0\x69\x93\xa0\xd7\x9e\x42\xdd\x14\xa1\x3e\x53\x53\xdf\x86\x07\x69\x57\x52\xdb\xa0\x55\xe1\xaf\xaf\x0a\xc9\xf5\x8e\x19\xa6\xe9\x6e\xbf\x5d\x03\x22\x5a\xa8\x43\x59\xf5\x61\xc2\x8f\xa6\x47\x49\x42\x5f\x8c\x2a\x8a\xe3\xa2\x95\xf0\x22\x66\x1b\xde\xdb\x9f\x83\x68\x9c\x3b\x18\xbf\xcd\xff\xde\x8b\x6d\xe1\xd3\xa7\x61\x16\x89\xb3\xc8\x26\x03\xd8\x35\xf0\x0a\x00\x00\xff\xff\xb3\x84\x4d\xf4\xd7\x00\x00\x00")

func tuxCowBytes() ([]byte, error) {
	return bindataRead(
		_tuxCow,
		"tux.cow",
	)
}

func tuxCow() (*asset, error) {
	bytes, err := tuxCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tux.cow", size: 215, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaderKoalaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xc1\xea\xc2\x30\x0c\xc6\xef\x79\x8a\x0f\xfa\x3f\x6c\x7f\xe8\xfa\x00\x6e\x88\xa8\x27\x0f\xde\x84\x9d\x46\x98\xe2\x86\xa3\x81\x59\xf1\x32\xf6\xec\xa6\xeb\xc4\x42\x93\xfc\xf2\x85\xe4\x33\x86\x8c\xc1\xce\x4b\xe8\x6e\x23\x5a\xf6\xe2\xfb\x96\x07\x3c\x84\x07\xde\xaa\x46\x7f\xaa\x34\xad\xbc\x51\xa1\x2c\x8f\xe7\xfd\x86\x00\x68\x53\x5e\xf7\x2e\x3c\x23\xfc\x08\xeb\x2b\x28\x25\x6b\x6d\x01\x38\xb7\x60\x3d\x09\x64\xaa\x9d\x43\x44\xd7\x64\x7d\xd5\xe7\xa7\x44\x73\x96\xcf\xff\x31\x60\x41\x64\x4d\x6e\xf5\x6b\x45\x69\xd5\x81\xc7\xd0\x25\x0d\x17\xbe\xaa\x57\xac\xa3\xc9\xea\xf7\x32\xa9\x43\xfa\x04\x00\x00\xff\xff\x34\x92\xea\x40\xd5\x00\x00\x00")

func vaderKoalaCowBytes() ([]byte, error) {
	return bindataRead(
		_vaderKoalaCow,
		"vader-koala.cow",
	)
}

func vaderKoalaCow() (*asset, error) {
	bytes, err := vaderKoalaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vader-koala.cow", size: 213, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaderCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\xce\x2f\x2f\xc9\x50\x08\x4b\x4c\x49\x2d\xd2\x51\x48\x2b\xca\xcf\x55\x48\x4f\xcd\x2f\x4a\x49\xcc\x73\x48\x2e\x2e\x4d\xd4\x4b\x4a\x2d\xca\x4e\xcd\x49\xad\xd4\x4b\x4d\x29\x05\x2a\xe7\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x80\x02\xa0\x4c\x7e\x69\x7a\x46\x49\x31\x88\xa3\xa3\x1b\xa7\xab\x07\x97\x42\x91\x53\xcc\x8f\xcc\x57\x44\x48\x21\xc9\xe9\xeb\xe9\xdb\xc6\xc4\xe8\xc5\xc4\xc4\x83\x01\x92\x1a\x30\x00\x3a\x16\x0a\x34\x63\x62\xf4\x63\x62\xd0\xe5\x15\x6a\x6a\x74\x41\xa0\xbc\xa6\x06\x8b\x14\x8c\xe6\x42\x97\x43\x0a\x00\x2e\xa0\x87\xb8\x00\x01\x00\x00\xff\xff\x7c\xbd\xcb\xf8\x17\x01\x00\x00")

func vaderCowBytes() ([]byte, error) {
	return bindataRead(
		_vaderCow,
		"vader.cow",
	)
}

func vaderCow() (*asset, error) {
	bytes, err := vaderCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vader.cow", size: 279, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xc1\xaa\x83\x30\x10\x45\xf7\xf9\x8a\x81\xb8\xf0\xc1\xd3\x7e\x40\x2d\xb4\x94\xae\xbb\xcc\x26\x18\xd4\x4c\x35\x54\x0d\x24\xa6\x22\xe4\xe3\x3b\xa5\xd2\xd6\xb3\xc9\x0d\x67\xe6\x32\x9c\x33\xce\xe1\x04\x8d\x9d\x61\xae\xf4\x03\xdd\x64\xbc\x19\x5b\x98\x3a\x04\x61\x5d\xaf\x41\x18\x4d\x11\xeb\x7f\xb8\x39\x3b\x40\x6f\x86\x63\xe3\x43\x95\xd7\xe8\xee\xd8\xe3\x92\xa3\x0e\x54\xc2\x12\x5a\x51\xaf\x9e\x03\x14\xc5\xe5\x7a\xde\x33\x58\x21\x63\x43\xdb\x4d\x9e\x72\xa9\x54\xf9\x11\xbf\x26\x4d\x70\x41\xff\x27\xa5\x7a\xf3\x1d\x22\x52\xa5\xc8\xac\x1f\x4a\x3b\x29\x37\x9e\x8a\xec\xd8\x06\x84\x18\xb3\x4c\x08\x01\x71\xab\x89\x18\xd7\x87\xd1\x6d\xec\x19\x00\x00\xff\xff\xad\x19\xeb\x66\xf8\x00\x00\x00")

func wwwCowBytes() ([]byte, error) {
	return bindataRead(
		_wwwCow,
		"www.cow",
	)
}

func wwwCow() (*asset, error) {
	bytes, err := wwwCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www.cow", size: 248, mode: os.FileMode(420), modTime: time.Unix(1452359935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"beavis.zen.cow": beavisZenCow,
	"bong.cow": bongCow,
	"bud-frogs.cow": budFrogsCow,
	"bunny.cow": bunnyCow,
	"cheese.cow": cheeseCow,
	"cower.cow": cowerCow,
	"daemon.cow": daemonCow,
	"default.cow": defaultCow,
	"dragon-and-cow.cow": dragonAndCowCow,
	"dragon.cow": dragonCow,
	"elephant-in-snake.cow": elephantInSnakeCow,
	"elephant.cow": elephantCow,
	"eyes.cow": eyesCow,
	"flaming-sheep.cow": flamingSheepCow,
	"ghostbusters.cow": ghostbustersCow,
	"head-in.cow": headInCow,
	"hellokitty.cow": hellokittyCow,
	"kiss.cow": kissCow,
	"kitty.cow": kittyCow,
	"koala.cow": koalaCow,
	"kosh.cow": koshCow,
	"luke-koala.cow": lukeKoalaCow,
	"mech-and-cow.cow": mechAndCowCow,
	"meow.cow": meowCow,
	"milk.cow": milkCow,
	"moofasa.cow": moofasaCow,
	"moose.cow": mooseCow,
	"mutilated.cow": mutilatedCow,
	"puking-cow.cow": pukingCowCow,
	"ren.cow": renCow,
	"satanic.cow": satanicCow,
	"sheep.cow": sheepCow,
	"skeleton.cow": skeletonCow,
	"small.cow": smallCow,
	"sodomized.cow": sodomizedCow,
	"squirrel.cow": squirrelCow,
	"stegosaurus.cow": stegosaurusCow,
	"stimpy.cow": stimpyCow,
	"supermilker.cow": supermilkerCow,
	"surgery.cow": surgeryCow,
	"telebears.cow": telebearsCow,
	"turkey.cow": turkeyCow,
	"turtle.cow": turtleCow,
	"tux.cow": tuxCow,
	"vader-koala.cow": vaderKoalaCow,
	"vader.cow": vaderCow,
	"www.cow": wwwCow,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"beavis.zen.cow": &bintree{beavisZenCow, map[string]*bintree{}},
	"bong.cow": &bintree{bongCow, map[string]*bintree{}},
	"bud-frogs.cow": &bintree{budFrogsCow, map[string]*bintree{}},
	"bunny.cow": &bintree{bunnyCow, map[string]*bintree{}},
	"cheese.cow": &bintree{cheeseCow, map[string]*bintree{}},
	"cower.cow": &bintree{cowerCow, map[string]*bintree{}},
	"daemon.cow": &bintree{daemonCow, map[string]*bintree{}},
	"default.cow": &bintree{defaultCow, map[string]*bintree{}},
	"dragon-and-cow.cow": &bintree{dragonAndCowCow, map[string]*bintree{}},
	"dragon.cow": &bintree{dragonCow, map[string]*bintree{}},
	"elephant-in-snake.cow": &bintree{elephantInSnakeCow, map[string]*bintree{}},
	"elephant.cow": &bintree{elephantCow, map[string]*bintree{}},
	"eyes.cow": &bintree{eyesCow, map[string]*bintree{}},
	"flaming-sheep.cow": &bintree{flamingSheepCow, map[string]*bintree{}},
	"ghostbusters.cow": &bintree{ghostbustersCow, map[string]*bintree{}},
	"head-in.cow": &bintree{headInCow, map[string]*bintree{}},
	"hellokitty.cow": &bintree{hellokittyCow, map[string]*bintree{}},
	"kiss.cow": &bintree{kissCow, map[string]*bintree{}},
	"kitty.cow": &bintree{kittyCow, map[string]*bintree{}},
	"koala.cow": &bintree{koalaCow, map[string]*bintree{}},
	"kosh.cow": &bintree{koshCow, map[string]*bintree{}},
	"luke-koala.cow": &bintree{lukeKoalaCow, map[string]*bintree{}},
	"mech-and-cow.cow": &bintree{mechAndCowCow, map[string]*bintree{}},
	"meow.cow": &bintree{meowCow, map[string]*bintree{}},
	"milk.cow": &bintree{milkCow, map[string]*bintree{}},
	"moofasa.cow": &bintree{moofasaCow, map[string]*bintree{}},
	"moose.cow": &bintree{mooseCow, map[string]*bintree{}},
	"mutilated.cow": &bintree{mutilatedCow, map[string]*bintree{}},
	"puking-cow.cow": &bintree{pukingCowCow, map[string]*bintree{}},
	"ren.cow": &bintree{renCow, map[string]*bintree{}},
	"satanic.cow": &bintree{satanicCow, map[string]*bintree{}},
	"sheep.cow": &bintree{sheepCow, map[string]*bintree{}},
	"skeleton.cow": &bintree{skeletonCow, map[string]*bintree{}},
	"small.cow": &bintree{smallCow, map[string]*bintree{}},
	"sodomized.cow": &bintree{sodomizedCow, map[string]*bintree{}},
	"squirrel.cow": &bintree{squirrelCow, map[string]*bintree{}},
	"stegosaurus.cow": &bintree{stegosaurusCow, map[string]*bintree{}},
	"stimpy.cow": &bintree{stimpyCow, map[string]*bintree{}},
	"supermilker.cow": &bintree{supermilkerCow, map[string]*bintree{}},
	"surgery.cow": &bintree{surgeryCow, map[string]*bintree{}},
	"telebears.cow": &bintree{telebearsCow, map[string]*bintree{}},
	"turkey.cow": &bintree{turkeyCow, map[string]*bintree{}},
	"turtle.cow": &bintree{turtleCow, map[string]*bintree{}},
	"tux.cow": &bintree{tuxCow, map[string]*bintree{}},
	"vader-koala.cow": &bintree{vaderKoalaCow, map[string]*bintree{}},
	"vader.cow": &bintree{vaderCow, map[string]*bintree{}},
	"www.cow": &bintree{wwwCow, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

