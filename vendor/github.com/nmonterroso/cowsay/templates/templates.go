// Code generated by go-bindata.
// sources:
// templates/beavis.zen.cow
// templates/bong.cow
// templates/bud-frogs.cow
// templates/bunny.cow
// templates/cheese.cow
// templates/cower.cow
// templates/daemon.cow
// templates/default.cow
// templates/dragon-and-cow.cow
// templates/dragon.cow
// templates/elephant-in-snake.cow
// templates/elephant.cow
// templates/eyes.cow
// templates/flaming-sheep.cow
// templates/ghostbusters.cow
// templates/head-in.cow
// templates/hellokitty.cow
// templates/kiss.cow
// templates/kitty.cow
// templates/koala.cow
// templates/kosh.cow
// templates/luke-koala.cow
// templates/mech-and-cow.cow
// templates/meow.cow
// templates/milk.cow
// templates/moofasa.cow
// templates/moose.cow
// templates/mutilated.cow
// templates/pokemon/bulbasaur.cow
// templates/pokemon/charmander.cow
// templates/pokemon/kadabra.cow
// templates/pokemon/pikachu.cow
// templates/pokemon/squirtle.cow
// templates/puking-cow.cow
// templates/ren.cow
// templates/satanic.cow
// templates/sheep.cow
// templates/skeleton.cow
// templates/small.cow
// templates/sodomized.cow
// templates/squirrel.cow
// templates/stegosaurus.cow
// templates/stimpy.cow
// templates/supermilker.cow
// templates/surgery.cow
// templates/telebears.cow
// templates/turkey.cow
// templates/turtle.cow
// templates/tux.cow
// templates/vader-koala.cow
// templates/vader.cow
// templates/www.cow
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _beavisZenCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd1\x51\x4b\xfb\x30\x14\x05\xf0\xf7\x7c\x8a\x03\x19\xec\xff\x87\xde\xf4\x5d\x17\x10\xc7\x9e\xf7\x2e\x81\xa3\x68\x30\x05\x35\xc3\xd6\x0d\x21\xe4\xb3\x4b\x5b\xe7\x9a\x3a\xc5\xf3\xd2\xc2\xef\x86\x7b\x93\xab\xb5\xd2\x1a\xd7\xfe\x6e\xdf\xb4\x15\x0e\x4d\x17\x70\xe3\x5f\xb0\x0b\xcd\x53\x6c\xe3\x2e\xbc\xe3\xd5\x3f\xc7\xbd\x7f\x30\x4a\x6b\xb5\xe8\x82\xe7\x7d\x3c\xc0\x62\xb5\xda\x6c\xd7\x97\x0a\xc0\xa2\x0b\xf1\xed\x31\x74\x2d\x8e\x21\x65\x48\xce\x52\xf5\x15\xf3\x92\x6a\x89\x49\xc6\x92\x31\x35\xca\x38\xa7\x7e\x34\x5c\x7c\x59\x9a\x13\xb0\xfc\x0d\xd3\xdf\x70\x50\x8a\x9c\x47\x26\x58\x31\xc3\xaf\x19\xbe\x69\x82\x31\xd5\xf1\x38\x30\x4d\x79\xb0\x06\xf2\xf4\x8a\x27\xfb\x47\x92\xee\xea\x7f\xff\x84\xcc\xb3\x7e\x48\xb4\xd6\xe6\x9c\xcd\x6d\x21\x1c\x63\x44\x72\x39\xa2\x73\x9f\xc4\xef\xc3\x9f\x9a\x9f\x15\xb2\x16\xf6\x6b\x84\x90\xa5\x15\x6b\x60\xbf\xa1\xcd\x76\xad\x3e\x02\x00\x00\xff\xff\xce\x93\x22\xc1\x48\x02\x00\x00")

func beavisZenCowBytes() ([]byte, error) {
	return bindataRead(
		_beavisZenCow,
		"beavis.zen.cow",
	)
}

func beavisZenCow() (*asset, error) {
	bytes, err := beavisZenCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "beavis.zen.cow", size: 584, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bongCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcc\xcf\x6a\x84\x30\x10\xc7\xf1\x7b\x9e\xe2\x07\xe3\xc1\x65\x9b\xcd\x03\x74\x0b\x2d\xcb\x9e\x3d\xf6\x22\x0e\x6a\x53\x53\x6a\x1b\x30\x11\x11\x06\x9f\xbd\xf8\xa7\x14\xa5\xbf\xe3\x87\xef\x0c\x91\x22\xc2\x0b\x6a\x3f\x60\xf8\x88\x0e\x25\x2a\xff\xdd\x3c\xe0\xbd\xf3\x5f\x68\xcb\x2e\x3c\xd7\xa1\x2f\x2f\x95\xed\x3e\x6d\x6b\xc7\x8b\x7d\xeb\x15\x91\x4a\xa2\xb3\x3c\x1f\x3d\xe1\x7a\xbd\x67\xb7\x47\x85\xdf\x25\xd1\xf9\xbe\x71\x31\xfc\xd1\xbf\x06\x14\xcc\x05\x16\xe1\x75\x26\x4d\xec\x68\xc3\x49\x99\x3c\x37\xe9\x56\x99\x94\xf9\x34\x57\x82\x57\xad\xb5\x16\x81\x4c\xb2\x80\x2c\xc1\x0a\xc0\x34\xed\xbe\x6f\x78\x30\x16\xf8\x03\x91\x98\x9d\xf0\x99\xce\xac\xee\xd9\x4d\xfd\x04\x00\x00\xff\xff\xdd\x0d\x70\xf9\x1e\x01\x00\x00")

func bongCowBytes() ([]byte, error) {
	return bindataRead(
		_bongCow,
		"bong.cow",
	)
}

func bongCow() (*asset, error) {
	bytes, err := bongCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bong.cow", size: 286, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _budFrogsCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xce\xbd\x6a\xc7\x20\x14\x05\xf0\xdd\xa7\x38\x60\x40\x1d\x8c\x0f\xd0\xb8\x34\x64\x76\xe9\x78\xe1\x16\x5a\x1b\x3b\x09\xf9\x20\x8b\xf4\xd9\x8b\x09\x24\x81\x7f\xce\xe4\xf1\xfc\x86\x2b\xa5\x90\x12\x1f\x29\xe2\x7d\xfd\xde\xe2\xef\x1c\x27\xfc\x4c\x79\x9c\x85\x94\xa2\x59\x52\xe4\xaf\xbc\xc1\xa3\xeb\x86\xd0\xbf\x09\xd4\x34\x4b\xca\xeb\x98\x96\xf9\xa8\x2f\xbd\x26\x07\x63\x5b\x3c\xa7\xb5\x3a\xe4\xcb\x3a\x66\x80\x89\x1e\xad\xab\x1b\x13\x5d\xbc\x42\x22\x0d\x94\xbd\x6a\xf3\xa7\xcd\x39\x16\xc0\x38\xc0\xdd\x2e\x21\x62\x2e\x44\x07\xd7\x96\x99\xad\xb9\xb8\x2b\xcc\x77\xad\x00\x65\xad\xaa\x4f\xef\x3f\xad\xf2\xfe\x5c\xf6\x6f\x25\x86\xd0\x8b\xff\x00\x00\x00\xff\xff\xe1\x43\x80\x72\x36\x01\x00\x00")

func budFrogsCowBytes() ([]byte, error) {
	return bindataRead(
		_budFrogsCow,
		"bud-frogs.cow",
	)
}

func budFrogsCow() (*asset, error) {
	bytes, err := budFrogsCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bud-frogs.cow", size: 310, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bunnyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x70\x54\x48\x2e\x2d\x49\x55\xc8\xc9\x2c\x29\xc9\x49\x55\x28\x4f\x4c\x4a\xca\x2c\xe1\x52\x56\xe6\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x50\x50\x29\xc9\xc8\x2f\x4d\xcf\x28\x29\xe6\x52\x40\xe2\x28\x28\x28\xc4\xc4\x80\x44\xc0\x20\x26\x46\x41\x1f\x89\xab\xa1\xa0\x09\x65\xeb\x69\x28\xe4\x2b\x68\xea\x71\xb9\xfa\x3b\x73\x01\x02\x00\x00\xff\xff\x1b\xc1\x58\x47\x7b\x00\x00\x00")

func bunnyCowBytes() ([]byte, error) {
	return bindataRead(
		_bunnyCow,
		"bunny.cow",
	)
}

func bunnyCow() (*asset, error) {
	bytes, err := bunnyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bunny.cow", size: 123, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cheeseCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xb1\x4e\x86\x40\x10\x84\xfb\x7d\x8a\x49\xf6\x8f\x05\x89\x59\x7b\xb1\x22\xd4\x34\x96\x9b\x5c\x41\x4e\xcf\x28\x21\x11\x8c\xcd\x3e\xbc\xb9\xbd\x43\x10\xf5\x9f\x82\x61\xe7\xcb\x32\x59\x98\x89\x19\x8f\x29\x62\x4c\x31\x2e\x11\x4f\xef\xf3\x84\xe9\xe5\xed\x15\x37\x35\x22\x66\xba\xac\x29\x86\x71\xfe\xc4\x03\xda\xb6\x1f\xba\x7b\x02\x70\x59\xd3\xfc\xf1\x9c\xd6\x25\x0f\xa7\x09\x08\x59\x9b\x67\x95\x5c\xfc\xa9\x1a\xca\x4b\x96\x39\x31\x9c\x65\xd7\x81\xe7\xcc\xac\x0a\x08\x33\x7b\xb4\x13\xdc\xe5\x1a\x71\xdf\x88\xfc\xf1\xad\x0c\x64\x2f\x69\xbf\x81\x2a\x54\xc9\xfe\x59\x82\x91\xd5\x2d\xd5\x7a\xa1\x94\xee\x23\xfb\xb9\x25\x10\x12\xfb\x4d\xc4\xca\x49\xb7\x27\x19\x1d\x1b\xf7\x03\x5d\x4d\xd3\x54\xdb\x22\x09\x21\xf8\xdf\x70\xa7\x7e\xe8\xe8\x2b\x00\x00\xff\xff\x4e\x66\x60\xe9\xe0\x01\x00\x00")

func cheeseCowBytes() ([]byte, error) {
	return bindataRead(
		_cheeseCow,
		"cheese.cow",
	)
}

func cheeseCow() (*asset, error) {
	bytes, err := cheeseCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cheese.cow", size: 480, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cowerCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x31\x0a\xc2\x40\x10\x45\xfb\x39\xc5\x87\x49\x61\x24\xec\x05\x8c\x85\x2c\xa9\x73\x81\x81\x29\x42\xc8\xda\x38\xa0\x2b\xdb\xec\xe1\x65\x08\x26\x88\x99\xea\xfd\xf7\xaa\x61\x26\x66\xdc\x30\x59\x99\x9f\xf7\xc7\xe2\x40\xcc\xd4\xe4\x34\xeb\x64\x05\x57\xf4\xfd\x30\xc6\x0b\xc1\xaf\xc9\xc9\xde\x4b\xca\xaf\x75\xfe\x6d\xa0\x53\xed\x50\x9d\x2a\x36\x79\x32\x6b\x45\x56\xab\xaa\xbb\x57\xdd\x3c\x80\x56\x64\x6f\xf8\x5a\x54\x2d\x0e\x22\x47\x0d\xa8\x0e\x67\xfa\x8d\xd1\xff\x09\x21\x04\x1a\xc6\x48\x9f\x00\x00\x00\xff\xff\x4d\x5b\x2b\x58\xe6\x00\x00\x00")

func cowerCowBytes() ([]byte, error) {
	return bindataRead(
		_cowerCow,
		"cower.cow",
	)
}

func cowerCow() (*asset, error) {
	bytes, err := cowerCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cower.cow", size: 230, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daemonCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x50\x31\x6e\xc3\x30\x0c\xdc\xf5\x8a\x03\x14\x40\x16\x60\x99\x8b\x3b\xd5\xca\x12\x64\xf6\x07\x88\x52\x40\x51\xd4\x5b\x86\xba\xe8\x50\x3f\xbe\xa0\x14\x3b\x52\xca\x89\xba\x3b\xdd\x91\xb4\xd6\x58\x8b\x71\x18\x71\x3e\xe3\x65\x18\x8d\xb5\xe6\xb4\x2e\x1f\xf2\x7e\xfb\x41\xc4\x34\x5d\xe7\xcb\xab\x01\x70\x5a\x97\xdb\xf7\xe7\xb2\x7e\x61\xaf\xfe\x68\x94\xff\x27\xa0\x6e\xe7\x7d\xca\x82\x67\x05\x33\x98\x45\x44\xb5\xd8\x0c\xaa\xa2\x00\x01\x52\x20\xc0\xd5\x44\x47\xcc\x54\x3e\xaa\x8a\xb9\x26\x09\x04\x60\x43\x2a\xe6\x35\x35\x63\xd6\x39\xb2\xa0\x8d\x4a\xe1\x2d\x04\x97\xa6\xfc\xa8\xb3\x3a\x19\x3c\x74\x0a\xaf\xd6\xcd\x97\x41\x44\x28\xa7\x34\xb8\x9a\x69\x39\x90\x99\xb4\x19\x32\x28\x02\x42\xde\x92\xb9\xe0\x5b\x8c\x31\xce\xde\xfb\x18\x3d\x98\x3d\x48\x81\xc2\xb9\xbb\x8f\xcb\x31\xbd\x7b\x5a\x44\xf7\xdb\x9b\x16\x2f\x27\x69\x87\x92\x5c\x1d\x3a\xd1\xeb\xe4\x63\x8b\xc8\x9d\xee\x1d\xd0\x87\x3d\x73\x7b\xd8\x98\x63\x99\x5f\x39\xca\x3f\x78\x32\xd7\xf9\x62\xfe\x02\x00\x00\xff\xff\x52\xf9\x4e\xb9\x39\x02\x00\x00")

func daemonCowBytes() ([]byte, error) {
	return bindataRead(
		_daemonCow,
		"daemon.cow",
	)
}

func daemonCow() (*asset, error) {
	bytes, err := daemonCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "daemon.cow", size: 569, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xca\x31\x0a\x83\x40\x10\x85\xe1\x7e\x4f\xf1\x90\x2d\xdc\x62\xc9\x01\x62\x2a\xb1\xf6\x02\x0f\xa7\x08\x83\x5b\x65\x0b\x47\x24\x30\x87\x4f\x91\x25\xd1\xbf\x19\x86\xef\x45\x2b\x2a\xcf\x7a\xe0\x81\x61\xe8\xa6\x79\xec\xee\x01\xad\x68\xa5\xee\x6b\xb1\x0d\xc0\x22\xb2\xfc\xe0\x2c\x7d\xd4\xb7\x6e\x89\x94\x6f\xff\x11\x80\x5e\x24\x91\xed\x49\xe4\x8d\xbc\x38\xa2\xd5\xd7\xba\x2b\xdc\x73\xce\xf9\x80\x5f\x19\x80\x7b\x3b\x61\x9a\xc7\xf0\x09\x00\x00\xff\xff\x0e\xf7\xd0\xca\xaf\x00\x00\x00")

func defaultCowBytes() ([]byte, error) {
	return bindataRead(
		_defaultCow,
		"default.cow",
	)
}

func defaultCow() (*asset, error) {
	bytes, err := defaultCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default.cow", size: 175, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dragonAndCowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\xd2\xc1\x6e\xe2\x30\x10\x06\xe0\x7b\x9e\xe2\x5f\x85\x03\x45\xd8\xc3\xbd\xac\x44\x55\xf5\xcc\x0b\x8c\x18\x20\x58\x80\xe8\x36\x2b\x12\x54\x55\x75\xf3\xec\x95\xed\x38\x24\x10\x62\x24\x3b\x0a\x99\xcf\x33\x63\xa7\x69\x92\xa6\x78\xc1\xee\xbc\xd9\xe7\x1f\x28\xfe\x1d\xcb\xe3\xc7\x1e\x1b\x64\xf9\xe7\x14\xff\xf3\xa2\x38\x6e\xdf\x0d\xb2\xb3\xd9\x1d\x4b\x94\x39\x4e\x97\xad\x59\x64\xc5\x65\xa3\xb7\xe6\x7c\x32\xef\xe6\x4b\x9b\xdd\x25\x49\xd3\x64\x54\x1e\x8c\x64\xf9\x27\xfe\x62\x3e\x7f\x5b\xbe\x3e\x27\xe8\x1f\xa3\xf2\x90\x5f\xf6\x87\xb2\xe8\xfb\x73\xe5\x26\x5a\x3d\x8a\x1d\x0a\x26\x30\x03\xe4\x96\x87\xe1\x9d\x78\xcb\x2c\x22\x64\x63\x38\xc0\x4c\x04\xe8\x21\xa0\x2d\xd0\x12\x58\xba\x28\x91\x10\xef\x76\x87\x75\x79\xb8\x54\x9a\x31\x51\x4a\xa9\xc9\x80\x59\x47\xbb\x99\x99\xa4\xa1\x60\xe1\xa5\xb6\xe6\x9f\xed\x20\xc6\x0b\x11\xe1\xc5\x3a\x7c\x4e\x12\x35\xc7\x85\xf8\x16\xc8\x4c\x3e\xdf\x21\x71\x46\xb3\xd8\xa6\x00\x06\xce\x7b\xb5\xd5\x11\x31\xe0\x39\xab\xed\xf9\xa6\x07\x2e\x78\x91\x6a\x44\xfb\xa8\xde\x48\xcd\x48\xac\xf8\x16\x8e\x63\xa5\x0d\x16\x19\xa9\x57\x0b\xd0\x3d\x76\x95\x66\xb4\xa6\xa9\x40\xe0\x4e\xe1\x09\xcf\x50\xba\xc1\xc4\x29\x5a\x55\x75\x90\xdb\xa8\xc7\x6a\x8f\xa9\xfa\x89\x8f\x12\x96\x89\xd2\x56\xab\x2a\xa8\xf5\xd0\x5e\xac\x3a\x54\xd3\x04\x91\x58\x10\xd6\x14\x7b\x42\x77\x3b\x39\x51\xd0\x24\x77\x93\x97\xbf\xe9\x32\x1e\x99\x2f\x53\x3c\xb5\xde\x4f\x5c\x1a\x3f\xed\x2f\xbf\x7b\xaa\xb8\xc1\xc6\x7e\x52\xaa\x05\x69\x77\xc3\x2b\xa5\xaf\xb7\x80\x59\xad\xef\x20\xdd\xad\x11\x44\x22\xcc\xe1\xbe\x88\xe0\x25\x3b\xfd\xf1\x6f\xc9\x7b\x5a\xcf\x6f\xba\x11\x87\x40\x75\xa5\x70\xe8\x81\xba\xd9\x81\x94\xf6\xc7\x19\x7f\xdf\x2b\xa8\xfa\x57\x25\x6f\xcb\xd7\xe4\x37\x00\x00\xff\xff\x2a\x85\x47\x5a\x04\x05\x00\x00")

func dragonAndCowCowBytes() ([]byte, error) {
	return bindataRead(
		_dragonAndCowCow,
		"dragon-and-cow.cow",
	)
}

func dragonAndCowCow() (*asset, error) {
	bytes, err := dragonAndCowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dragon-and-cow.cow", size: 1284, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dragonCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x4b\x6b\xdb\x40\x10\xc7\xef\xfb\x29\xfe\xa0\x80\x24\xf0\xec\xe4\x9e\xb4\x04\xd2\x9c\x73\x29\xf4\x32\x68\x14\x8c\xb0\x7a\xa9\x4b\xad\xd2\x83\x65\x7d\xf6\x32\xfb\xb2\xfc\x38\x65\x85\xd7\x20\xfd\xfe\x8f\x59\xa9\xaa\x5c\x55\xe1\xfb\x38\xe0\xc7\xf8\x73\x1a\x0e\xbf\x3f\xb6\x03\xbe\xfd\xf9\xd8\xed\x7f\xb9\xaa\x72\x0f\xd3\x38\xe8\x76\xff\x0f\x5f\xf0\xfc\xfc\xf6\xfe\xfa\xe4\x10\xd6\xc3\x34\xee\xff\xee\xc6\xe9\x80\x3b\x8b\x21\x02\x30\x8b\x24\xfa\x12\x9f\x45\x54\x95\xe7\x0c\x03\x22\xcc\xb6\x9f\x05\xf1\xd1\x23\xf0\x68\xf7\x55\x23\x07\xc3\x66\x73\xb7\x00\xc0\x5d\x84\xa6\x5d\x84\xb5\xc0\x98\x11\x58\xfb\xad\x69\x79\xd1\x4e\xe5\xa5\x4e\xe9\x9a\x71\xe3\xa3\xb9\xc8\xa5\x3d\x6b\x17\x6d\x23\x1f\xe9\x80\xa7\x32\xab\xf2\x0d\x98\x5b\xcc\x25\x4c\x38\xe1\xe9\x5e\x14\x9c\x15\x0d\x18\xdc\x42\x67\x0d\x63\xb4\xb9\x4c\x11\x64\x85\x26\x89\x05\x98\xa2\xe6\x8d\x42\x61\xc5\x1a\x3c\x81\x7c\x91\xa8\xb1\x9e\x96\xdc\xc1\xd3\xb2\x2c\x1d\x79\x07\x34\x21\x0e\x6d\x8b\x0d\x1d\xf3\x73\x8d\x7f\x3d\xf9\xd9\xd3\x12\x8d\xb2\xb4\x98\xa0\xf7\x2e\xc8\x93\x1e\x35\xa7\x62\xe0\xeb\x8f\x00\x66\xa2\x28\x15\x3c\x59\x7c\x1c\x3a\x58\x44\x87\xe8\x0a\xe0\xb8\xd6\x9e\x6e\xdc\x4a\x42\x7c\x9b\x79\x8c\x64\xe1\x89\xc8\x5a\xe7\x36\x86\x50\x7d\x63\xb1\x9a\xc4\xc8\xde\x43\x24\x9e\xc9\x3a\x87\x39\xd8\x79\xff\x75\x0d\xaf\x96\xe2\x7c\xae\x65\x80\x8e\x7a\xdb\xd4\x5d\xd7\x66\x26\x1f\x5e\x52\xbe\x4e\x1d\x28\x5d\xcb\x9d\x39\xed\xe4\x08\x1b\x4f\xcb\xb5\xd5\x27\x16\x9b\xcd\xdb\xfb\xab\xfb\x1f\x00\x00\xff\xff\x3c\xf8\xd2\x02\xe8\x03\x00\x00")

func dragonCowBytes() ([]byte, error) {
	return bindataRead(
		_dragonCow,
		"dragon.cow",
	)
}

func dragonCow() (*asset, error) {
	bytes, err := dragonCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dragon.cow", size: 1000, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _elephantInSnakeCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcd\x4f\xca\xc2\x30\x10\x05\xf0\xfd\x9c\xe2\xc1\x74\x3d\x17\xf8\xfa\x21\x52\xb3\xe8\xaa\x0b\x0f\x20\xc1\x0e\x26\x58\x92\x42\x46\xea\xf1\x45\x50\x6a\xff\xbc\x55\x5e\x7e\xf0\x86\x99\x98\x71\xca\x98\x14\x49\xb5\x87\x65\xe8\x73\x1c\x7c\x4c\xb0\x10\xcb\x81\x98\xa9\xb2\xa0\x97\x6b\x9e\xf0\x8f\xba\x76\x5d\xf3\x47\x00\x2a\x0b\xf9\x71\x0b\x56\xde\x65\x6e\x58\x44\x44\xe4\xf3\xa4\xd5\xf7\x97\x64\xc3\xb2\x58\x58\xb3\x60\x8f\xe5\x77\x72\x73\x68\xe6\xdd\x10\xb9\x41\xc7\xe0\x93\x21\xa6\x12\x7b\xc5\xf1\xdc\xb4\x2d\x4a\xf2\x77\x25\xd7\x35\xf4\x0a\x00\x00\xff\xff\xb2\x24\x3d\x22\x27\x01\x00\x00")

func elephantInSnakeCowBytes() ([]byte, error) {
	return bindataRead(
		_elephantInSnakeCow,
		"elephant-in-snake.cow",
	)
}

func elephantInSnakeCow() (*asset, error) {
	bytes, err := elephantInSnakeCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "elephant-in-snake.cow", size: 295, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _elephantCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8c\x31\xca\xc3\x30\x0c\x85\x77\x9d\xe2\x81\x32\x24\x93\x0e\xf0\xe7\x1f\x4a\xc8\xec\x0b\x08\x4c\xda\x86\x7a\x68\xe3\x42\x15\xba\xf8\xf0\xc5\x76\x42\x69\x97\x6a\xf8\xf4\xf4\x3d\x10\x33\x31\xe3\xb0\x60\xbe\xce\xf7\x30\x2d\x86\xb8\x1a\xa6\xe5\x8c\xe9\x18\x57\x23\x66\x6a\x2c\xcc\xfe\x14\x9f\xf8\x47\xdf\x8f\x6e\xf8\x23\x34\x16\xe2\x7a\x09\xf6\x40\x1e\x51\x05\xbc\xf7\x25\x11\x3e\x5a\x11\xa8\x0a\x50\xa8\x5a\x7a\x00\x6d\x9b\xe9\xe0\xf2\xea\xba\x2a\x4b\x0f\xd9\x22\x44\x36\x5d\x3f\x24\xa4\x9a\x76\x9b\xef\x54\xf1\xd3\x21\xe2\xdb\xa5\x9d\x6f\x77\x4b\x3b\x69\x74\x03\xbd\x02\x00\x00\xff\xff\x84\x63\x75\x0a\x1c\x01\x00\x00")

func elephantCowBytes() ([]byte, error) {
	return bindataRead(
		_elephantCow,
		"elephant.cow",
	)
}

func elephantCow() (*asset, error) {
	bytes, err := elephantCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "elephant.cow", size: 284, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _eyesCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\x41\x4b\xc4\x30\x10\x85\xef\xf3\x2b\x5e\x33\x05\xa1\x62\x4e\x9e\x62\xbd\xb8\xf4\xea\x8a\x50\x92\x43\x51\xd0\x2d\xdb\xc5\xc5\x1c\xb6\x2a\x5e\xf2\xdb\x25\xa6\x71\xc7\x6d\x75\xe6\xd0\x79\xd3\xf7\xbd\x0e\x94\x99\x98\xd1\xbc\xef\xf6\x17\x7b\xef\x5f\x76\xaf\x5b\xf4\x9f\xfd\x81\x98\xa9\x1c\x87\xfe\xf1\xd9\x7f\xe0\x1a\x75\xdd\xac\x57\x57\x04\x00\xe5\x38\xf8\xb7\xed\x30\x1e\xbe\xd5\xa9\xfc\xbf\xb4\x31\x45\x2a\xa3\x09\xd0\xd3\xf8\xb7\xbd\x10\x45\x40\x08\x21\x24\x31\x67\x84\xb9\xb5\xd6\x76\x65\x6c\x4c\x57\x99\x28\x6e\xad\x2b\x0a\xb3\x80\xb8\x36\xfb\x65\xdf\x65\xf8\xb8\x62\xb6\x2e\x27\xe8\x3a\x7d\x2a\xbf\x53\xd2\x38\xd9\xe7\x09\x79\x6e\x5d\xbc\x4a\xf2\xd2\x83\xcb\xa3\xaa\x72\xc8\x43\xd2\x37\x22\xae\x3b\x49\x9f\xe5\x6c\xe2\xf3\x5e\xe1\xe7\xe7\xa8\xaa\x2b\x9f\x36\xc2\x01\xe0\xac\x5a\xe6\xfd\x39\x0b\x32\xe1\x4a\xa9\xdf\x2a\x2e\xa8\x59\xaf\xe8\x2b\x00\x00\xff\xff\x8d\x78\x2f\x25\x49\x02\x00\x00")

func eyesCowBytes() ([]byte, error) {
	return bindataRead(
		_eyesCow,
		"eyes.cow",
	)
}

func eyesCow() (*asset, error) {
	bytes, err := eyesCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "eyes.cow", size: 585, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flamingSheepCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcf\x4f\x6b\x83\x40\x10\x05\xf0\xfb\x7e\x8a\x07\x1b\x30\x01\x33\xbd\x9b\x14\x02\x21\xf4\x18\x28\xcd\x41\x10\xb2\x26\x4e\x75\x68\xea\x16\xff\x50\x84\xc5\xcf\x5e\x54\x62\x94\xf4\xcd\xf0\x10\xf7\xc7\xc2\x6a\xad\xb4\xc6\x47\xc6\xf8\xbc\xc5\xdf\x92\xa7\x28\x33\xe6\x1f\x1f\x57\x9b\x57\x85\x5c\xea\x8a\x13\x5c\x1a\xbc\xb1\x2d\x92\x38\xc7\xbb\x2d\xe3\x42\x2c\x96\xe9\xf0\x63\x77\x2d\xeb\x98\x2e\x5c\x7c\xf1\x8d\x1b\xe2\xa4\x5e\x29\xad\xd5\xa2\xca\xf8\x7c\xb5\xbf\x78\xc5\x76\x7b\x38\xee\x37\x0a\x58\x54\x99\xad\xd3\xac\x2a\x31\x09\x8d\xd5\xb7\xc2\x93\xa3\x6e\x07\x61\x00\xbf\xff\xe8\xd8\xdc\xd1\xa6\x33\x01\xc8\x43\x80\x61\x69\x60\x33\x27\x44\x26\x80\x18\x08\x09\xf9\x02\xc8\xc8\x66\xce\xf8\xeb\x35\x39\x81\x13\x27\xc3\x06\x77\xd6\xe7\xb4\xe0\x86\xcb\x53\x14\x91\x17\xed\x1e\x63\xc8\x39\x6f\xea\xa2\xe8\x7c\x7e\x59\x4e\xc9\x7d\x56\x1e\x66\x37\xf6\x79\x92\xab\xf1\xb5\xd3\x98\x30\x6c\xdb\xb6\x0d\x43\xef\xdf\x63\x38\xf7\x68\xa8\xc3\x71\xaf\xfe\x02\x00\x00\xff\xff\xdb\x1d\xe2\x09\xe7\x01\x00\x00")

func flamingSheepCowBytes() ([]byte, error) {
	return bindataRead(
		_flamingSheepCow,
		"flaming-sheep.cow",
	)
}

func flamingSheepCow() (*asset, error) {
	bytes, err := flamingSheepCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flaming-sheep.cow", size: 487, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ghostbustersCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x93\xcf\x6a\xc3\x30\x0c\xc6\xef\x7a\x0a\x2d\x2e\xac\x39\xa8\x7a\x80\xb5\xbd\x94\xb2\x63\x4e\x2b\x39\x18\x04\x1b\x65\xb9\x05\x96\x74\x7b\xfd\x61\xd9\x71\xec\xd8\xfd\xa0\x25\x95\xbf\x5f\xf5\x2f\x36\x06\x8c\xc1\xf7\x61\x9c\xe6\xcf\xc7\x34\xdf\x7f\xa6\x17\x30\x06\x76\xf3\x70\x97\xaf\xf1\x0f\x4f\x78\x3c\x5e\xbb\xcb\x1b\x60\xd4\x6e\x1e\xc6\xc7\xf7\x30\x4f\x49\xac\x1e\x5c\xa3\x6b\x48\x84\x88\x44\x32\x5b\x3c\xa3\xf0\xc0\xce\xe2\xb4\xb5\x39\x7a\x8f\xac\xcf\xd6\x62\xdb\xaf\xb2\xf6\xf7\x90\xdb\x0f\xd4\xf7\xfd\x1e\x11\x3b\xff\x49\xdd\x4e\x94\xd9\x39\x98\x9d\x3e\xf4\xbb\x5d\x8e\x62\x06\xc8\xed\x2b\x10\xd4\x12\x49\xb4\x6f\x11\x4f\x30\x06\xa6\x8b\x39\xbc\x55\x3b\x2a\xa0\xc0\x60\xe8\x39\x2b\x48\x09\x91\x05\xdb\x40\xbd\x08\x57\x08\x0c\xb3\xd3\x3d\xd0\x19\x50\xd7\xe1\xab\x7e\x4a\x68\x9a\xd8\x07\x68\x84\x10\x1d\xc9\xba\x15\x61\x6b\x8b\x24\xbe\x6a\x71\x99\xf8\x04\xfe\x7f\xc8\xf9\x3c\x51\x29\x4b\xf5\x4a\x44\xe1\x00\x62\xb9\x64\x2d\xeb\x68\xaa\x48\x3e\x62\x48\xda\x8c\x9b\xf0\x2f\xcc\x53\x86\x93\xd5\x2e\x94\xff\x75\x2e\x08\x29\x91\x08\x2d\x23\x49\xed\x12\xfa\xc9\x01\xa4\xf8\x1e\xe6\x5a\xa6\x42\xc5\x1d\x49\xda\x29\xc4\x95\x1b\xd5\x34\xb7\xd2\x78\x6b\x1a\xb8\x76\x17\xf8\x0f\x00\x00\xff\xff\x75\xbe\x1e\x47\xfa\x03\x00\x00")

func ghostbustersCowBytes() ([]byte, error) {
	return bindataRead(
		_ghostbustersCow,
		"ghostbusters.cow",
	)
}

func ghostbustersCow() (*asset, error) {
	bytes, err := ghostbustersCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ghostbusters.cow", size: 1018, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headInCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\x41\xca\x83\x30\x14\x84\xf7\xef\x14\x03\x71\xa1\x8b\xfc\x1e\xe0\xd7\x95\x48\x97\x5e\x20\xf8\x10\x1b\x8c\x14\x0c\xd4\x88\x08\xef\xf0\x05\x93\x50\xe8\x6c\x92\x79\x33\x1f\xa3\x14\x29\x85\x87\xc7\x1e\xd6\xf9\x85\xcb\xbe\xe1\xec\xf4\xc4\xba\x61\xc2\xec\xcf\x3f\x52\x8a\x8a\xe0\x2c\xcf\xfe\x44\x8b\xa6\xe9\x87\xee\x9f\x00\xa0\x08\xce\x1f\x8b\x0b\xfb\xed\x7e\xec\xc8\x3c\x22\xab\xbe\x4f\x65\x61\x2f\xbb\x57\xc6\x70\x54\x0d\x70\x56\x2c\x30\x57\xc6\x24\xa6\x6a\xcb\x98\x0b\x23\x21\x74\xaf\xf8\x6d\x39\x2c\x00\x11\xad\xb5\x3e\x21\x80\x31\x48\x5c\x6a\x42\x28\x6f\x8b\x7c\x9f\xf4\xcf\x01\xf5\x43\x47\x9f\x00\x00\x00\xff\xff\xbb\x32\x9d\xe1\x01\x01\x00\x00")

func headInCowBytes() ([]byte, error) {
	return bindataRead(
		_headInCow,
		"head-in.cow",
	)
}

func headInCow() (*asset, error) {
	bytes, err := headInCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "head-in.cow", size: 257, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hellokittyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\xf0\x48\xcd\xc9\xc9\x57\xf0\xce\x2c\x29\xa9\xe4\x52\x56\xe6\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x50\x50\x29\xc9\xc8\x2f\x4d\xcf\x28\x29\xe6\x52\x40\xe3\x28\x28\x28\xe8\xc7\xc4\xc4\x6b\xe6\xdb\x40\x78\x35\x10\xb1\x98\x18\x18\xd7\x5f\x41\x4f\xc1\xbf\x86\x0b\x26\x1c\x0f\x02\xfa\x5c\xae\xfe\xce\x5c\x80\x00\x00\x00\xff\xff\xad\x2d\x8f\x45\x7e\x00\x00\x00")

func hellokittyCowBytes() ([]byte, error) {
	return bindataRead(
		_hellokittyCow,
		"hellokitty.cow",
	)
}

func hellokittyCow() (*asset, error) {
	bytes, err := hellokittyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hellokitty.cow", size: 126, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kissCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x91\xc1\x6e\xc3\x20\x10\x44\xef\x7c\xc5\x48\x44\x32\x48\xc6\xdc\x4b\x7a\xa8\xa2\x9c\xf3\x03\x48\xb8\x8d\xac\xfa\xd0\xca\x55\xe2\xb6\x97\x15\xdf\x5e\x2d\x90\x18\x27\xcd\x3b\x04\xb1\xb3\x3b\x99\xc5\x52\x0a\x29\xf1\x82\x8f\xe9\x67\x38\x9d\x1b\x0c\x9f\x5f\x6f\xa7\xd7\xe3\x20\xa4\x14\x9b\x79\x1c\xc2\x71\xfa\xc5\x33\xb6\xdb\xfd\x61\xe7\x04\x98\xcd\x3c\x4e\xdf\xef\xe3\x7c\xce\xd7\xbb\x7b\xa1\x75\x99\x76\x55\x76\x0b\x2b\x21\x55\x9a\xc0\xb8\xe6\x46\x50\x56\x6b\xad\x49\x29\xef\x6b\x25\x38\xa7\x12\xc4\x72\xa5\x58\x50\xf0\x0f\xc8\x6d\x9d\x31\x51\x01\xde\x23\xea\x0a\x91\xa7\x19\xef\x81\xde\x7b\xa3\x16\xae\xe3\x94\x7f\x7a\xee\x81\x06\xa5\x33\x8d\x52\x89\x51\x3a\xd0\x77\x08\x96\xcd\xd2\x62\x16\x54\x52\x26\xbd\x65\x87\x58\x3f\x8e\xbd\x2c\x41\x97\x08\x57\xeb\x5a\x26\xf6\x4d\xf1\xe8\x3f\x11\x88\x26\xcb\x77\xbe\x39\x48\xec\x82\x8d\x30\xa1\x05\x50\xbf\x29\x19\x26\xaf\x93\x87\x1b\xe7\x56\x91\xf8\x78\xe2\x0f\x55\xdc\x96\xff\xb4\x55\x4f\x29\x8a\xd5\xe0\xad\xb8\x3f\xec\xc4\x5f\x00\x00\x00\xff\xff\x08\x80\xc9\x3b\x7d\x02\x00\x00")

func kissCowBytes() ([]byte, error) {
	return bindataRead(
		_kissCow,
		"kiss.cow",
	)
}

func kissCow() (*asset, error) {
	bytes, err := kissCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kiss.cow", size: 637, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kittyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xb1\x4e\xc3\x30\x14\x45\x77\x7f\xc5\x21\xae\xf4\xe2\x2a\xef\x65\x61\x6b\x19\x50\xd5\x81\xa9\x33\xd3\xb3\x84\x0a\x89\x5a\x35\x12\x31\xe2\xf7\x91\x13\x10\x43\x3d\xf9\xc8\xe7\xde\xeb\x18\x43\x8c\x3c\x73\x19\x4b\x39\xdf\x98\xde\x99\xa7\xcf\x32\x77\xbc\x50\x86\xf1\x76\x09\x31\x86\x4d\x19\xce\xfe\x36\x7d\xf3\xc4\x7e\x7f\x3c\x1d\x76\x81\x7a\x36\x65\x98\xbe\x3e\x86\x32\xaf\x78\xc7\xb4\x4d\x56\x01\xd1\xbe\x49\x98\xbb\x9b\xa9\x0a\x42\x93\xd5\xfc\xcf\x82\xcc\xd6\xd9\x42\x5a\x40\xad\x46\xd7\x97\x84\x55\xd5\x8d\x9c\xfe\xfd\xd6\x5f\xdd\x12\x82\x39\x6b\x2a\x9b\x67\x76\x90\x33\x6a\x98\xca\xaf\xec\x66\x64\x55\xa9\xcb\xde\x03\x7d\xfd\x80\x63\x42\xf7\x18\x96\x9d\x91\x2b\xa9\x53\x91\x0a\x57\xc6\xd4\x2d\xb7\x96\x87\xda\x53\x4b\xc2\xf1\x74\x08\x3f\x01\x00\x00\xff\xff\xfd\x90\x05\xfb\x28\x01\x00\x00")

func kittyCowBytes() ([]byte, error) {
	return bindataRead(
		_kittyCow,
		"kitty.cow",
	)
}

func kittyCow() (*asset, error) {
	bytes, err := kittyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kitty.cow", size: 296, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koalaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xca\xb1\xca\x02\x31\x10\x04\xe0\x7e\x9f\x62\x60\xaf\x48\x7e\xf8\xef\x05\x3c\xab\xe3\x6c\xaf\xb6\x5a\x42\x08\xe6\x30\x66\x41\x57\x2c\xc4\x3c\xbb\xe8\x69\xe3\x54\xf3\x31\xc3\x4c\xcc\xd8\x9d\xf5\x04\xcb\x09\x31\x54\xad\x4b\x0c\x05\x47\x0d\x25\x20\x6a\x29\x29\xda\xa2\x95\x98\xa9\xb3\x9c\x24\xea\x0d\x5b\x0c\xc3\x34\x8f\x1b\x02\x3a\xcb\x7a\x3d\x64\xbb\x10\x7e\xf0\x8a\x88\x00\x2b\xee\xad\x97\xbe\x3d\x3e\x8b\xc3\x1e\x7e\xed\xce\xb7\xbf\xe6\x3c\xbe\x47\x27\xfe\xdf\xc9\xdb\xd3\x3c\xd2\x33\x00\x00\xff\xff\xe3\xfe\x84\x25\xa2\x00\x00\x00")

func koalaCowBytes() ([]byte, error) {
	return bindataRead(
		_koalaCow,
		"koala.cow",
	)
}

func koalaCow() (*asset, error) {
	bytes, err := koalaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "koala.cow", size: 162, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koshCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8d\xb1\x0e\xc2\x30\x0c\x44\x77\x7f\xc5\xa1\x54\x62\xcc\x07\xd0\x4e\x55\x07\xc4\xd0\x1f\xb0\x64\x21\x84\xc8\x96\xa1\x41\x1d\x30\xff\x8e\x62\x0a\x69\x69\x85\x07\xe7\xee\x5e\x72\x71\x8e\x9c\xc3\x31\xed\x07\x9c\x71\x8a\x43\x40\x1b\xc7\x1d\x39\x47\x55\x0a\x57\xb9\xc4\x11\x0d\xea\xba\xeb\xdb\x03\x01\x40\x95\x42\xbc\xdf\x42\x1a\xcc\xfd\xda\x85\x17\x91\x77\x98\xd5\xa4\x45\x84\xe0\x01\x30\x9b\xf7\xb6\x74\x52\xcc\xa4\x16\xeb\x17\x65\x39\x65\x85\xf9\xdc\xe7\x31\x63\xb6\xcb\x05\x2d\xe7\xea\xb1\xe2\xf1\x84\x5a\xfd\x9a\xe5\x62\xf5\xd8\x62\x80\x36\xcd\xfc\xbb\x0f\x03\xb3\x94\xf1\x58\xc2\x8d\xf9\xcf\xba\xbe\xa5\x57\x00\x00\x00\xff\xff\xb0\xfb\x48\xf0\x96\x01\x00\x00")

func koshCowBytes() ([]byte, error) {
	return bindataRead(
		_koshCow,
		"kosh.cow",
	)
}

func koshCow() (*asset, error) {
	bytes, err := koshCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kosh.cow", size: 406, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _lukeKoalaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xce\xb1\x0a\xc2\x30\x18\x04\xe0\xfd\x7f\x8a\x83\x74\x48\x04\x9b\x07\xb0\x4e\xa5\x2e\x0a\x1d\x9c\x9c\x42\x08\xc1\x94\xc6\xfe\x50\x53\x8a\x88\x79\x76\x87\x96\xea\x4d\xf7\x71\xcb\x09\x41\x42\xe0\x34\xf2\x03\x29\x78\x38\x3b\xf0\xd0\x39\x1b\xd1\xb3\x8d\x16\x8e\x63\xf4\x2e\x75\x3c\x90\x10\x54\xa4\xe0\x8d\xe3\x19\x47\x54\x55\xd3\xd6\x07\x02\x8a\x14\x78\xba\x87\xf4\x24\xfc\x01\x5b\x4a\x5a\x8b\x31\x06\x80\xd6\x8b\xdf\xb9\x34\x65\xfe\x68\x8d\x75\x97\xb8\x41\x9d\x35\x56\x4b\x95\x77\x59\x2a\x6c\x36\x6a\x2f\xcd\xcf\x97\xa9\xf7\xd8\x74\x7d\xcd\x36\xf6\x7e\x5c\xb4\x5c\x07\xa8\x69\x6b\xfa\x06\x00\x00\xff\xff\x53\x62\x8f\xac\xe1\x00\x00\x00")

func lukeKoalaCowBytes() ([]byte, error) {
	return bindataRead(
		_lukeKoalaCow,
		"luke-koala.cow",
	)
}

func lukeKoalaCow() (*asset, error) {
	bytes, err := lukeKoalaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "luke-koala.cow", size: 225, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mechAndCowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x31\x6e\xc3\x30\x0c\x45\xf7\x9c\x82\xc8\xc2\x18\x10\xc5\x3d\x86\x6e\xd0\xa1\x6b\x00\xc2\xd4\xaa\x29\x63\x17\x1e\xbe\x20\x25\xa7\x05\xda\xc8\xfe\x80\xad\xc1\x8f\xe4\xd7\xa7\xe1\x58\x89\x5c\xf9\x72\x02\xb5\xfe\x3e\x44\x13\xd1\x40\x67\x7d\x55\x63\xb4\xbd\xfa\xbe\xef\x9c\xd6\xfb\x7d\x77\x50\xd5\x85\xef\xe1\x9a\xb5\x2b\xda\xb6\xad\x9d\xf2\x5c\xbb\x17\x23\x22\x34\x98\xc6\xd1\x13\x23\xca\x6a\x60\xa5\x80\x19\xf3\x8c\xb7\xfd\x54\xfb\xac\x19\x80\x71\x8a\xd7\xd1\x1e\x01\x1f\xf0\x60\x64\x3c\xb3\x1b\x80\x5c\x8a\x00\xab\x38\xbd\xa9\x6e\x53\x98\xfd\x41\x8f\xb3\x39\x7f\x7b\x3e\x17\x19\xb1\xfd\x47\x63\x2f\xb1\x3d\xca\x9b\xea\x22\xe3\xe3\x22\x2c\x7f\xe9\x98\xe0\x7c\x1f\x10\xf7\xf7\x70\xe9\xeb\x95\x07\xc4\x4f\xa0\x69\x8d\x1b\xa3\xaf\xed\x43\x13\x61\x15\xd5\x9f\x9a\xdf\x47\xa8\x85\xcb\xd5\x6b\x24\x56\xdd\xae\xd7\xf0\x2e\x97\xd0\x77\x00\x00\x00\xff\xff\x81\xca\xe1\xd7\xf4\x02\x00\x00")

func mechAndCowCowBytes() ([]byte, error) {
	return bindataRead(
		_mechAndCowCow,
		"mech-and-cow.cow",
	)
}

func mechAndCowCow() (*asset, error) {
	bytes, err := mechAndCowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mech-and-cow.cow", size: 756, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _meowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\xc1\x6a\x23\x41\x0c\x44\xef\xfd\x15\x85\xc7\xd0\x36\xb4\x5a\x1f\xb0\x5e\x76\x83\xf1\xd9\xe7\x80\xa0\x1a\x82\xb1\x7d\x48\x0c\xc9\x04\x5f\xf4\xf1\x41\x9a\xe0\x04\x06\x51\x1a\xde\x2b\xd4\xd3\x54\xa6\x09\x4f\x78\x3d\xdd\xee\xd7\xb7\x33\xe6\xeb\xf9\xf4\xfe\xaf\x4c\x53\x59\xcf\x97\x13\x5f\x6e\x77\xfc\xc5\x6e\x77\x38\xee\xff\x14\x60\x3d\x5f\x6e\x9f\xe7\xcb\xfc\x51\xf0\x6b\x41\x03\x40\x90\xec\x22\xb5\xd6\x11\x53\x55\x9a\x50\x84\x3d\x58\x00\x66\x63\x55\x31\xe0\x0e\x33\x33\xe4\x67\xa6\x50\x68\x8c\x26\xb1\x8e\xc6\x85\xd7\x3a\xb0\x30\x61\x3c\x03\xa1\xf9\x83\x16\x38\x89\x21\x2d\x69\xb5\xff\x2b\x33\x60\x04\x3e\x42\x09\xde\x3d\xe1\x10\x35\xbb\x30\xa4\x73\x48\x63\x4f\x4d\x01\x76\xe9\x18\x5d\xcc\x1a\x49\x35\x03\xd5\xa9\x34\xa3\x59\xa4\x68\xc2\x22\x76\x6e\x4b\xc6\x3a\x86\xa6\xed\x88\x7e\xb3\x34\xc9\xfc\x97\x1b\xcc\xbe\x5f\x9d\x3c\xa0\x92\x37\x38\xc4\xb1\x30\x79\x0f\x5c\x2a\xfc\x81\x02\xcb\x0d\x8a\xac\x50\x90\x2d\x6c\x6c\xd1\x2a\xe8\xf5\x87\xdc\x6c\x36\xa4\xc6\xec\x15\x91\xd9\xbb\xd4\x08\xad\x96\xc3\x71\x5f\xbe\x02\x00\x00\xff\xff\xfb\xd2\x59\x2d\xd9\x01\x00\x00")

func meowCowBytes() ([]byte, error) {
	return bindataRead(
		_meowCow,
		"meow.cow",
	)
}

func meowCow() (*asset, error) {
	bytes, err := meowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "meow.cow", size: 473, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _milkCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\x4d\x6a\xc5\x30\x0c\x84\xf7\x3a\xc5\x80\xb3\x2d\x3a\x40\xed\x6e\x42\x96\x25\x17\x10\x84\xd2\xba\x75\xe9\x4f\xa0\x49\x79\x1b\x1f\xfe\x21\x39\x79\x76\xf2\x44\x7e\x86\x6f\xc6\x1a\x3b\x47\xce\xe1\xf9\xf3\xfb\x0b\xef\x7f\xf3\x4f\x51\x2f\xbf\x6f\xe8\x53\x8c\x4b\x24\xe7\xa8\x5b\x53\x9c\x5e\xe7\x0b\x02\xbc\x1f\xc6\xfe\x91\xd0\xad\x69\xfe\xff\x48\xeb\x02\x9d\xa9\x19\x10\x8e\x6e\xae\x5e\x26\x8b\x83\x51\x87\x45\xe8\x1e\x02\x1b\xe6\x66\xb5\x6a\x2e\x3b\x72\xcd\x16\x79\xc3\x21\x88\x80\x43\x38\x73\x8c\xe5\xcd\x10\xd1\xa7\xdd\xe3\x37\x69\x8e\x19\x7c\x2a\x30\x87\xf4\x62\x16\x2b\xd7\x31\x87\xc1\xa4\x9f\xe3\x01\x05\xc4\x39\x8b\x1c\xb8\x11\xb6\xe6\x87\x76\x34\x44\x35\x96\xf7\xdf\xce\xbc\xb6\xa1\x34\x3f\xd1\x30\xf6\x74\x0d\x00\x00\xff\xff\x7d\x15\x56\x0c\xb7\x01\x00\x00")

func milkCowBytes() ([]byte, error) {
	return bindataRead(
		_milkCow,
		"milk.cow",
	)
}

func milkCow() (*asset, error) {
	bytes, err := milkCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "milk.cow", size: 439, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _moofasaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x31\x0a\xc3\x30\x0c\x45\xe7\xea\x14\x02\x65\xa8\x07\xd7\x07\x68\x3a\x85\x8c\xc1\x17\x10\x11\xa1\xb8\xf5\xe6\xc1\x2e\xa1\xa0\xc3\x17\x37\x69\xa8\xbd\x98\xff\x1f\xff\x81\x88\x80\x08\x27\xef\x1f\x4b\x5e\x2e\x40\x04\x5d\x89\x41\xee\x69\xc5\x1b\xf6\xfd\xe8\x87\x2b\xe0\xf6\xba\x12\xd3\xeb\x19\x4b\xae\x41\x44\xe4\x07\xfe\x89\xab\x99\xf9\x40\x88\x8a\xb3\xc8\x8c\xda\x54\xe7\x2e\xbc\x43\x36\xa8\x22\x8d\xe9\xcb\x44\x0c\xea\x96\x0c\xb3\x6b\x6c\xc8\x5c\x07\x4e\xad\xb5\x76\x6d\xac\xfb\x5e\xf7\x0f\xe0\x74\x94\x53\x4a\xf5\x3e\x18\xfd\x00\x9f\x00\x00\x00\xff\xff\x38\x3e\x6c\x24\xf2\x00\x00\x00")

func moofasaCowBytes() ([]byte, error) {
	return bindataRead(
		_moofasaCow,
		"moofasa.cow",
	)
}

func moofasaCow() (*asset, error) {
	bytes, err := moofasaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "moofasa.cow", size: 242, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mooseCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xca\xb1\x0a\xc3\x30\x0c\x04\xd0\xdd\x5f\x71\x83\x87\x7a\x30\xfe\x80\xa6\x53\xc8\x9c\x1f\x38\xd0\x50\x4c\x3c\xd5\x43\x1c\x42\x41\x1f\x5f\xd2\x68\xb0\x6f\x11\xa7\x77\xbe\x95\x2c\xef\x7a\xe2\x85\x69\x5a\xd6\xf9\xe9\x00\xdf\x4a\x3d\xb6\xd2\x76\x87\xae\x00\x20\x85\x14\x00\x90\x24\xe9\xd2\x81\xef\x85\x81\xe5\xe1\xf3\x37\xef\xe1\xfa\xff\x33\x98\x48\x20\xad\x04\x32\x91\x3d\xc3\xb7\xfa\xd9\x8e\x0c\xd5\x18\x63\x3c\xa1\x83\x02\x50\xb5\xe3\x96\x75\x76\xbf\x00\x00\x00\xff\xff\x9d\x3c\x02\xdc\xcb\x00\x00\x00")

func mooseCowBytes() ([]byte, error) {
	return bindataRead(
		_mooseCow,
		"moose.cow",
	)
}

func mooseCow() (*asset, error) {
	bytes, err := mooseCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "moose.cow", size: 203, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mutilatedCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8c\x51\x0a\x82\x40\x14\x45\xff\xdf\x2a\x2e\x8c\x1f\x0a\x8d\x2d\x20\x83\x42\xfc\x76\x03\x0f\x06\xd3\x97\x4a\xda\x84\x33\xa3\x08\x2e\x3e\x42\x10\x3a\x3f\x17\xee\x81\xa3\x14\x29\x85\x3b\xc6\xe0\xfb\xa1\xf2\xd2\xa0\xb6\xcb\x09\xcf\xc9\x8e\xa8\xdc\xc7\x0e\xbd\xb7\xb7\xda\x85\x2a\x7d\xc8\xf4\x92\x41\xd6\x54\x9a\x40\x4a\x51\xe4\x3b\x31\xb5\x5d\x70\x45\x96\x15\x65\x7e\x21\xec\x44\xbe\xb3\xa1\xed\xbc\x03\xc0\x6c\x76\x08\xb3\x31\xf3\xbf\x65\x06\x50\x02\x48\x08\x71\x24\xab\xb8\x64\x2f\x6c\x9b\xd6\x5a\x2f\xd8\x08\xb1\x31\xc7\x79\x0c\xf3\x99\x99\x7e\x2d\xfb\x6e\x83\x50\x51\xe6\xf4\x0d\x00\x00\xff\xff\xc9\xd7\x38\xf9\xc9\x00\x00\x00")

func mutilatedCowBytes() ([]byte, error) {
	return bindataRead(
		_mutilatedCow,
		"mutilated.cow",
	)
}

func mutilatedCow() (*asset, error) {
	bytes, err := mutilatedCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mutilated.cow", size: 201, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pokemonBulbasaurCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xb1\x8a\xdc\x40\x0c\xed\xe7\x2b\xc4\x10\x10\x01\xe9\xb9\xdf\xbd\xa4\xb9\x5c\x77\x70\x5d\x2a\xb3\x12\x84\xc0\x11\x08\x69\x02\x69\xfc\xf1\x41\x9a\xf1\x7a\x76\xed\x0d\x11\xc7\xe1\xb5\xdf\x9b\x27\x3d\x69\xf4\xe1\xf7\xfb\x77\xfb\xf6\xeb\x0f\x7d\xa2\xa7\xa7\x97\xb7\xe7\x73\xa1\xff\x8f\xe9\x21\xd8\x04\x9a\x01\x00\x66\x26\x60\x62\x81\xe2\x98\x21\xca\x77\xdc\xba\xfe\x5a\x8e\x18\xb2\xc1\x0d\x23\x37\xe2\x48\x63\x0a\xd2\x3d\x75\x0b\xdf\x53\xd0\x59\xeb\xff\x1d\xc5\x0f\x74\x96\xfc\xeb\xec\xa3\x98\x31\xaf\x2c\x33\xb3\xce\x32\x33\x18\x56\x6e\x7c\xba\xa7\xd1\xaa\x86\x4c\xdf\x55\xb5\xd6\x6b\x26\x55\xc3\x31\xf6\x00\xee\xaa\x68\x82\x58\xeb\x7f\x24\xe1\xbb\x4a\xba\x91\x3e\x38\x26\x5a\x79\x5f\xdc\xbc\x63\xd2\x6b\xb9\xb3\x3a\x1f\x0d\x3b\xf3\x15\x43\x22\xe9\x74\x34\x5c\x5c\x53\x44\x2a\x5a\xb5\x47\x4d\x23\xa2\xcf\x3d\x95\xae\xb4\x14\x02\x81\x67\x4e\x12\xdf\x94\x2a\x91\x3d\x46\x29\x87\x19\x74\x3d\xa0\xd0\xb2\x9c\xe4\xa6\xb6\x38\xf5\x9c\xd0\x29\x3a\x70\x75\x2a\x31\x1d\x08\x9e\x0a\xfd\x58\x4e\x5f\x6e\x6c\x68\x19\x33\x09\x5b\x20\xb7\x43\x43\x53\x12\x29\x34\x95\x89\x5e\x4f\xb6\xb5\x7d\x0b\x10\x55\xa6\x93\x9d\xef\x3f\x38\x18\x5c\xf2\xbc\x5a\x0f\x4c\xa9\x11\x87\x66\x7d\x2d\x3d\xf1\x7f\x06\xae\x05\x9a\x00\xfd\x62\xb8\xd8\xfa\x69\x77\x82\x89\x72\xb6\x0d\xe8\x93\x12\x76\xb7\xfb\xf4\x91\x66\xdf\xda\x1b\x43\x0e\xe4\x5a\x88\x0c\x13\x1b\xf3\x30\x67\xfd\xf9\xd0\x26\x6e\x6a\x29\x54\x6f\x53\x3d\x48\xf1\xda\xe8\x98\x7f\x6e\xbe\x39\xa6\x36\x33\x99\x34\x91\xd7\xca\xb1\x76\xe2\x7a\x19\xfa\x26\xb9\x19\x7d\xda\x8e\x0c\xde\x42\xa8\xa1\xe7\xba\x2b\x6e\xba\x79\x35\xec\x01\x49\x9e\xa3\x0f\x74\x33\xe8\x1a\xe7\x11\x3b\x5e\x02\x14\x1a\x6f\xc0\xb4\x8c\xa2\x18\xa1\x63\xc2\x52\x88\x15\x66\xe1\xac\x09\x37\x14\x7b\xab\xf1\xac\xb9\x60\x03\x06\x9e\x73\xa9\xc4\x6b\x70\x21\xaf\x17\x55\x46\x2a\xb2\xba\x5e\x94\xab\x6a\xb3\xef\xa2\xec\x60\xce\x71\x71\xc8\x05\x8e\x70\xf4\xe7\x7b\x79\x79\x7b\x2e\x7f\x03\x00\x00\xff\xff\x6b\x02\xe5\x36\x15\x06\x00\x00")

func pokemonBulbasaurCowBytes() ([]byte, error) {
	return bindataRead(
		_pokemonBulbasaurCow,
		"pokemon/bulbasaur.cow",
	)
}

func pokemonBulbasaurCow() (*asset, error) {
	bytes, err := pokemonBulbasaurCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pokemon/bulbasaur.cow", size: 1557, mode: os.FileMode(420), modTime: time.Unix(1471388536, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pokemonCharmanderCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x94\xcd\x8a\xdd\x30\x0c\x85\xf7\x79\x8a\x73\x4d\x41\x1b\x49\x5e\x16\xda\xdb\xd5\x30\xbb\x81\x79\x81\x80\x04\xa5\x30\x14\x4a\x37\x85\x6e\xfc\xf0\xc5\x4e\x1c\x5b\xc9\xdc\xa9\xc9\x22\xb6\xfc\xc9\x47\x3f\xf6\xa7\x3f\x6f\x3f\xec\xfb\xef\xbf\xf8\x86\xfb\xfd\xf9\xf5\xe9\xeb\x82\x30\x4c\x45\x52\x72\x51\x0d\x06\xa6\xf1\xef\xb3\x69\x36\x98\x45\x63\x2e\xc3\x96\x9a\x15\xeb\x61\x65\x4c\x56\x64\x14\x05\x30\xe0\x32\x3b\xbe\x99\x52\xdd\x5d\x96\xeb\xa1\x00\xea\x6c\x32\xe7\x18\x51\x71\x91\x89\x2e\x38\x0d\x17\x11\x1a\xb4\x36\x6d\xd7\x71\xe1\x7a\x1c\xa9\x8b\x56\x3b\xd4\xf4\x61\xf4\x00\x64\x10\x56\xf8\x52\x13\xa6\x70\xad\x09\x57\x33\x63\x55\x95\x5a\x81\xf9\xc8\xba\x7c\x80\x5e\x4d\x2f\x5c\xd5\x16\x86\x0b\xd4\xf7\x83\xeb\x4e\x16\x56\xda\xa2\x30\x53\x21\xd1\x91\x8e\x23\xb2\x75\x91\x2f\xba\x79\x74\x45\x3d\x5a\xc4\x94\xf5\xde\x33\x92\xb0\x27\xd2\x75\x64\x29\x37\x3d\x35\x58\x1f\xf9\x49\x29\x25\xea\x9e\x62\x84\x14\x52\x57\x00\x62\x5e\xe6\x9d\xa1\x88\x61\x92\x4f\xeb\x85\x14\x25\xef\x69\x6e\xf8\x29\xa9\xeb\x88\x7f\x76\xd4\x77\x11\x1d\x7d\xe5\x6a\xb1\x79\x36\x98\xd2\x7a\x5a\xc5\xae\xb2\x2c\xef\x38\x3c\xc9\xbe\xb0\xad\x24\x4c\x1f\xa2\x8f\x58\x28\x7d\x7c\x66\x57\x76\x21\xcb\x7f\xc4\x1e\x2b\x2f\x71\x99\x29\x82\xfe\x10\x8c\x2e\x6b\x99\x42\x8c\xef\x49\xba\x82\xad\x33\x72\x7c\x43\xce\x60\xa9\x2f\x91\x1a\x58\xfa\xb5\xd8\x0a\x3b\xe7\x74\xeb\x92\xd8\x76\xfb\xcc\x6f\x31\xc0\x9f\x03\xeb\xbd\x35\xf7\x6b\x3e\xe1\xdb\x3f\x1d\x1a\xa7\xe5\x03\xcb\x97\x18\x61\x4a\x3a\x77\xda\xa0\x3e\x3b\xed\xaf\x4c\x67\xa4\x8d\x44\x36\x08\x63\x75\xde\xae\xf2\xa5\x47\xc1\x44\x3b\xb1\x6c\x7d\xde\x36\x52\x3c\x4b\xf7\x39\xb7\x67\x56\x12\xf2\x24\xc2\xf6\x1b\x59\x60\x68\x9f\x6e\x45\x4f\x49\x84\xda\x9b\x73\xdc\xe5\xea\x91\x40\x37\x94\x5b\x28\xd4\x75\x78\x42\x82\x10\x7e\xbd\x2d\xcf\xaf\x4f\xcb\xbf\x00\x00\x00\xff\xff\x58\x85\xe0\x28\x5e\x06\x00\x00")

func pokemonCharmanderCowBytes() ([]byte, error) {
	return bindataRead(
		_pokemonCharmanderCow,
		"pokemon/charmander.cow",
	)
}

func pokemonCharmanderCow() (*asset, error) {
	bytes, err := pokemonCharmanderCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pokemon/charmander.cow", size: 1630, mode: os.FileMode(420), modTime: time.Unix(1471389893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pokemonKadabraCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4d\x8b\x14\x41\x0c\xbd\xf7\xaf\x08\x85\x10\x65\x92\x57\xf7\x75\xdd\xcb\xb2\xe7\xbd\x79\x2a\x4c\x40\x84\x65\x41\xbc\x08\x5e\xf2\xe3\x25\x55\xd5\x5f\xe3\x8e\x68\xc3\x34\xd3\xd5\x2f\x2f\x5f\x2f\xe9\x77\x3f\x5f\xbe\xd9\xd7\x1f\xbf\xe8\x13\xdd\xdf\x3f\x3d\x3f\x7e\x5c\xe8\xed\x0b\x7a\xeb\x4d\x50\xbb\x3a\x31\xb9\x81\x7d\x25\x3a\x81\x45\x99\xe2\x06\x36\xe8\x00\x16\xe6\x8c\x81\xff\x86\x1d\x60\xe9\x40\x3a\xd2\x42\x1d\xdb\xff\x0e\x35\x6b\xd6\x81\x24\x44\x5b\xb0\xfd\x24\x36\xce\x20\x2a\x65\xb3\x63\xa2\x3a\x81\x83\xec\x32\x39\xa5\xf0\x21\x92\x3c\xac\xdd\x83\x2d\x23\x43\x34\x32\x71\x0c\x90\xe4\x1b\xd8\x8a\x76\xf4\x00\xba\xdf\x65\x9a\x3b\x4f\x8a\x7e\xbf\x5f\xe3\xa2\x6e\xd4\x56\x22\x57\x81\x2d\x24\xcd\xc2\x21\xba\x1e\x57\x07\xb9\x7e\x51\x26\xb2\x91\x2a\xb4\x44\x6c\x29\x90\x2b\x16\x4f\xbf\xb5\x3a\x7c\xed\x4a\x9b\x05\x12\x8e\x0f\x09\x96\x46\x14\xe3\x2c\x88\x04\xaa\xbc\xa4\x91\xb3\xd7\xba\xd7\xdc\x13\x8b\xbb\xec\x62\x3f\x19\x51\x38\xcc\xcc\x0b\x65\xb3\x1c\xf1\x20\xbc\x76\x31\x1c\x19\xd4\x60\x30\x33\x03\x8f\x7a\xbb\x82\x1e\x7a\x7e\x62\x40\x26\x46\xb5\x92\x6f\x02\x10\x16\xe5\x48\xc3\xc2\x5a\xb2\x48\xe4\x18\xf1\x89\x96\xd2\xd6\x1a\x11\x79\xc1\x42\xef\xd3\xc3\x5d\xa7\x35\xa9\x54\x85\x1d\x95\x88\x8b\xc2\x7a\x1a\x20\x77\x55\xa0\x59\xc6\x2e\x87\x06\xb6\xd9\x63\xc6\x28\x99\x30\x55\x1e\xf5\xab\x41\xd3\x18\x06\x33\x32\x61\x94\xe0\x93\x10\xdb\x72\x14\x82\xa7\xf5\xa8\x14\xd5\x51\xa4\x36\x38\x48\x81\x3c\x88\xb2\x4b\xb3\xbb\xdd\x55\xeb\xaa\x5c\x47\xad\xfc\xa2\x9b\x9b\x24\xd8\x6c\x30\x45\xb4\x1b\x9d\x06\x84\x09\x1b\x19\x7a\xa9\x54\x71\x49\x8e\x99\xdd\xb4\xf5\x95\x2b\x0e\x09\xa4\x7d\xec\xe3\x90\x7e\x9a\x14\x92\x8c\x9e\x89\x0d\x33\xa6\xb6\xde\xa2\x7b\x3c\x8d\x73\xcc\xfe\x9a\x09\xb4\x70\x4e\x1f\xa7\xae\x30\x15\xd7\x76\x86\x1c\xd9\xde\x89\x33\x41\x8f\x60\x57\x10\x65\xd7\x3f\x27\x74\x04\x16\x7b\x1d\x22\xbd\x13\xd5\xf3\x92\xf0\x44\xd6\xa1\xca\x99\x05\x59\x74\x82\x38\x10\x44\xff\xd5\xde\x94\x44\xe3\x8f\x3a\xce\x06\x54\x57\x55\x46\xaa\xcf\x32\x19\x51\xc5\x91\x63\x8e\xe1\xa8\xde\x79\x5b\xf5\xb4\x89\x0e\x5a\xa5\x56\x89\x87\xce\xd7\xf8\x78\x7b\x1d\x03\x79\xbd\x1e\x1d\xad\x77\xad\xed\x07\x63\xb2\x63\x7d\x94\x54\xf4\x7c\xe2\xa1\x9c\xf3\xde\x34\xa8\x3a\xf4\x75\xe8\x42\x31\x34\xa0\xd8\xee\xbd\x15\xf5\xa0\x2c\xbf\xda\xbd\x60\x03\x5f\x4a\xe1\xbe\x95\x4c\xc0\x3a\x77\x89\x6b\xce\xaf\x74\x3d\x28\x1f\x8e\x0c\x27\x06\xa6\x6a\x40\xe4\x54\x78\x39\xcf\x50\xe6\x6d\xf0\xb1\x4a\x30\xf7\xe8\xbf\x5d\x19\x70\x0e\x7d\xff\xb2\xfc\x87\x1d\xb9\x20\x95\xe5\x95\x6e\x7e\x8f\xde\xbe\xee\x66\xb3\xfd\xe6\xb7\xe9\x66\xa8\x4c\xdf\x5f\x96\xa7\xe7\xc7\xe5\x77\x00\x00\x00\xff\xff\x89\xb0\x7d\x87\x84\x07\x00\x00")

func pokemonKadabraCowBytes() ([]byte, error) {
	return bindataRead(
		_pokemonKadabraCow,
		"pokemon/kadabra.cow",
	)
}

func pokemonKadabraCow() (*asset, error) {
	bytes, err := pokemonKadabraCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pokemon/kadabra.cow", size: 1924, mode: os.FileMode(420), modTime: time.Unix(1471389893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pokemonPikachuCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x8b\xdc\x30\x0c\xbd\xcf\xaf\x10\xa6\xa0\x2e\xb1\xde\x1c\x0b\xed\xf6\xb4\xec\x6d\x60\xff\x40\x40\x86\x52\x58\x42\x4b\x2f\x85\x5e\xfc\xe3\x8b\xe2\xd8\x71\x62\x67\x27\xa3\x43\x3e\xec\x27\x59\xef\x49\xd6\xa7\xbf\xef\x3f\xf5\xc7\x9f\x7f\xf4\x9d\x9e\x9f\x5f\xdf\x5e\xbe\x5d\xe8\x11\xf3\x82\x07\x1c\x14\x91\x88\x4f\x3b\x80\x89\x22\x5d\x4f\xe2\x3d\xdb\x33\x9e\x0c\x7f\x5d\x5e\x47\x68\x05\x44\x44\x9c\x13\x11\x70\x01\x2b\xcc\x24\x1b\x00\x2f\xce\xf5\x92\xb9\x50\x10\x28\xd1\x78\x37\x93\x94\x42\x10\x0c\xba\xc9\xa0\xfe\xf3\x22\xa0\x5a\xea\x20\x40\x02\xe0\x2b\xd1\x13\xf2\xfa\xe7\x20\xe2\x22\x8d\x7b\x5e\x5f\xec\x11\x29\x38\x8a\x6b\x0c\xc0\xa8\x35\xd8\xb8\x9c\x20\x89\x37\x0f\x85\xa0\x77\x20\xef\x9c\xf4\x3c\x4c\x9a\xfc\x0f\xd5\x25\xfd\x48\x71\x96\xba\x2e\x8b\x22\xb9\x20\x25\x41\xc4\x22\x6e\xad\x49\x40\xfa\x98\x56\x97\x91\x8d\xb0\x35\x4f\x39\xce\xfc\xb2\x47\xfe\xa8\xaa\xc9\x59\x25\xe3\x21\x2e\x8b\xe6\x0e\x1d\x4a\xa1\x02\xa8\x31\x4d\xcd\xb5\x6d\x97\x52\xd9\xd0\x3a\x2c\x32\x6c\x74\xba\xdb\x09\xd3\x56\xd6\x3b\xf8\x7d\xeb\xf6\xf2\x3e\xc8\xc4\x6c\x38\x06\x37\x0d\x51\xf5\x4c\x6b\xb7\x87\xd0\xb1\x87\x56\xba\xfa\xd3\xe8\x48\xb7\x27\x46\x8f\x6c\x0f\x8d\xf4\xea\x94\xa8\x45\xf3\xdc\x68\x44\xb7\x4e\xec\xce\x58\x19\x53\x89\x3a\x6c\xa7\xce\x54\x09\xa0\xa0\xca\xcd\x7a\x3b\x81\xd4\x43\x04\x69\xba\xcc\x96\x27\x41\x03\x35\x8c\x67\x11\x59\xe9\x59\x36\x32\xb9\x26\x28\xec\x32\x73\x1d\x6d\x66\xb9\x17\xc1\xe6\x5d\xd2\x56\xbd\x70\x21\xfa\x2b\xb6\x6a\xd9\x50\x62\xa2\x6a\x20\x82\x42\x6c\xe7\x6f\xbe\x3b\xc7\x9c\x5b\xc0\x1e\xc2\x65\xe2\x0e\x72\x10\xa4\x2c\x1f\x9d\x92\x0c\xfc\xd1\x7e\xb5\xdb\x6e\x6f\xd2\xdc\xed\x2a\x67\x19\x9c\x19\xfd\x7e\xbf\xbc\xbe\xbd\x5c\xfe\x07\x00\x00\xff\xff\xd0\x2f\x06\xf6\x5e\x07\x00\x00")

func pokemonPikachuCowBytes() ([]byte, error) {
	return bindataRead(
		_pokemonPikachuCow,
		"pokemon/pikachu.cow",
	)
}

func pokemonPikachuCow() (*asset, error) {
	bytes, err := pokemonPikachuCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pokemon/pikachu.cow", size: 1886, mode: os.FileMode(420), modTime: time.Unix(1471389893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pokemonSquirtleCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x55\xcb\x8a\x1c\x31\x0c\xbc\xf7\x57\x08\x13\x30\x01\xab\x7c\xdc\x43\x36\xa7\x65\x6f\x81\xfd\x01\x83\x04\x21\xb0\x0c\x09\xb9\x84\xe4\xa2\x8f\x0f\x76\xfb\xdd\x33\x89\x98\x06\xb7\x25\x97\x4a\x65\xa9\xe7\xc3\xaf\xf7\x6f\xf2\xf5\xe7\x1f\xfa\x4c\xcf\xcf\xaf\x6f\x2f\x9f\x0e\x5a\x4d\x02\xaa\x89\x2c\xbe\xc0\x7e\x7e\x75\xca\x98\xfc\xc1\xd3\xd5\xe6\x90\xbb\x01\xc5\xd2\xf1\xbf\x08\x22\x6a\x40\xf0\x69\xf3\x04\xe7\xd0\xf2\x9d\x41\x10\x78\x5b\x62\x22\x19\x91\xae\xf9\xac\x3e\x33\x5b\x4f\x64\x6d\x4f\xf1\x20\xce\x33\x24\xf8\x1e\x67\x0d\x10\x8a\xad\x04\x05\x82\x47\xdb\x0b\x64\x5d\x90\xef\x8f\xca\xf4\x0a\x22\x89\x67\xca\x46\x41\x19\x10\xcf\x05\xa3\x9b\x90\x64\x64\x76\x94\x88\x50\xeb\x57\xb8\x6c\x9e\x91\xcf\x20\x70\x33\x3f\x51\x53\x64\x66\xf9\x82\x71\x74\x76\xa4\x2e\x67\x11\xa9\xe8\x12\x66\xa5\x53\xf9\x15\xf1\x92\x10\x86\xa3\xd0\x2c\x29\x2b\xf2\x54\x4b\x3f\xb2\x3a\xd6\xab\xd9\x5d\xe7\xdb\x97\x63\x75\x99\x32\x17\xc6\xa7\xc1\x77\xcf\xad\x23\xda\xd1\x00\xe5\x94\xf2\x92\xae\xe2\xc1\xba\x92\x36\x5a\x58\x99\x43\xea\xd4\x67\x82\x4f\xb9\x3a\xeb\xe2\xdb\x32\x16\xda\xfa\x4a\xe7\xdd\xd8\x52\xdb\x44\x42\x02\x7b\xe7\xb6\xc1\x29\xe2\x36\x62\x3b\x40\x3e\x37\xca\x98\xbb\x4b\x37\x8c\xac\xf5\x6f\xe4\xdb\xeb\x20\x7e\x2a\xa6\x14\x16\xad\xc1\xf6\x43\xfb\xf4\xa7\x12\xa0\xce\x25\x77\x5a\xbf\x82\x74\x3e\x11\xfe\x32\xa6\xb6\xa3\x0c\x2d\x30\xf8\x0a\x89\x48\xb8\x81\x48\x23\x81\xeb\x7e\xee\x50\x3c\x40\x09\x5a\x5d\x34\x3a\x11\xae\xc2\x11\x59\x2f\xe6\x36\x92\x5e\x50\x22\x8d\x8b\x4f\xf3\x5e\xdd\x19\x6b\x1b\xbe\xdb\x86\xd2\xbf\x09\x85\xd0\x53\x1e\x94\x65\x08\xdc\x58\x0f\x75\xe2\x03\x90\xc2\x27\x96\x1e\x55\xbb\xeb\x6e\xba\x49\xf0\x1b\xc6\x32\x60\x31\xf7\x2c\xf3\x8c\xc1\x98\x2c\x7b\x77\x80\x59\xcb\xb6\x9c\x01\xf6\xf0\xe5\x8b\xf6\x71\xe7\x70\xbd\xb3\xa7\x3c\x9e\x21\x00\xdc\xfe\x2e\xe2\x3f\xd0\xef\x58\x26\x0d\x91\xc0\x0c\xff\xe3\xfd\x78\x7d\x7b\x39\xfe\x06\x00\x00\xff\xff\x73\xfd\x8a\x72\xb4\x06\x00\x00")

func pokemonSquirtleCowBytes() ([]byte, error) {
	return bindataRead(
		_pokemonSquirtleCow,
		"pokemon/squirtle.cow",
	)
}

func pokemonSquirtleCow() (*asset, error) {
	bytes, err := pokemonSquirtleCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pokemon/squirtle.cow", size: 1716, mode: os.FileMode(420), modTime: time.Unix(1471389893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pukingCowCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x80\x01\x95\x92\x8c\xfc\xd2\xf4\x8c\x92\x62\x84\x10\x56\x31\x05\x85\xb8\xf8\xf8\x38\xb0\x40\x3c\x04\xe8\x6b\x54\x54\x68\x72\xe9\xc7\xc4\xe8\x6b\x40\x55\xe8\x6b\xc4\xc7\x6b\x82\x94\xd4\x28\x84\xeb\xea\xea\xea\xd6\xd4\x28\xd4\xd4\xd5\x80\x05\x6a\xc0\x0a\x10\x02\x08\x80\x29\x10\x8f\x2e\xa0\x8c\x2a\x10\xaf\xad\xac\x1d\xcf\xe5\xea\xef\xcc\x05\x08\x00\x00\xff\xff\xf3\xc5\xd5\x85\xd8\x00\x00\x00")

func pukingCowCowBytes() ([]byte, error) {
	return bindataRead(
		_pukingCowCow,
		"puking-cow.cow",
	)
}

func pukingCowCow() (*asset, error) {
	bytes, err := pukingCowCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "puking-cow.cow", size: 216, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _renCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\xb1\x0a\xc2\x40\x10\x44\xfb\xfd\x8a\x81\x4b\x61\xaa\xfd\x00\x63\x15\x52\x07\xac\x07\xa6\x90\x60\x2a\xaf\x30\x62\xb3\xf8\xed\x72\x1b\x05\xb1\x9b\x37\x33\x37\xb7\xa5\x58\x29\x38\x2f\x37\x58\x29\xd6\x6d\xeb\xa2\x4b\x7d\xe2\x84\x61\x98\xe6\xf1\x68\x00\xba\x6d\xad\x8f\xeb\xba\xdd\x1b\xfc\x91\x24\x01\x4d\x7a\x81\x8b\x94\x01\x01\x84\x57\xb2\x92\x3b\x91\xa4\x5c\x6e\x70\x84\x90\x9e\xb5\x56\x90\xc2\x2b\x3e\x10\x20\xfd\x9b\x64\x0f\xd6\x2c\xcf\x07\xf9\x4d\xc4\xaf\x56\x9b\xde\x81\x54\x00\x35\x12\x9c\x94\xe4\x99\x78\x8e\x85\x94\x57\xe2\x20\xa9\x57\x6f\xd3\x3c\xda\x3b\x00\x00\xff\xff\x38\xc8\x37\xa3\xfc\x00\x00\x00")

func renCowBytes() ([]byte, error) {
	return bindataRead(
		_renCow,
		"ren.cow",
	)
}

func renCow() (*asset, error) {
	bytes, err := renCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ren.cow", size: 252, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _satanicCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\xcc\x31\xcb\x83\x30\x10\xc6\xf1\xfd\x3e\xc5\x1f\xce\xc1\xf7\xa5\x6d\x36\x97\xda\x49\x9c\x1d\xba\x06\x44\x82\xd4\x52\x48\xa0\x46\x5c\x82\x9f\xbd\xd8\x94\xf6\x19\x0e\x7e\xcf\x1d\xa7\x2a\xaa\x5c\x87\x38\xf8\xbb\xc3\x85\xf5\xc0\x1c\x96\xa7\x1b\x59\xfc\xc3\x87\xd5\x9f\x44\x55\x8a\x38\x8d\xbd\x0b\x2b\x17\xea\xba\xed\x9a\xb3\xb0\xa7\x88\x53\x58\x6e\x53\x9c\x33\x7f\x86\xb2\xef\xff\xe0\xd3\x03\xa5\xb5\x26\x17\xe6\x98\x63\xad\xd9\x17\x82\x21\x51\x55\x15\x29\xbd\xfd\x0f\x29\xed\x07\xd9\xf9\xc9\xb6\xf1\x9d\x20\x6d\xd7\xc8\x2b\x00\x00\xff\xff\x57\x68\xfe\xe1\xba\x00\x00\x00")

func satanicCowBytes() ([]byte, error) {
	return bindataRead(
		_satanicCow,
		"satanic.cow",
	)
}

func satanicCow() (*asset, error) {
	bytes, err := satanicCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "satanic.cow", size: 186, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheepCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xe6\x52\x56\x56\x08\xc9\x48\x55\xc8\xcb\xcf\xd3\x4d\xcb\x49\xcc\xcd\xcc\x4b\x57\x28\xce\x48\x4d\x2d\xd0\xe3\x52\x56\xe6\x52\x29\xc9\x48\x8d\x4f\xce\x2f\x57\xb0\x55\xb0\xb1\x71\xf5\x77\xb6\xe6\x52\x50\x50\x29\xc9\xc8\x2f\x4d\xcf\x28\x29\xe6\x52\x40\xe3\x80\x40\x7c\x3c\x98\x82\x72\x43\x55\x52\x2b\x53\x8b\x43\x63\x62\xf4\xd4\x63\x1c\x10\x30\x41\x0f\x2a\x1f\x13\x13\x1f\xaf\xaf\x81\x2c\x05\x83\x9a\x30\x03\x41\x00\x43\x05\x8a\x6c\x42\x64\x64\x5d\x5d\x5d\x5d\x64\xa4\x3a\xb2\xa8\x42\x4d\x0d\x84\xe4\x72\xf5\x77\xe6\x02\x04\x00\x00\xff\xff\xe0\xb1\xdb\x0f\xe9\x00\x00\x00")

func sheepCowBytes() ([]byte, error) {
	return bindataRead(
		_sheepCow,
		"sheep.cow",
	)
}

func sheepCow() (*asset, error) {
	bytes, err := sheepCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheep.cow", size: 233, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _skeletonCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd1\x41\x6b\xc2\x30\x18\xc6\xf1\x7b\x3e\xc5\xc3\x52\x88\x3a\x31\x1f\x60\x0e\x06\xe2\xe1\x3d\x79\xd8\x6e\x2b\x44\xdb\xbd\x5b\x87\xc5\x57\xda\x84\x12\xd6\xf9\xd9\x87\x73\x53\x2b\xf9\x9f\x9e\xc0\x0f\x72\x78\xb5\x56\x5a\xe3\xa5\xfa\x6c\x61\x9e\x4b\xe9\x6a\xf6\xb2\x33\x28\x1a\x09\x1f\x95\x87\x17\x44\x09\x28\x22\x64\xc7\x90\x77\x1c\xf5\xd7\x66\xbf\xe7\x7a\xba\x0d\x05\x4f\x1b\xe9\xf8\xfb\xa9\x6c\xc3\x66\x56\x70\xb3\xe5\x9a\xe3\x8c\xdf\x82\xd2\x5a\x65\xbe\x62\x57\x4a\x87\x47\xcc\xe7\xcb\xd5\xe2\x41\xe1\x5c\xe6\xab\xdf\x0f\xda\xd3\x73\xe4\xdc\xf8\xb4\xae\xcc\x0d\xb2\x19\x47\x6e\xfb\x21\x19\x98\x91\xbb\x73\xe3\xc9\xfd\x7f\x93\x01\xfc\xcb\x5a\xd2\xf9\x4d\x94\xe7\x29\x4a\xaf\xd4\x53\x7f\x8c\x40\x58\x27\xc9\x9a\x8c\xb5\xd6\x18\x10\x28\x09\x40\x97\x95\x02\x07\x1c\x2e\x2b\x05\x80\xf3\x59\xd4\x72\xb5\x50\x3f\x01\x00\x00\xff\xff\x47\x5b\x02\x1c\xb1\x01\x00\x00")

func skeletonCowBytes() ([]byte, error) {
	return bindataRead(
		_skeletonCow,
		"skeleton.cow",
	)
}

func skeletonCow() (*asset, error) {
	bytes, err := skeletonCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "skeleton.cow", size: 433, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _smallCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xc9\x41\xca\x83\x30\x10\xc5\xf1\xfd\x9c\xe2\xc1\x64\x61\x3e\xa2\x17\xf8\xec\xa2\x88\x6b\x2f\x20\x0c\x22\x62\x4a\x6d\x02\xcd\x84\x6c\x72\xf8\x52\x4a\x8b\x6f\xf3\xe0\xff\x63\x26\x66\x5c\x91\x1e\xcb\x71\x60\x8d\xc5\x61\x79\xea\x2d\x29\x72\xb8\x87\x58\x02\x31\x93\x51\xbf\xc9\x1a\x0b\x2e\xe8\xfb\x71\x1a\xfe\x09\x9f\x19\xf5\x31\xef\x5e\x13\x00\x27\xe2\xbe\xfd\x0c\x4d\xd7\x59\x11\x91\x9f\x01\x68\x44\xec\xfb\xed\x3c\x9f\x33\x8c\xc6\xb0\xe7\xad\xd6\xb6\xad\x15\x7f\x34\x4e\x03\xbd\x02\x00\x00\xff\xff\x5e\xb7\x59\x30\xa2\x00\x00\x00")

func smallCowBytes() ([]byte, error) {
	return bindataRead(
		_smallCow,
		"small.cow",
	)
}

func smallCow() (*asset, error) {
	bytes, err := smallCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "small.cow", size: 162, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sodomizedCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xce\x51\x6a\xc3\x30\x0c\x06\xe0\x77\x9f\xe2\x07\xe7\x21\x86\x79\x39\xc0\xba\xc2\x28\x7d\xee\x05\x44\x85\x29\x5e\x52\xb6\xc9\xc3\x91\x09\x03\x1f\x7e\xb4\x78\x63\x09\xec\x7f\x31\x96\x3e\x09\x59\x6b\xac\xc5\x0b\x2e\x69\xc1\x67\xcc\xaf\x29\x7f\x5c\x65\x44\x10\x14\x91\xa0\x25\x87\x77\x84\x8b\x3e\x20\x64\xbd\xce\x8a\x22\x6f\x92\x16\x79\x34\xd6\x9a\x4e\xa7\xc8\xb7\xc1\x67\xec\x76\xc7\xd3\xe1\xc9\xe0\x9e\x4e\xa7\x54\xc6\x49\x67\x6c\xc2\x0d\xfc\x27\x7a\x76\x3f\x62\x45\xce\xcc\xe7\x56\x1e\x40\xf4\x6b\xfe\xa2\xbe\x8b\x5f\x71\x76\x44\x7c\xcb\xc0\x44\x2b\x79\xdf\xce\x8e\xa8\x7d\x1c\x86\x55\x13\x9d\x26\x19\x4b\x44\xad\xde\x7b\xbf\xa0\xef\xcd\xf6\xfc\x5a\xdb\xb3\xdf\xc3\x1c\x4f\x07\xf3\x1d\x00\x00\xff\xff\xa1\xb6\xc1\x21\x3d\x01\x00\x00")

func sodomizedCowBytes() ([]byte, error) {
	return bindataRead(
		_sodomizedCow,
		"sodomized.cow",
	)
}

func sodomizedCow() (*asset, error) {
	bytes, err := sodomizedCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sodomized.cow", size: 317, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squirrelCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8e\x41\x0a\xc2\x30\x14\x44\xf7\x39\xc5\x2c\x0a\xb1\x60\x7e\x0e\x60\x5d\x95\xae\x7b\x81\xc2\x0f\x48\x30\xbb\x2c\x1a\x11\x31\xe6\xec\xf2\xad\x09\x28\x2e\x9c\x45\xc8\x9b\xf9\x0c\xd3\xa5\xe0\xf9\x14\xaf\x38\x62\x18\xa6\x79\x3c\x28\xa0\x4b\x21\x5e\xce\x21\xad\x0a\xa2\x2f\xfc\x10\x83\xab\x9b\xb1\x30\xdb\x0c\x50\x11\x2c\x54\x03\xdb\xf9\x9b\x5f\xe1\xc8\x6e\x4c\xfa\x9d\xdc\x23\xf3\x1e\xc0\xf2\x82\xd6\x6e\x41\x00\xa1\x97\xff\xd2\x5c\x67\x1c\xb4\xd1\xdb\xf1\xa3\xda\xb4\x93\x11\xf2\xf4\xdc\x7a\xb5\x31\x86\x0a\xcb\xb8\xfc\x63\xf3\x1f\x52\xd3\x3c\xaa\x67\x00\x00\x00\xff\xff\x24\x0f\x2f\xcb\x1b\x01\x00\x00")

func squirrelCowBytes() ([]byte, error) {
	return bindataRead(
		_squirrelCow,
		"squirrel.cow",
	)
}

func squirrelCow() (*asset, error) {
	bytes, err := squirrelCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "squirrel.cow", size: 283, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stegosaurusCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xc1\x6e\xc2\x30\x0c\x86\xef\x79\x8a\x5f\xcb\x24\x76\xc0\xce\x03\x8c\x31\x4d\x88\x33\x2f\x10\x2d\x45\x13\xa2\x3b\x75\x5a\x83\xb8\x14\x3f\xfb\xe4\xb4\x41\x6d\x69\xab\x05\x9a\xc4\x4e\x3e\xfb\xb7\x5b\x6b\x8d\xb5\xf8\x40\x1d\x4f\xe7\xaa\x3e\x5e\x7e\x71\xfd\x8e\x25\x8e\x88\xd5\x0f\xca\x63\x7c\x37\xd6\x9a\xe7\x58\x9e\xc2\x57\x75\xc5\x1b\x36\x9b\xfd\x61\xf7\xaa\x9e\xea\x72\x2e\x63\x8d\xa5\xc1\x79\x35\xf8\x0f\xe0\x50\x28\xc1\x2b\x3c\xc1\x60\x09\x61\x22\x62\x60\xa3\xfb\x6d\x5e\x5a\xaf\xc1\x12\xd9\xe8\xe4\x7d\x7a\x08\x02\x01\xc1\x69\x66\x3d\x33\xf7\x6b\x41\x47\x2f\x1d\x93\x0c\xc2\x08\xa9\xcb\x0c\xa2\xa6\xd9\x7b\x11\xf1\x9e\x57\x53\xf5\x15\xec\x44\xc4\x65\x8c\xf2\x48\x5c\x08\x6e\xae\x2f\xe9\xb0\xa3\x34\xf2\x21\x17\x81\x4e\xf9\xa0\x87\x99\x41\xdb\x45\x00\x2f\xa9\x9c\x75\x2b\x21\x3c\x68\x6b\xee\xbb\x9b\x72\x7d\x8d\x05\xb5\x8d\x1e\x47\xbf\x0d\x41\x37\x56\x99\x69\x1e\x66\x70\x93\x66\xc1\x58\x8b\x34\x66\x5c\xb6\x10\x87\xd0\xdd\x75\x21\xbd\xae\xcf\x6c\x12\x42\x86\x99\xb4\xa0\x07\xba\x97\xc9\x4d\x99\xd2\x89\x53\x91\x01\xe9\x3f\x13\x23\x75\xaf\x99\x31\xd3\x17\xa4\x11\xba\xdf\xd6\xec\x0f\x3b\xf3\x17\x00\x00\xff\xff\x70\x2c\x5e\x65\x56\x03\x00\x00")

func stegosaurusCowBytes() ([]byte, error) {
	return bindataRead(
		_stegosaurusCow,
		"stegosaurus.cow",
	)
}

func stegosaurusCow() (*asset, error) {
	bytes, err := stegosaurusCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stegosaurus.cow", size: 854, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stimpyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8e\xb1\xce\xc2\x30\x0c\x84\xf7\x3c\xc5\xfd\x4a\x87\xfe\x0b\x7e\x00\xca\x54\x75\xce\xc0\x6a\xe9\x06\x84\x28\x03\x2a\x12\x41\x08\xc9\x0f\x8f\x9c\x26\x1d\x58\xb0\xe4\x24\xfe\xec\xf8\x2e\xc6\x10\x23\x8e\xf9\x7a\xbb\xbf\xff\x42\x8c\xa1\xcb\xf3\x99\xa7\xe5\x85\x03\x86\x61\x4a\xe3\x3e\x00\x5d\x9e\x97\xe7\x65\xce\x0f\x78\xec\xfc\x60\xbd\x03\xbe\xda\xa6\x4a\x13\x52\xac\xb5\x3d\x04\x02\x55\x4f\x94\xac\x5c\x48\x4b\x66\xc9\x48\xc7\x2b\x35\xf1\x82\xe2\x09\xaa\xc2\xda\xbc\xc1\xd0\x93\xe4\xbf\x3f\x37\xac\xea\xb3\x2c\x3f\x28\x80\x48\x6d\xf4\x5e\xd5\x30\xab\x9a\x86\x1f\xcc\xfd\x6d\xc6\x4b\xb1\x7a\x15\xdf\xd6\x38\x8a\xa2\x8b\x4a\x43\xa4\x7b\x22\xb7\xad\xc5\xea\xea\x37\x4c\x69\x0c\x9f\x00\x00\x00\xff\xff\x5f\xf1\xcf\x1c\x6c\x01\x00\x00")

func stimpyCowBytes() ([]byte, error) {
	return bindataRead(
		_stimpyCow,
		"stimpy.cow",
	)
}

func stimpyCow() (*asset, error) {
	bytes, err := stimpyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stimpy.cow", size: 364, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _supermilkerCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\xcd\x4a\xc3\x40\x14\x85\xf7\xf7\x29\x0e\x4c\x16\x09\x98\xfa\x00\x56\x50\x6a\x77\x4a\x17\x45\xdc\x0c\x1d\x92\xf6\x9a\x84\x26\x9d\x30\x3f\x48\xe0\x3e\xbc\xc4\x19\x05\xcf\xee\xfb\xce\x61\x86\xab\x14\x29\x85\x67\x9c\xed\x17\x5a\x1e\x6e\x1d\xa6\x61\xbc\xf2\xe5\x0e\xb3\xb3\x6d\xd3\x8e\x0b\x3e\x9d\x9d\xf0\xda\x38\x8f\xe3\x34\x84\x1e\xe5\xd8\x38\xff\x74\xf6\xb1\xd9\xb4\xec\xae\x3c\xf2\xb2\xe1\x4b\xac\x48\x29\x2a\x42\xcf\x66\x7d\xeb\x11\xdb\xed\xfe\xb0\x7b\x20\xa0\x08\xbd\x8d\x5d\x1f\x3c\x80\x93\x31\x27\xc2\x3f\x57\x16\xbc\xb0\xaf\xb4\x36\x29\xc8\xc9\x68\x28\x61\x69\x4c\xa5\x75\xee\x2a\xad\xef\x13\xc8\x31\xce\xec\x20\x79\x85\x22\xd8\x5b\x17\x19\x22\x75\x5d\xd7\x1f\x90\xec\xe5\x6d\x3d\xcb\xfd\xed\x56\xf5\xd3\xbd\xbf\xfc\x46\xd2\x7f\x42\xfb\xc3\x8e\xbe\x03\x00\x00\xff\xff\x19\xb5\x0d\xcc\x18\x01\x00\x00")

func supermilkerCowBytes() ([]byte, error) {
	return bindataRead(
		_supermilkerCow,
		"supermilker.cow",
	)
}

func supermilkerCow() (*asset, error) {
	bytes, err := supermilkerCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "supermilker.cow", size: 280, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _surgeryCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x51\x4b\xc3\x30\x10\xc7\xdf\xf3\x29\x0e\x32\x58\x23\x2e\xf9\x00\x6e\xe0\x28\x7d\xf0\xc5\x88\x08\x3e\xec\xf0\x1c\x52\xec\x10\x1a\x59\x33\x86\x90\x0f\x2f\xd7\xd6\xb5\x75\xc9\xf6\x63\x64\x24\xf7\xfb\x5f\x73\xa5\x52\x0a\x29\x61\x0d\x1f\xee\x08\xee\xbb\xdc\x6f\xfd\xce\xd5\xb7\xb0\xdd\xfb\x5d\xe3\xe1\x50\x7f\xd5\xee\x58\x0b\x29\xc5\xcc\x57\x25\xb1\xb5\x82\xe5\xb2\xb0\xf9\x9d\x80\x13\x33\x5f\xb9\xc3\x67\xe5\x9b\xe1\x08\x10\x01\x0c\x8c\xa4\x84\x65\x60\x22\x31\x19\x91\xe2\x7f\xc3\x3d\x7a\xce\x9c\x59\xf9\x53\x36\xac\xd9\xf6\x17\xb7\x08\xd1\x10\x77\x32\x91\x46\x37\x6d\x1f\x5e\xd4\x20\x88\xe9\x04\x19\x62\x77\x89\x98\x00\x88\x19\x2f\x9d\xa1\xe0\x22\x93\xab\x65\x70\xca\xa9\x7f\x83\xc6\x82\x44\xb4\x41\xa4\x16\xf3\xd6\xc1\x7b\xa3\xc0\x2d\x14\x51\x22\x17\xd8\xd9\xac\x3a\xfa\xb4\xa1\x1e\x45\x14\x7f\xaa\x00\xc4\x40\x53\x86\x18\x13\xd2\xf3\x85\xd0\x17\x43\x00\x63\xfa\x4d\x08\xe1\xbc\x7a\xaf\x87\xea\x95\x77\xf6\x27\xb4\x1f\x8b\x6e\xd7\xf1\x71\x32\x37\x42\x83\x4e\xc9\xe9\xd4\x5c\xcf\xf5\xfb\xd5\xd4\x24\x96\xdb\xd7\x85\x7d\x2a\x9e\xd7\x2f\x0f\xf6\xf1\x52\xaa\xb0\xb9\xf8\x0d\x00\x00\xff\xff\x55\xdb\xcf\xda\x7c\x03\x00\x00")

func surgeryCowBytes() ([]byte, error) {
	return bindataRead(
		_surgeryCow,
		"surgery.cow",
	)
}

func surgeryCow() (*asset, error) {
	bytes, err := surgeryCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "surgery.cow", size: 892, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _telebearsCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x8a\x1f\x9c\x43\x02\xf3\xf2\x00\xcb\x0a\x5d\xc9\xb9\xb0\xed\x28\x2a\x4c\xf1\x92\xb2\x4e\x1e\x89\x4c\x28\xf8\xe1\x47\x4b\x36\x96\x40\xbf\x8b\xc1\xfa\x3e\x84\xac\x35\xd6\x62\x8b\x63\x9c\xf0\x1d\x86\x8f\x38\x7c\x9d\xa4\x83\x17\x24\x11\xaf\x69\xf0\x67\xf8\xa3\x3e\xc0\x0f\x7a\x1a\x15\x49\x3e\x25\x4e\xf2\x68\xac\x35\x85\xf6\x81\xaf\xe1\x33\x9a\xa6\xdd\xef\x9e\x0c\x6e\x14\xda\xc7\xd4\xf5\x3a\x62\x05\xcf\xc2\x3d\xa3\xe4\x0a\x40\xe3\x1c\xde\xc3\x39\xbc\xb4\xdb\xd7\xb7\xdf\x62\x91\x1c\x98\x0f\xf3\x77\x0d\xa2\x3f\xe7\xbf\x54\x16\xe1\x12\xc6\x8a\x88\xaf\xd4\x4c\xb4\x30\x6f\xdb\xb8\x22\x02\x2e\x31\x01\x15\xea\xc5\x10\x85\x46\xe9\x52\x40\xce\xce\x39\x37\xa1\x2c\xcd\xfa\x9c\x9c\xe7\x67\xb3\x81\x69\xf7\x3b\xf3\x13\x00\x00\xff\xff\x46\x9c\x0c\x4e\x4d\x01\x00\x00")

func telebearsCowBytes() ([]byte, error) {
	return bindataRead(
		_telebearsCow,
		"telebears.cow",
	)
}

func telebearsCow() (*asset, error) {
	bytes, err := telebearsCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "telebears.cow", size: 333, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _turkeyCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x4f\x8b\x14\x31\x10\xc5\xef\xf9\x14\x25\xbd\x87\x54\xaa\x43\xdf\xdd\x56\x84\x65\xcf\x7b\xd1\x5b\xa8\x77\x90\xd5\x01\x0f\x0b\x3a\x8d\xc8\xe2\x77\x97\xca\xbf\xe9\x89\x2d\x63\x08\x49\x3a\xc9\x2f\xef\xa5\xba\x32\x4d\x6e\x9a\xe8\xe3\xf6\xfd\xdb\xf3\xaf\x37\x6e\x9a\xdc\xdd\xf9\xf4\x8c\xcf\x2f\x3f\xe9\x1d\xad\xeb\xe3\xd3\xc3\xbd\x23\xba\x3b\x9f\x5e\xb6\xaf\xa7\xf3\x0f\xba\x59\x66\x09\xaa\x41\x00\x88\x08\x1c\xfd\x1f\x3c\x07\x55\xd5\xeb\x39\x36\xf8\x26\x0d\x09\x87\xf3\x1a\x42\x91\xbf\x71\x84\x34\x55\x10\x44\x82\x64\xdb\xf3\x60\x62\x2f\x97\x6f\x67\x43\xdf\xef\x4b\x3b\xe7\x29\x95\xd5\x03\xf8\xb5\x4d\x57\x76\x2e\x2d\x24\x46\x89\xb1\x6a\x2a\xd7\x3e\x25\x77\x0d\xfb\xf4\x21\xaf\xfd\xa6\x2f\x15\x9e\x25\x2a\x01\x01\x01\x44\xaa\x29\xa1\x80\x47\xf2\xaf\x6f\xef\xe3\x92\x6d\x43\x42\x14\x0b\xb7\x4a\x90\xb0\xe6\x7b\x83\x51\x9d\xd5\x86\x68\xd9\xd1\x9e\x96\xea\xd9\xb7\xa9\x19\x40\x89\xb3\xd8\x2f\x30\x68\xa5\xd6\x58\x18\xf6\xe2\x9f\x08\x0b\xf5\xb3\x43\x8c\xab\x0d\x35\xa5\x68\x45\x04\xe0\x41\x7d\x88\x9d\xef\x91\x83\x57\x56\x65\xce\x1f\x9c\x52\xbe\x08\xb3\x06\xc9\x0a\x0b\x1d\xb9\xa7\xba\xe4\xc1\x0c\x83\x2b\xce\x8d\x56\x65\x54\x8b\xa2\xea\x06\x74\x2e\x81\xb3\x8d\x4d\xb8\xb1\x85\x6e\xa6\xb1\x77\x6d\x8f\xa0\x27\xa7\x29\x6b\x01\x3b\xda\xe4\x01\x20\xec\x44\xa9\xff\xc1\xf6\x09\x56\x06\xef\x44\x3b\x7d\x15\x26\x8f\x2b\xce\x12\x02\xaa\x23\x32\x52\x75\x23\xfe\x81\x5e\x34\x39\xa5\x21\x29\xeb\x66\x2b\x29\x6d\xdb\xb6\x5c\x7a\x1b\x1d\xd6\x83\x03\x2c\x72\x96\x02\xef\xd1\xbb\xea\xe1\xaf\x3a\xbe\xc7\xee\x60\x59\xcc\x1d\x2e\x83\xb6\xe4\x6f\xd2\x99\xa7\x5c\x95\xd4\x3d\x3e\x3d\xb8\x3f\x01\x00\x00\xff\xff\xbf\xf8\xbe\x0b\x16\x05\x00\x00")

func turkeyCowBytes() ([]byte, error) {
	return bindataRead(
		_turkeyCow,
		"turkey.cow",
	)
}

func turkeyCow() (*asset, error) {
	bytes, err := turkeyCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "turkey.cow", size: 1302, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _turtleCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4d\x6a\xc3\x30\x10\x85\xf7\x3a\xc5\x03\x65\x91\x2c\x64\x1d\xa0\xf1\xa2\x84\xac\x7d\x01\x91\x59\x94\x50\x17\x5a\x0c\xb1\x4c\x29\x0c\x3a\x7b\x91\x6c\xc5\x92\x2d\xe3\xcc\x42\x3f\xc3\x9b\x8f\x37\xc3\x48\x29\xa4\xc4\x3b\x7e\xfe\x7a\x7b\x7f\x7c\x75\x43\x0f\x3b\x3c\xec\xf7\xbd\xaa\x2a\x21\xa5\x38\xd8\xf6\x4e\x1f\xdd\x2f\x6a\x9c\xcf\xd7\xe6\xf2\x26\x00\xe0\x60\xdb\x6e\xf8\x6c\x6d\x8f\xdd\x20\x22\x35\x06\x11\x85\xe2\x17\xab\x49\x39\x97\x25\x9c\x53\x13\xe0\x05\x02\x29\x57\x4a\xeb\x99\x11\x33\x37\x63\x88\xfc\x99\x88\x80\xe4\x9b\x68\xfd\x61\x4c\x0a\xd0\x0c\x34\xcc\x68\x38\x13\x79\x19\xe5\xa1\xa3\x20\x03\x30\x98\x88\x98\x89\x38\x2b\x7f\xde\x98\xcb\xd2\x77\x86\x58\x68\xf4\x06\x61\x97\x72\x9c\xac\x9e\xa0\x17\x9e\xd7\x98\x67\x5f\x5b\x66\x74\x62\xa0\x38\xcd\xa5\xc5\x7c\xb0\x49\x89\x31\x37\x63\xb2\xff\x0e\x69\xd6\x68\x51\xca\x06\xa3\x5c\x6e\x27\xed\x9b\x14\x45\xbc\x0e\x5b\xb2\xc0\x25\x40\xe6\x69\xc9\x95\x5f\x53\xa8\x34\xbc\x4a\x29\xbf\x55\x70\x63\x01\x33\x88\x56\x30\xc0\x05\x3d\x73\x5d\xd7\xb5\x1e\x17\x38\xbc\xf3\x88\xce\x59\x3b\x1f\x6b\x0c\x8e\x74\x0c\x4d\x54\xba\x38\x9c\xd8\x73\x74\x6f\x4c\x55\x80\xa4\xac\xed\x4d\x88\xb3\x3b\xd1\x49\x5c\x9b\x8b\xf8\x0f\x00\x00\xff\xff\x07\x77\x42\x2a\x51\x04\x00\x00")

func turtleCowBytes() ([]byte, error) {
	return bindataRead(
		_turtleCow,
		"turtle.cow",
	)
}

func turtleCow() (*asset, error) {
	bytes, err := turtleCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "turtle.cow", size: 1105, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tuxCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xca\xb1\x8a\x83\x40\x10\xc6\xf1\x7e\x9e\xe2\x83\x15\x4e\x0b\x77\xfb\x3b\x85\x03\xb1\xb6\xb9\xe2\x8a\x81\x49\x22\x46\x05\xc9\x88\xbb\x92\x04\x7c\xf8\x60\x4c\x2c\x32\xcd\xf0\xfb\xf8\x1b\x43\xc6\xe0\x6f\xfe\x5f\x5f\x5c\x27\x18\x4f\x3a\xdd\xfd\xef\x98\x7a\x3d\x07\xeb\xfb\xa1\xf1\xfd\xd1\x0e\xfd\x65\xbe\x59\x9d\x5a\x3b\x0e\x20\x63\x28\x0a\x5d\x23\xb5\x5e\x91\x23\xcb\xca\xaa\xf8\x21\x00\x51\xe8\x74\x6e\xbb\xe0\x57\x7c\x68\x3d\x9b\xa6\xf6\x8d\x45\x45\xb1\xec\xfa\x16\xb7\xcb\x39\x00\xcc\x60\xde\x86\x78\xd9\x1a\x24\x4f\xbb\x2f\x66\x01\x20\xee\xf0\x2a\x98\x45\x24\xc9\x63\x11\x71\x44\x65\x55\xd0\x23\x00\x00\xff\xff\xb3\x84\x4d\xf4\xd7\x00\x00\x00")

func tuxCowBytes() ([]byte, error) {
	return bindataRead(
		_tuxCow,
		"tux.cow",
	)
}

func tuxCow() (*asset, error) {
	bytes, err := tuxCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tux.cow", size: 215, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaderKoalaCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\xce\xc1\xca\x83\x30\x0c\x07\xf0\x7b\x9e\xe2\x0f\xf5\xd0\x7e\x50\xfb\x00\x9f\x32\x86\xf3\xb4\x83\xb7\x81\xa7\x52\x9c\xac\x32\x31\xe0\x3a\x76\x11\x9f\x7d\xb4\xdd\x58\x0e\x49\x7e\x04\x92\x08\x41\x42\xe0\xb8\x70\xf0\xe3\x8a\xc1\x2d\xbc\x4c\x83\x9b\x71\x67\x37\xbb\x03\x09\x41\x45\xf0\xa3\x1d\xf8\x85\x1a\x55\xd5\x76\xcd\x3f\x01\x28\x82\xe7\xe7\xcd\x87\x47\xc4\x4f\xf8\x44\x49\xb9\x68\xad\x4b\xc0\x98\xc4\x7e\x63\xf0\xd6\x1b\x83\x48\x63\xe5\x54\x4f\xea\x9c\xb5\x4b\xb5\xff\xc5\x84\x44\x48\xab\xb4\xb4\x0a\x00\xe5\x55\x27\xb7\x06\x9f\x67\xb8\xb8\xeb\xb8\xc6\x26\x33\xbd\xfa\xbd\x4c\x6d\xd7\xd0\x3b\x00\x00\xff\xff\x34\x92\xea\x40\xd5\x00\x00\x00")

func vaderKoalaCowBytes() ([]byte, error) {
	return bindataRead(
		_vaderKoalaCow,
		"vader-koala.cow",
	)
}

func vaderKoalaCow() (*asset, error) {
	bytes, err := vaderKoalaCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vader-koala.cow", size: 213, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaderCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd0\xcf\xea\x83\x30\x0c\xc0\xf1\x7b\x9f\x22\x12\x2f\x3f\xd0\xfa\x00\x3f\x85\x81\x78\xf6\x36\x18\x84\x89\xd3\xcc\xc2\xfe\x04\x6a\x45\x06\x7d\xf8\xa1\xcc\xcd\xc9\xbe\x97\x36\x7c\x72\x0a\xa2\x42\x84\x5c\x46\x67\x60\x5f\xb7\x6c\x23\x38\x5b\xb9\x41\xc7\x62\xdb\xfa\xbe\x6b\xfa\xa1\xd6\x27\xb6\x17\xbe\xf2\x43\x73\x3b\x28\x44\x15\x3a\xc3\x55\x23\x23\x64\x90\xa6\x45\x99\xff\x2b\x78\x15\x3a\x23\x43\x67\x5c\x3f\x0d\x51\x7c\x8c\xf5\x9b\xbe\x2c\x90\x83\x04\x1f\x5a\x59\xa2\x93\x8c\x48\x13\x55\x73\xab\x9d\x39\xc4\xe5\xf7\x47\x94\x10\x6d\x1d\xbc\x8f\xa7\x46\xef\x7f\xd0\xf2\xaa\xad\xad\x0e\xa0\x8a\x32\x57\xcf\x00\x00\x00\xff\xff\x7c\xbd\xcb\xf8\x17\x01\x00\x00")

func vaderCowBytes() ([]byte, error) {
	return bindataRead(
		_vaderCow,
		"vader.cow",
	)
}

func vaderCow() (*asset, error) {
	bytes, err := vaderCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vader.cow", size: 279, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCow = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xcc\x4d\x6a\xc3\x30\x10\x86\xe1\xbd\x4e\xf1\x81\xb4\x88\xa1\x49\x0f\xd0\x14\x5a\x42\xd6\x59\x6a\x33\x44\xd8\xd6\xd4\x12\xb5\x2d\xd0\x4f\x8d\x41\x87\x2f\xa5\xa6\x8d\xdf\xcd\x30\x3c\xc3\x48\x29\xa4\xc4\x3b\xfa\xb0\x60\x69\xed\x17\xc7\xec\x93\x9f\x07\x64\xc7\xd0\x21\x8e\x16\xda\x5b\x86\xe6\xee\x09\x1f\x31\x4c\x18\xfd\xf4\xd6\xa7\xd2\x9e\x3a\x8e\x9f\x3c\xf2\x7a\x62\x5b\x84\x94\x42\x65\xc7\xe6\xe7\xcf\x2b\xce\xe7\xeb\xed\xf2\x22\xb0\xa5\xb2\x0b\x65\x70\x39\x01\xb8\x1b\x73\xff\x83\x47\x39\x28\x5e\x39\x35\x44\xe6\xb7\xff\x23\x00\x07\x63\x1a\xa2\x6d\x69\x88\x9e\x89\x76\x0e\x95\xc3\x3c\x14\x46\xad\xc7\xa3\xd6\x1a\x75\xcf\x00\x6a\xdd\x86\xb8\xde\x2e\xe2\x3b\x00\x00\xff\xff\xad\x19\xeb\x66\xf8\x00\x00\x00")

func wwwCowBytes() ([]byte, error) {
	return bindataRead(
		_wwwCow,
		"www.cow",
	)
}

func wwwCow() (*asset, error) {
	bytes, err := wwwCowBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www.cow", size: 248, mode: os.FileMode(420), modTime: time.Unix(1471371442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"beavis.zen.cow": beavisZenCow,
	"bong.cow": bongCow,
	"bud-frogs.cow": budFrogsCow,
	"bunny.cow": bunnyCow,
	"cheese.cow": cheeseCow,
	"cower.cow": cowerCow,
	"daemon.cow": daemonCow,
	"default.cow": defaultCow,
	"dragon-and-cow.cow": dragonAndCowCow,
	"dragon.cow": dragonCow,
	"elephant-in-snake.cow": elephantInSnakeCow,
	"elephant.cow": elephantCow,
	"eyes.cow": eyesCow,
	"flaming-sheep.cow": flamingSheepCow,
	"ghostbusters.cow": ghostbustersCow,
	"head-in.cow": headInCow,
	"hellokitty.cow": hellokittyCow,
	"kiss.cow": kissCow,
	"kitty.cow": kittyCow,
	"koala.cow": koalaCow,
	"kosh.cow": koshCow,
	"luke-koala.cow": lukeKoalaCow,
	"mech-and-cow.cow": mechAndCowCow,
	"meow.cow": meowCow,
	"milk.cow": milkCow,
	"moofasa.cow": moofasaCow,
	"moose.cow": mooseCow,
	"mutilated.cow": mutilatedCow,
	"pokemon/bulbasaur.cow": pokemonBulbasaurCow,
	"pokemon/charmander.cow": pokemonCharmanderCow,
	"pokemon/kadabra.cow": pokemonKadabraCow,
	"pokemon/pikachu.cow": pokemonPikachuCow,
	"pokemon/squirtle.cow": pokemonSquirtleCow,
	"puking-cow.cow": pukingCowCow,
	"ren.cow": renCow,
	"satanic.cow": satanicCow,
	"sheep.cow": sheepCow,
	"skeleton.cow": skeletonCow,
	"small.cow": smallCow,
	"sodomized.cow": sodomizedCow,
	"squirrel.cow": squirrelCow,
	"stegosaurus.cow": stegosaurusCow,
	"stimpy.cow": stimpyCow,
	"supermilker.cow": supermilkerCow,
	"surgery.cow": surgeryCow,
	"telebears.cow": telebearsCow,
	"turkey.cow": turkeyCow,
	"turtle.cow": turtleCow,
	"tux.cow": tuxCow,
	"vader-koala.cow": vaderKoalaCow,
	"vader.cow": vaderCow,
	"www.cow": wwwCow,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"beavis.zen.cow": &bintree{beavisZenCow, map[string]*bintree{}},
	"bong.cow": &bintree{bongCow, map[string]*bintree{}},
	"bud-frogs.cow": &bintree{budFrogsCow, map[string]*bintree{}},
	"bunny.cow": &bintree{bunnyCow, map[string]*bintree{}},
	"cheese.cow": &bintree{cheeseCow, map[string]*bintree{}},
	"cower.cow": &bintree{cowerCow, map[string]*bintree{}},
	"daemon.cow": &bintree{daemonCow, map[string]*bintree{}},
	"default.cow": &bintree{defaultCow, map[string]*bintree{}},
	"dragon-and-cow.cow": &bintree{dragonAndCowCow, map[string]*bintree{}},
	"dragon.cow": &bintree{dragonCow, map[string]*bintree{}},
	"elephant-in-snake.cow": &bintree{elephantInSnakeCow, map[string]*bintree{}},
	"elephant.cow": &bintree{elephantCow, map[string]*bintree{}},
	"eyes.cow": &bintree{eyesCow, map[string]*bintree{}},
	"flaming-sheep.cow": &bintree{flamingSheepCow, map[string]*bintree{}},
	"ghostbusters.cow": &bintree{ghostbustersCow, map[string]*bintree{}},
	"head-in.cow": &bintree{headInCow, map[string]*bintree{}},
	"hellokitty.cow": &bintree{hellokittyCow, map[string]*bintree{}},
	"kiss.cow": &bintree{kissCow, map[string]*bintree{}},
	"kitty.cow": &bintree{kittyCow, map[string]*bintree{}},
	"koala.cow": &bintree{koalaCow, map[string]*bintree{}},
	"kosh.cow": &bintree{koshCow, map[string]*bintree{}},
	"luke-koala.cow": &bintree{lukeKoalaCow, map[string]*bintree{}},
	"mech-and-cow.cow": &bintree{mechAndCowCow, map[string]*bintree{}},
	"meow.cow": &bintree{meowCow, map[string]*bintree{}},
	"milk.cow": &bintree{milkCow, map[string]*bintree{}},
	"moofasa.cow": &bintree{moofasaCow, map[string]*bintree{}},
	"moose.cow": &bintree{mooseCow, map[string]*bintree{}},
	"mutilated.cow": &bintree{mutilatedCow, map[string]*bintree{}},
	"pokemon": &bintree{nil, map[string]*bintree{
		"bulbasaur.cow": &bintree{pokemonBulbasaurCow, map[string]*bintree{}},
		"charmander.cow": &bintree{pokemonCharmanderCow, map[string]*bintree{}},
		"kadabra.cow": &bintree{pokemonKadabraCow, map[string]*bintree{}},
		"pikachu.cow": &bintree{pokemonPikachuCow, map[string]*bintree{}},
		"squirtle.cow": &bintree{pokemonSquirtleCow, map[string]*bintree{}},
	}},
	"puking-cow.cow": &bintree{pukingCowCow, map[string]*bintree{}},
	"ren.cow": &bintree{renCow, map[string]*bintree{}},
	"satanic.cow": &bintree{satanicCow, map[string]*bintree{}},
	"sheep.cow": &bintree{sheepCow, map[string]*bintree{}},
	"skeleton.cow": &bintree{skeletonCow, map[string]*bintree{}},
	"small.cow": &bintree{smallCow, map[string]*bintree{}},
	"sodomized.cow": &bintree{sodomizedCow, map[string]*bintree{}},
	"squirrel.cow": &bintree{squirrelCow, map[string]*bintree{}},
	"stegosaurus.cow": &bintree{stegosaurusCow, map[string]*bintree{}},
	"stimpy.cow": &bintree{stimpyCow, map[string]*bintree{}},
	"supermilker.cow": &bintree{supermilkerCow, map[string]*bintree{}},
	"surgery.cow": &bintree{surgeryCow, map[string]*bintree{}},
	"telebears.cow": &bintree{telebearsCow, map[string]*bintree{}},
	"turkey.cow": &bintree{turkeyCow, map[string]*bintree{}},
	"turtle.cow": &bintree{turtleCow, map[string]*bintree{}},
	"tux.cow": &bintree{tuxCow, map[string]*bintree{}},
	"vader-koala.cow": &bintree{vaderKoalaCow, map[string]*bintree{}},
	"vader.cow": &bintree{vaderCow, map[string]*bintree{}},
	"www.cow": &bintree{wwwCow, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

